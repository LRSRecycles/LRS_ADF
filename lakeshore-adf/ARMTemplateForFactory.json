{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "lakeshore-adf"
		},
		"ADP Workforce_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'ADP Workforce'"
		},
		"AzureBlobLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobLinkedService'"
		},
		"LRS_Snowflake_V2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LRS_Snowflake_V2'"
		},
		"ildc93_dm01_SQL_Server_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ildc93_dm01_SQL_Server'",
			"defaultValue": "Integrated Security=False;Data Source=@{linkedService().server};Initial Catalog=@{linkedService().db};User ID=@{linkedService().username};Password=@{linkedService().pw}"
		},
		"msaz01_dm01_SQL_Server_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'msaz01_dm01_SQL_Server'",
			"defaultValue": "Integrated Security=False;Data Source=@{linkedService().server};Initial Catalog=@{linkedService().db};User ID=@{linkedService().username};Password=@{linkedService().pw}"
		},
		"msaz01_dm01_Snowflake_Raw_V2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'msaz01_dm01_Snowflake_Raw_V2'"
		},
		"ADP Workforce_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://lakeshorers-nosso.prd.mykronos.com"
		},
		"ADP Workforce_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "eKyVVdOuXU3tXBFsK4TMNeFKgK87DXRF"
		},
		"LRS_Snowflake_V2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "LRS_RAW"
		},
		"LRS_Snowflake_V2_properties_typeProperties_role": {
			"type": "string",
			"defaultValue": "ACCOUNTADMIN"
		},
		"msaz01_dm01_Azure_Blob_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'msaz01_dm01_Azure_Blob'"
		},
		"msaz01_dm01_Snowflake_Raw_V2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "@{linkedService().database}"
		},
		"msaz01_dm01_Snowflake_Raw_V2_properties_typeProperties_role": {
			"type": "string",
			"defaultValue": "ACCOUNTADMIN"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADP_HOURS_CSV_CONVERSION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get XLS Files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADP_Hours_XLS_ALL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Convert each file to CSV and delete",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get XLS Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get XLS Files').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy XLS file to CSV",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Employee ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Employee ID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Employee Name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Employee Name",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Manager ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Manager ID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Manager Name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Manager Name",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Effective Date",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Effective Date",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Historical Date",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Historical Date",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Home DEPARTMENT",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Home DEPARTMENT",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Home LOCATION",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Home LOCATION",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Home COMPANY",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Home COMPANY",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Home Reserved4",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Home Reserved4",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Home JOBTITLE",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Home JOBTITLE",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Home Reserved6",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Home Reserved6",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Home MANAGER",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Home MANAGER",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Pay Code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Pay Code",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Hours",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Hours",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Money",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Money",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Days",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Days",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Wages",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Wages",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Base Wage",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Base Wage",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Comment(s)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Comment(s)",
														"type": "String",
														"physicalType": "String"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ADP_Hours_XLS",
											"type": "DatasetReference",
											"parameters": {
												"pFilename": {
													"value": "@activity('Get XLS Files').output.itemName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADP_Hours_CSV",
											"type": "DatasetReference",
											"parameters": {
												"pFileName": {
													"value": "@replace(activity('Get XLS Files').output.itemName,'.xls','.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete XLS file",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Copy XLS file to CSV",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ADP_Hours_XLS",
											"type": "DatasetReference",
											"parameters": {
												"pFilename": {
													"value": "@activity('Get XLS Files').output.itemName",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2023-12-07T17:52:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADP_Hours_XLS_ALL')]",
				"[concat(variables('factoryId'), '/datasets/ADP_Hours_XLS')]",
				"[concat(variables('factoryId'), '/datasets/ADP_Hours_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADP_HOURS_DAILY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load ADP Hours",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_process_adp_hours_file",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Production/Orchestration"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-07T21:18:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_process_adp_hours_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADP_WEEKLY_LOAD_Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy ADP Term to Snowflake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Loop Through All Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "File Name",
										"value": {
											"value": "@variables('Var_File_Name')",
											"type": "Expression"
										}
									},
									{
										"name": "Last Modified",
										"value": {
											"value": "@variables('Var_Last_Modified')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "truncate table LRS_SANDBOX.ADP_RAW.ADP_TERMINATION",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Position ID",
											"type": "String"
										},
										"sink": {
											"name": "Position ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Legal Last Name",
											"type": "String"
										},
										"sink": {
											"name": "Legal Last Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Legal First Name",
											"type": "String"
										},
										"sink": {
											"name": "Legal First Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Position Status",
											"type": "String"
										},
										"sink": {
											"name": "Position Status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Home Department Description",
											"type": "String"
										},
										"sink": {
											"name": "Home Department Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Union Local Code",
											"type": "String"
										},
										"sink": {
											"name": "Union Local Code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Job Title Description",
											"type": "String"
										},
										"sink": {
											"name": "Job Title Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Location Code",
											"type": "String"
										},
										"sink": {
											"name": "Location Code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Location Description",
											"type": "String"
										},
										"sink": {
											"name": "Location Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Reports To Legal Name",
											"type": "String"
										},
										"sink": {
											"name": "Reports To Legal Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Hire Date",
											"type": "String"
										},
										"sink": {
											"name": "Hire Date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Termination Date",
											"type": "String"
										},
										"sink": {
											"name": "Termination Date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Termination Reason Description12",
											"type": "String"
										},
										"sink": {
											"name": "Termination Reason Description12",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Termination Reason Description13",
											"type": "String"
										},
										"sink": {
											"name": "Termination Reason Description13",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Worked in State Code",
											"type": "String"
										},
										"sink": {
											"name": "Worked in State Code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Personal Contact: Home Phone",
											"type": "String"
										},
										"sink": {
											"name": "Personal Contact: Home Phone",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Personal Contact: Personal Email",
											"type": "String"
										},
										"sink": {
											"name": "Personal Contact: Personal Email",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Personal Contact: Personal Mobile",
											"type": "String"
										},
										"sink": {
											"name": "Personal Contact: Personal Mobile",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tax Withholdings - Effective Date",
											"type": "String"
										},
										"sink": {
											"name": "Tax Withholdings - Effective Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Employment Profile - Effective Date",
											"type": "String"
										},
										"sink": {
											"name": "Employment Profile - Effective Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "File Name",
											"type": "String"
										},
										"sink": {
											"name": "File Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Last Modified",
											"type": "String"
										},
										"sink": {
											"name": "Last Modified",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ADP_Terminations_Raw_Each_File",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('Var_File_Name')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Sandbox_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "ADP_TERMINATION",
									"Snowflake_Schema": "ADP_RAW"
								}
							}
						]
					},
					{
						"name": "Get All ADP Files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADP_Terminations_Raw_All_Files",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Loop Through All Files",
						"description": "Loop through all ADP Files in the blob storage",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get All ADP Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get All ADP Files').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get Files Attributes",
									"description": "Get File's name and last modified date",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ADP_Terminations_Raw_Each_File",
											"type": "DatasetReference",
											"parameters": {
												"FileName": "@item().name"
											}
										},
										"fieldList": [
											"lastModified",
											"itemName"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"description": "find the newest file using last modified attribute",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Files Attributes",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('Get Files Attributes').output.lastModified, variables('Var_Last_Modified'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "File Name",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "Var_File_Name",
													"value": {
														"value": "@activity('Get Files Attributes').output.itemName",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Last Modified",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "File Name",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "Var_Last_Modified",
													"value": {
														"value": "@activity('Get Files Attributes').output.lastModified",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Get Older FIles",
						"description": "Get files older than 365 days",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Copy ADP Term to Snowflake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADP_Terminations_Raw_All_Files",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"modifiedDatetimeEnd": {
									"value": "@addDays(utcnow(),-365)",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Loop through older files",
						"description": "loop through each files older than 365 days for deletion",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Older FIles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Older FIles').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Delete files older than 365 days",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ADP_Terminations_Raw_Each_File",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Var_File_Name": {
						"type": "String",
						"defaultValue": "terms.csv_2023-09-01T12:48:46Z"
					},
					"Var_Last_Modified": {
						"type": "String",
						"defaultValue": "1900-01-01 00:00:00"
					}
				},
				"folder": {
					"name": "Sandbox/ADP"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:57:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADP_Terminations_Raw_Each_File')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Sandbox_V2')]",
				"[concat(variables('factoryId'), '/datasets/ADP_Terminations_Raw_All_Files')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DELETE ALL OLD TRUX SNOWFLAKE SCHEMAS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Database Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LOOKUP_TRUX_COMBINED",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Database Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Database Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Delete all Schemas",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n'DROP SCHEMA LRS_RAW.', item().Snowflake_Name_OLD\n\t)}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					}
				},
				"folder": {
					"name": "Production/TRUX"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-27T20:53:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/LRS_Snowflake_V2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SOFTPAK_DAILY_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute SOFTPAK SALES pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SOFTPAK_SALES_DAILY_LOAD",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute SOFTPAK DISPOSAL pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SOFTPAK_DISPOSAL_SITE_DAILY_LOAD",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Production/Orchestration"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-02T14:38:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SOFTPAK_SALES_DAILY_LOAD')]",
				"[concat(variables('factoryId'), '/pipelines/SOFTPAK_DISPOSAL_SITE_DAILY_LOAD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SOFTPAK_DISPOSAL_SITE_DAILY_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SoftPak Disposal Site",
						"description": "SoftPak Disposal Site Copy Activity",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "filename",
										"value": "$$FILEPATH"
									},
									{
										"name": "ADF_TIMESTAMP",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "variable_disposal_site_report_*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.SOFTPAK_RAW.VARIABLE_DISPOSAL_SITE_REPORT;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "CO",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "DISPOSAL",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "DATE",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "ROUTE",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 6
										},
										"sink": {
											"name": "DRIVER",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 7
										},
										"sink": {
											"name": "VEHICLE",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 8
										},
										"sink": {
											"name": "TAX BODY",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 9
										},
										"sink": {
											"name": "TICKET",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 10
										},
										"sink": {
											"name": "UNITS",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 11
										},
										"sink": {
											"name": "COST",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 12
										},
										"sink": {
											"name": "BIL$",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 13
										},
										"sink": {
											"name": "ROUTE TYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 14
										},
										"sink": {
											"name": "PROP_13",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "filename",
											"type": "String"
										},
										"sink": {
											"name": "FILE NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ADF_TIMESTAMP",
											"type": "String"
										},
										"sink": {
											"name": "ADF_TIMESTAMP",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SOFTPAK_DISPOSAL_SITE_RAW_ALL_FILES",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VARIABLE_DISPOSAL_SITE_REPORT",
									"Snowflake_Schema": "SOFTPAK_RAW"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Production/SOFTPAK"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SOFTPAK_DISPOSAL_SITE_RAW_ALL_FILES')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SOFTPAK_DISPOSAL_SITE_LOAD_SIMPLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy All Files",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_SANDBOX.SOFTPAK_RAW.VARIABLE_DISPOSAL_SITE_REPORT_SIMPLE",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "CO",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "DISPOSAL",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "DATE",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "ROUTE",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 6
										},
										"sink": {
											"name": "DRIVER",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 7
										},
										"sink": {
											"name": "VEHICLE",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 8
										},
										"sink": {
											"name": "TAX BODY",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 9
										},
										"sink": {
											"name": "TICKET",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 10
										},
										"sink": {
											"name": "UNITS",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 11
										},
										"sink": {
											"name": "COST",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 12
										},
										"sink": {
											"name": "BIL$",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 13
										},
										"sink": {
											"name": "ROUTE TYPE",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SOFTPAK_DISPOSAL_SITE_RAW_ALL_FILES",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Sandbox_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VARIABLE_DISPOSAL_SITE_REPORT_SIMPLE",
									"Snowflake_Schema": "SOFTPAK_RAW"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"File Name": {
						"type": "String"
					},
					"Last Modified": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Sandbox/SOFTPAK"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:57:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SOFTPAK_DISPOSAL_SITE_RAW_ALL_FILES')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Sandbox_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SOFTPAK_DISPOSAL_SITE_SIMPLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SOFTPAK_DISPOSAL_SITE_RAW_ALL_FILES",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Sandbox/SOFTPAK"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-04T19:45:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SOFTPAK_DISPOSAL_SITE_RAW_ALL_FILES')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SOFTPAK_SALES_DAILY_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Variable Sale Report",
						"description": "Copy Variable Sale Report",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "File Name",
										"value": "$$FILEPATH"
									},
									{
										"name": "Last Modified",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.SOFTPAK_RAW.VARIABLE_SALES_REPORT;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCT YYMM",
											"type": "String"
										},
										"sink": {
											"name": "ACCT YYMM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "COMPANY",
											"type": "String"
										},
										"sink": {
											"name": "COMPANY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUST #",
											"type": "String"
										},
										"sink": {
											"name": "CUST #",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUST NAME",
											"type": "String"
										},
										"sink": {
											"name": "CUST NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TAXBODY",
											"type": "String"
										},
										"sink": {
											"name": "TAXBODY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CYCLE",
											"type": "String"
										},
										"sink": {
											"name": "CYCLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "GL CODE",
											"type": "String"
										},
										"sink": {
											"name": "GL CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DATE",
											"type": "String"
										},
										"sink": {
											"name": "DATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SIZE CD",
											"type": "String"
										},
										"sink": {
											"name": "SIZE CD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CHG CD",
											"type": "String"
										},
										"sink": {
											"name": "CHG CD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION",
											"type": "String"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EQUIP CD",
											"type": "String"
										},
										"sink": {
											"name": "EQUIP CD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VAR 3",
											"type": "String"
										},
										"sink": {
											"name": "VAR 3",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VAR 4",
											"type": "String"
										},
										"sink": {
											"name": "VAR 4",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QTY",
											"type": "String"
										},
										"sink": {
											"name": "QTY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILLED AMT",
											"type": "String"
										},
										"sink": {
											"name": "BILLED AMT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MASTER AMT",
											"type": "String"
										},
										"sink": {
											"name": "MASTER AMT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VARIANCE",
											"type": "String"
										},
										"sink": {
											"name": "VARIANCE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VAR FLAG",
											"type": "String"
										},
										"sink": {
											"name": "VAR FLAG",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "INV #",
											"type": "String"
										},
										"sink": {
											"name": "INV #",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "W/O ACT DATE",
											"type": "String"
										},
										"sink": {
											"name": "W/O ACT DATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SUB COMP",
											"type": "String"
										},
										"sink": {
											"name": "SUB COMP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SUB CUST #",
											"type": "String"
										},
										"sink": {
											"name": "SUB CUST #",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ORIG W/O#",
											"type": "String"
										},
										"sink": {
											"name": "ORIG W/O#",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ADJ USER",
											"type": "String"
										},
										"sink": {
											"name": "ADJ USER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUST START",
											"type": "String"
										},
										"sink": {
											"name": "CUST START",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUST STOP",
											"type": "String"
										},
										"sink": {
											"name": "CUST STOP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL FIRST NAME",
											"type": "String"
										},
										"sink": {
											"name": "BILL FIRST NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL LAST NAME",
											"type": "String"
										},
										"sink": {
											"name": "BILL LAST NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL ADDRESS #",
											"type": "String"
										},
										"sink": {
											"name": "BILL ADDRESS #",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL ST DIR",
											"type": "String"
										},
										"sink": {
											"name": "BILL ST DIR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL ST NAME",
											"type": "String"
										},
										"sink": {
											"name": "BILL ST NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL ST SUFFIX",
											"type": "String"
										},
										"sink": {
											"name": "BILL ST SUFFIX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL ST DIR2",
											"type": "String"
										},
										"sink": {
											"name": "BILL ST DIR2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL APT",
											"type": "String"
										},
										"sink": {
											"name": "BILL APT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL ADDRESS-2",
											"type": "String"
										},
										"sink": {
											"name": "BILL ADDRESS-2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL CITY",
											"type": "String"
										},
										"sink": {
											"name": "BILL CITY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL STATE",
											"type": "String"
										},
										"sink": {
											"name": "BILL STATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL ZIP",
											"type": "String"
										},
										"sink": {
											"name": "BILL ZIP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SERV NAME",
											"type": "String"
										},
										"sink": {
											"name": "SERV NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SERV ADDRESS #",
											"type": "String"
										},
										"sink": {
											"name": "SERV ADDRESS #",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SERV ST DIR",
											"type": "String"
										},
										"sink": {
											"name": "SERV ST DIR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SERV ST NAME",
											"type": "String"
										},
										"sink": {
											"name": "SERV ST NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SERV ST SUFFIX",
											"type": "String"
										},
										"sink": {
											"name": "SERV ST SUFFIX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SERV ST DIR2",
											"type": "String"
										},
										"sink": {
											"name": "SERV ST DIR2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SERV APT",
											"type": "String"
										},
										"sink": {
											"name": "SERV APT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SERV ADDRESS-2",
											"type": "String"
										},
										"sink": {
											"name": "SERV ADDRESS-2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SERV CITY",
											"type": "String"
										},
										"sink": {
											"name": "SERV CITY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SERV STATE",
											"type": "String"
										},
										"sink": {
											"name": "SERV STATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SERV ZIP",
											"type": "String"
										},
										"sink": {
											"name": "SERV ZIP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AREA CODE",
											"type": "String"
										},
										"sink": {
											"name": "AREA CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PHONE #",
											"type": "String"
										},
										"sink": {
											"name": "PHONE #",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CR LIMIT",
											"type": "String"
										},
										"sink": {
											"name": "CR LIMIT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VARIABLE 1",
											"type": "String"
										},
										"sink": {
											"name": "VARIABLE 1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VARIABLE 2",
											"type": "String"
										},
										"sink": {
											"name": "VARIABLE 2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CONTACT",
											"type": "String"
										},
										"sink": {
											"name": "CONTACT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RES CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "RES CUSTOMER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PREV CYCLE",
											"type": "String"
										},
										"sink": {
											"name": "PREV CYCLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRICE LIST",
											"type": "String"
										},
										"sink": {
											"name": "PRICE LIST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UOM",
											"type": "String"
										},
										"sink": {
											"name": "UOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UNITS",
											"type": "String"
										},
										"sink": {
											"name": "UNITS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALES ID",
											"type": "String"
										},
										"sink": {
											"name": "SALES ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FEE CODE",
											"type": "String"
										},
										"sink": {
											"name": "FEE CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ROUTE",
											"type": "String"
										},
										"sink": {
											"name": "ROUTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VEHICLE",
											"type": "String"
										},
										"sink": {
											"name": "VEHICLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DRIVER",
											"type": "String"
										},
										"sink": {
											"name": "DRIVER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LANDFILL CODE",
											"type": "String"
										},
										"sink": {
											"name": "LANDFILL CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TICKET #",
											"type": "String"
										},
										"sink": {
											"name": "TICKET #",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "COST",
											"type": "String"
										},
										"sink": {
											"name": "COST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BIN TYPE",
											"type": "String"
										},
										"sink": {
											"name": "BIN TYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RATE",
											"type": "String"
										},
										"sink": {
											"name": "RATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SVC TYPE",
											"type": "String"
										},
										"sink": {
											"name": "SVC TYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "File Name",
											"type": "String"
										},
										"sink": {
											"name": "File Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Last Modified",
											"type": "String"
										},
										"sink": {
											"name": "ADF_TIMESTAMP",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SOFTPAK_SALES_RAW_ALL_FILES",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VARIABLE_SALES_REPORT",
									"Snowflake_Schema": "SOFTPAK_RAW"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Production/SOFTPAK"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SOFTPAK_SALES_RAW_ALL_FILES')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SOFTPAK_SALES_DAILY_LOAD_Done')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get All FIles",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Truncate Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SOFTPAK_SALES_RAW_ALL_FILES",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get All FIles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get All Files').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get Each Files info",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "SOFTPAK_SALES_RAW_EACH_FILE",
											"type": "DatasetReference",
											"parameters": {
												"pFilename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"itemName",
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "Copy Data to Snowflake",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get Each Files info",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FileName",
													"value": {
														"value": "@activity('Get Each Files info').output.itemName",
														"type": "Expression"
													}
												},
												{
													"name": "LastModified",
													"value": {
														"value": "@activity('Get Each Files info').output.lastModified",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ACCT YYMM",
														"type": "String"
													},
													"sink": {
														"name": "ACCT YYMM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "COMPANY",
														"type": "String"
													},
													"sink": {
														"name": "COMPANY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CUST #",
														"type": "String"
													},
													"sink": {
														"name": "CUST #",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CUST NAME",
														"type": "String"
													},
													"sink": {
														"name": "CUST NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TAXBODY",
														"type": "String"
													},
													"sink": {
														"name": "TAXBODY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CYCLE",
														"type": "String"
													},
													"sink": {
														"name": "CYCLE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "GL CODE",
														"type": "String"
													},
													"sink": {
														"name": "GL CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DATE",
														"type": "String"
													},
													"sink": {
														"name": "DATE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SIZE CD",
														"type": "String"
													},
													"sink": {
														"name": "SIZE CD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CHG CD",
														"type": "String"
													},
													"sink": {
														"name": "CHG CD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DESCRIPTION",
														"type": "String"
													},
													"sink": {
														"name": "DESCRIPTION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "EQUIP CD",
														"type": "String"
													},
													"sink": {
														"name": "EQUIP CD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "VAR 3",
														"type": "String"
													},
													"sink": {
														"name": "VAR 3",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "VAR 4",
														"type": "String"
													},
													"sink": {
														"name": "VAR 4",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QTY",
														"type": "String"
													},
													"sink": {
														"name": "QTY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BILLED AMT",
														"type": "String"
													},
													"sink": {
														"name": "BILLED AMT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "MASTER AMT",
														"type": "String"
													},
													"sink": {
														"name": "MASTER AMT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "VARIANCE",
														"type": "String"
													},
													"sink": {
														"name": "VARIANCE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "VAR FLAG",
														"type": "String"
													},
													"sink": {
														"name": "VAR FLAG",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "INV #",
														"type": "String"
													},
													"sink": {
														"name": "INV #",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "W/O ACT DATE",
														"type": "String"
													},
													"sink": {
														"name": "W/O ACT DATE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SUB COMP",
														"type": "String"
													},
													"sink": {
														"name": "SUB COMP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SUB CUST #",
														"type": "String"
													},
													"sink": {
														"name": "SUB CUST #",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ORIG W/O#",
														"type": "String"
													},
													"sink": {
														"name": "ORIG W/O#",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ADJ USER",
														"type": "String"
													},
													"sink": {
														"name": "ADJ USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CUST START",
														"type": "String"
													},
													"sink": {
														"name": "CUST START",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CUST STOP",
														"type": "String"
													},
													"sink": {
														"name": "CUST STOP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BILL FIRST NAME",
														"type": "String"
													},
													"sink": {
														"name": "BILL FIRST NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BILL LAST NAME",
														"type": "String"
													},
													"sink": {
														"name": "BILL LAST NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BILL ADDRESS #",
														"type": "String"
													},
													"sink": {
														"name": "BILL ADDRESS #",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BILL ST DIR",
														"type": "String"
													},
													"sink": {
														"name": "BILL ST DIR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BILL ST NAME",
														"type": "String"
													},
													"sink": {
														"name": "BILL ST NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BILL ST SUFFIX",
														"type": "String"
													},
													"sink": {
														"name": "BILL ST SUFFIX",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BILL ST DIR2",
														"type": "String"
													},
													"sink": {
														"name": "BILL ST DIR2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BILL APT",
														"type": "String"
													},
													"sink": {
														"name": "BILL APT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BILL ADDRESS-2",
														"type": "String"
													},
													"sink": {
														"name": "BILL ADDRESS-2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BILL CITY",
														"type": "String"
													},
													"sink": {
														"name": "BILL CITY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BILL STATE",
														"type": "String"
													},
													"sink": {
														"name": "BILL STATE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BILL ZIP",
														"type": "String"
													},
													"sink": {
														"name": "BILL ZIP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SERV NAME",
														"type": "String"
													},
													"sink": {
														"name": "SERV NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SERV ADDRESS #",
														"type": "String"
													},
													"sink": {
														"name": "SERV ADDRESS #",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SERV ST DIR",
														"type": "String"
													},
													"sink": {
														"name": "SERV ST DIR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SERV ST NAME",
														"type": "String"
													},
													"sink": {
														"name": "SERV ST NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SERV ST SUFFIX",
														"type": "String"
													},
													"sink": {
														"name": "SERV ST SUFFIX",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SERV ST DIR2",
														"type": "String"
													},
													"sink": {
														"name": "SERV ST DIR2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SERV APT",
														"type": "String"
													},
													"sink": {
														"name": "SERV APT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SERV ADDRESS-2",
														"type": "String"
													},
													"sink": {
														"name": "SERV ADDRESS-2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SERV CITY",
														"type": "String"
													},
													"sink": {
														"name": "SERV CITY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SERV STATE",
														"type": "String"
													},
													"sink": {
														"name": "SERV STATE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SERV ZIP",
														"type": "String"
													},
													"sink": {
														"name": "SERV ZIP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AREA CODE",
														"type": "String"
													},
													"sink": {
														"name": "AREA CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PHONE #",
														"type": "String"
													},
													"sink": {
														"name": "PHONE #",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CR LIMIT",
														"type": "String"
													},
													"sink": {
														"name": "CR LIMIT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "VARIABLE 1",
														"type": "String"
													},
													"sink": {
														"name": "VARIABLE 1",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "VARIABLE 2",
														"type": "String"
													},
													"sink": {
														"name": "VARIABLE 2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CONTACT",
														"type": "String"
													},
													"sink": {
														"name": "CONTACT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RES CUSTOMER",
														"type": "String"
													},
													"sink": {
														"name": "RES CUSTOMER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PREV CYCLE",
														"type": "String"
													},
													"sink": {
														"name": "PREV CYCLE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PRICE LIST",
														"type": "String"
													},
													"sink": {
														"name": "PRICE LIST",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "MATERIAL",
														"type": "String"
													},
													"sink": {
														"name": "MATERIAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "UOM",
														"type": "String"
													},
													"sink": {
														"name": "UOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "UNITS",
														"type": "String"
													},
													"sink": {
														"name": "UNITS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SALES ID",
														"type": "String"
													},
													"sink": {
														"name": "SALES ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "FEE CODE",
														"type": "String"
													},
													"sink": {
														"name": "FEE CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ROUTE",
														"type": "String"
													},
													"sink": {
														"name": "ROUTE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "VEHICLE",
														"type": "String"
													},
													"sink": {
														"name": "VEHICLE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DRIVER",
														"type": "String"
													},
													"sink": {
														"name": "DRIVER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LANDFILL CODE",
														"type": "String"
													},
													"sink": {
														"name": "LANDFILL CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TICKET #",
														"type": "String"
													},
													"sink": {
														"name": "TICKET #",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "COST",
														"type": "String"
													},
													"sink": {
														"name": "COST",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BIN TYPE",
														"type": "String"
													},
													"sink": {
														"name": "BIN TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RATE",
														"type": "String"
													},
													"sink": {
														"name": "RATE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SVC TYPE",
														"type": "String"
													},
													"sink": {
														"name": "SVC TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "FileName",
														"type": "String"
													},
													"sink": {
														"name": "File Name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LastModified",
														"type": "String"
													},
													"sink": {
														"name": "Last Modified",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SOFTPAK_SALES_RAW_EACH_FILE",
											"type": "DatasetReference",
											"parameters": {
												"pFilename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Sandbox_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "VARIABLE_SALES_REPORT",
												"Snowflake_Schema": "SOFTPAK_RAW"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Truncate Table",
						"description": "Truncate old Files",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "LRS_Snowflake_V2",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE LRS_SANDBOX.SOFTPAK_RAW.VARIABLE_SALES_REPORT"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"vFileName": {
						"type": "String"
					},
					"vLastModified": {
						"type": "String",
						"defaultValue": "1900-01-01"
					}
				},
				"folder": {
					"name": "Sandbox/SOFTPAK"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-28T15:28:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SOFTPAK_SALES_RAW_ALL_FILES')]",
				"[concat(variables('factoryId'), '/linkedServices/LRS_Snowflake_V2')]",
				"[concat(variables('factoryId'), '/datasets/SOFTPAK_SALES_RAW_EACH_FILE')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Sandbox_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SOFTPAK_SALES_DAILY_SIMPLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Variable Sale Report",
						"description": "Copy Variable Sale Report",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "File Name",
										"value": "$$FILEPATH"
									},
									{
										"name": "Last Modified",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_SANDBOX.SOFTPAK_RAW.VARIABLE_SALES_REPORT_SIMPLE",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCT YYMM",
											"type": "String"
										},
										"sink": {
											"name": "ACCT YYMM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "COMPANY",
											"type": "String"
										},
										"sink": {
											"name": "COMPANY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUST #",
											"type": "String"
										},
										"sink": {
											"name": "CUST #",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUST NAME",
											"type": "String"
										},
										"sink": {
											"name": "CUST NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TAXBODY",
											"type": "String"
										},
										"sink": {
											"name": "TAXBODY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CYCLE",
											"type": "String"
										},
										"sink": {
											"name": "CYCLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "GL CODE",
											"type": "String"
										},
										"sink": {
											"name": "GL CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DATE",
											"type": "String"
										},
										"sink": {
											"name": "DATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SIZE CD",
											"type": "String"
										},
										"sink": {
											"name": "SIZE CD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CHG CD",
											"type": "String"
										},
										"sink": {
											"name": "CHG CD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION",
											"type": "String"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EQUIP CD",
											"type": "String"
										},
										"sink": {
											"name": "EQUIP CD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VAR 3",
											"type": "String"
										},
										"sink": {
											"name": "VAR 3",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VAR 4",
											"type": "String"
										},
										"sink": {
											"name": "VAR 4",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QTY",
											"type": "String"
										},
										"sink": {
											"name": "QTY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILLED AMT",
											"type": "String"
										},
										"sink": {
											"name": "BILLED AMT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MASTER AMT",
											"type": "String"
										},
										"sink": {
											"name": "MASTER AMT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VARIANCE",
											"type": "String"
										},
										"sink": {
											"name": "VARIANCE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VAR FLAG",
											"type": "String"
										},
										"sink": {
											"name": "VAR FLAG",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "INV #",
											"type": "String"
										},
										"sink": {
											"name": "INV #",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "W/O ACT DATE",
											"type": "String"
										},
										"sink": {
											"name": "W/O ACT DATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SUB COMP",
											"type": "String"
										},
										"sink": {
											"name": "SUB COMP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SUB CUST #",
											"type": "String"
										},
										"sink": {
											"name": "SUB CUST #",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ORIG W/O#",
											"type": "String"
										},
										"sink": {
											"name": "ORIG W/O#",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ADJ USER",
											"type": "String"
										},
										"sink": {
											"name": "ADJ USER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUST START",
											"type": "String"
										},
										"sink": {
											"name": "CUST START",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUST STOP",
											"type": "String"
										},
										"sink": {
											"name": "CUST STOP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL FIRST NAME",
											"type": "String"
										},
										"sink": {
											"name": "BILL FIRST NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL LAST NAME",
											"type": "String"
										},
										"sink": {
											"name": "BILL LAST NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL ADDRESS #",
											"type": "String"
										},
										"sink": {
											"name": "BILL ADDRESS #",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL ST DIR",
											"type": "String"
										},
										"sink": {
											"name": "BILL ST DIR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL ST NAME",
											"type": "String"
										},
										"sink": {
											"name": "BILL ST NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL ST SUFFIX",
											"type": "String"
										},
										"sink": {
											"name": "BILL ST SUFFIX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL ST DIR2",
											"type": "String"
										},
										"sink": {
											"name": "BILL ST DIR2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL APT",
											"type": "String"
										},
										"sink": {
											"name": "BILL APT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL ADDRESS-2",
											"type": "String"
										},
										"sink": {
											"name": "BILL ADDRESS-2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL CITY",
											"type": "String"
										},
										"sink": {
											"name": "BILL CITY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL STATE",
											"type": "String"
										},
										"sink": {
											"name": "BILL STATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BILL ZIP",
											"type": "String"
										},
										"sink": {
											"name": "BILL ZIP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SERV NAME",
											"type": "String"
										},
										"sink": {
											"name": "SERV NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SERV ADDRESS #",
											"type": "String"
										},
										"sink": {
											"name": "SERV ADDRESS #",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SERV ST DIR",
											"type": "String"
										},
										"sink": {
											"name": "SERV ST DIR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SERV ST NAME",
											"type": "String"
										},
										"sink": {
											"name": "SERV ST NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SERV ST SUFFIX",
											"type": "String"
										},
										"sink": {
											"name": "SERV ST SUFFIX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SERV ST DIR2",
											"type": "String"
										},
										"sink": {
											"name": "SERV ST DIR2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SERV APT",
											"type": "String"
										},
										"sink": {
											"name": "SERV APT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SERV ADDRESS-2",
											"type": "String"
										},
										"sink": {
											"name": "SERV ADDRESS-2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SERV CITY",
											"type": "String"
										},
										"sink": {
											"name": "SERV CITY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SERV STATE",
											"type": "String"
										},
										"sink": {
											"name": "SERV STATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SERV ZIP",
											"type": "String"
										},
										"sink": {
											"name": "SERV ZIP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AREA CODE",
											"type": "String"
										},
										"sink": {
											"name": "AREA CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PHONE #",
											"type": "String"
										},
										"sink": {
											"name": "PHONE #",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CR LIMIT",
											"type": "String"
										},
										"sink": {
											"name": "CR LIMIT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VARIABLE 1",
											"type": "String"
										},
										"sink": {
											"name": "VARIABLE 1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VARIABLE 2",
											"type": "String"
										},
										"sink": {
											"name": "VARIABLE 2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CONTACT",
											"type": "String"
										},
										"sink": {
											"name": "CONTACT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RES CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "RES CUSTOMER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PREV CYCLE",
											"type": "String"
										},
										"sink": {
											"name": "PREV CYCLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRICE LIST",
											"type": "String"
										},
										"sink": {
											"name": "PRICE LIST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UOM",
											"type": "String"
										},
										"sink": {
											"name": "UOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UNITS",
											"type": "String"
										},
										"sink": {
											"name": "UNITS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALES ID",
											"type": "String"
										},
										"sink": {
											"name": "SALES ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FEE CODE",
											"type": "String"
										},
										"sink": {
											"name": "FEE CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ROUTE",
											"type": "String"
										},
										"sink": {
											"name": "ROUTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VEHICLE",
											"type": "String"
										},
										"sink": {
											"name": "VEHICLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DRIVER",
											"type": "String"
										},
										"sink": {
											"name": "DRIVER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LANDFILL CODE",
											"type": "String"
										},
										"sink": {
											"name": "LANDFILL CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TICKET #",
											"type": "String"
										},
										"sink": {
											"name": "TICKET #",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "COST",
											"type": "String"
										},
										"sink": {
											"name": "COST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BIN TYPE",
											"type": "String"
										},
										"sink": {
											"name": "BIN TYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RATE",
											"type": "String"
										},
										"sink": {
											"name": "RATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SVC TYPE",
											"type": "String"
										},
										"sink": {
											"name": "SVC TYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "File Name",
											"type": "String"
										},
										"sink": {
											"name": "File Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Last Modified",
											"type": "String"
										},
										"sink": {
											"name": "Last Modified",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SOFTPAK_SALES_RAW_ALL_FILES",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Sandbox_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VARIABLE_SALES_REPORT_SIMPLE",
									"Snowflake_Schema": "SOFTPAK_RAW"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Sandbox/SOFTPAK"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:57:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SOFTPAK_SALES_RAW_ALL_FILES')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Sandbox_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TOWER FULL LOAD PIPELINE_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Tower EquipmentType Table",
						"description": "Copy activity for dbo.EQUIPEMNT TYPE table. \nCopy activity requires physical mapping of schema in the mapping tab due to data type issues.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.EQUIPMENTTYPE;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EquipmentType",
											"type": "String"
										},
										"sink": {
											"name": "EQUIPMENTTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EquipmentTypeUID",
											"type": "Guid"
										},
										"sink": {
											"name": "EQUIPMENTTYPEUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EquipmentCategory",
											"type": "String"
										},
										"sink": {
											"name": "EQUIPMENTCATEGORY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StandardCost",
											"type": "Decimal"
										},
										"sink": {
											"name": "STANDARDCOST",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String"
										},
										"sink": {
											"name": "MODEL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Serialized",
											"type": "Int16"
										},
										"sink": {
											"name": "SERIALIZED",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SoldToCustomer",
											"type": "Int16"
										},
										"sink": {
											"name": "SOLDTOCUSTOMER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Reusable",
											"type": "Int16"
										},
										"sink": {
											"name": "REUSABLE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "MaterialCat",
											"type": "String"
										},
										"sink": {
											"name": "MATERIALCAT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PropertyListUID",
											"type": "Guid"
										},
										"sink": {
											"name": "PROPERTYLISTUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Int16"
										},
										"sink": {
											"name": "ACTIVE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AvailableInManifestEntry",
											"type": "Int16"
										},
										"sink": {
											"name": "AVAILABLEINMANIFESTENTRY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TareWeight",
											"type": "Decimal"
										},
										"sink": {
											"name": "TAREWEIGHT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "MinimumWeight",
											"type": "Decimal"
										},
										"sink": {
											"name": "MINIMUMWEIGHT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "MaximumWeight",
											"type": "Decimal"
										},
										"sink": {
											"name": "MAXIMUMWEIGHT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "WeightUOM",
											"type": "String"
										},
										"sink": {
											"name": "WEIGHTUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MaximumReusableScanLimit",
											"type": "Int32"
										},
										"sink": {
											"name": "MAXIMUMREUSABLESCANLIMIT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MaximumReusableScanLimitExceededMessage",
											"type": "String"
										},
										"sink": {
											"name": "MAXIMUMREUSABLESCANLIMITEXCEEDEDMESSAGE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MaximumInches",
											"type": "Decimal"
										},
										"sink": {
											"name": "MAXIMUMINCHES",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PoundsPerGallon",
											"type": "Decimal"
										},
										"sink": {
											"name": "POUNDSPERGALLON",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PoundsPerInch",
											"type": "Decimal"
										},
										"sink": {
											"name": "POUNDSPERINCH",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "UpsRoadNetSyncOrderType",
											"type": "String"
										},
										"sink": {
											"name": "UPSROADNETSYNCORDERTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InUse",
											"type": "Boolean"
										},
										"sink": {
											"name": "INUSE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UnitDemand",
											"type": "Decimal"
										},
										"sink": {
											"name": "UNITDEMAND",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "UnitUOM",
											"type": "String"
										},
										"sink": {
											"name": "UNITUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IsChildEquipmentType",
											"type": "Boolean"
										},
										"sink": {
											"name": "ISCHILDEQUIPMENTTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RentalDeliveryChargeSvcCode",
											"type": "String"
										},
										"sink": {
											"name": "RENTALDELIVERYCHARGESVCCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RentalQuantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "RENTALQUANTITY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RentalQuantityUOM",
											"type": "String"
										},
										"sink": {
											"name": "RENTALQUANTITYUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InterfaceCode",
											"type": "String"
										},
										"sink": {
											"name": "INTERFACECODE",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "EQUIPMENTTYPE"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "EQUIPMENTTYPE",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Tower EQUIPMENTCATEGORY",
						"description": "Copy activity for dbo.EQUIPMENTCATEGORY table. \nCopy activity requires physical mapping of schema in the mapping tab due to data type issues.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower EquipmentType Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.EQUIPMENTCATEGORY;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EquipmentCategory",
											"type": "String"
										},
										"sink": {
											"name": "EQUIPMENTCATEGORY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EquipmentCategoryUID",
											"type": "Guid"
										},
										"sink": {
											"name": "EQUIPMENTCATEGORYUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Volume",
											"type": "Decimal"
										},
										"sink": {
											"name": "VOLUME",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "VolumeUOM",
											"type": "String"
										},
										"sink": {
											"name": "VOLUMEUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PropertyListUID",
											"type": "Guid"
										},
										"sink": {
											"name": "PROPERTYLISTUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Int16"
										},
										"sink": {
											"name": "ACTIVE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DisplayInManifestProcessing",
											"type": "Int16"
										},
										"sink": {
											"name": "DISPLAYINMANIFESTPROCESSING",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultEquipmentType",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTEQUIPMENTTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DisplayInWorkOrderCompletion",
											"type": "Int16"
										},
										"sink": {
											"name": "DISPLAYINWORKORDERCOMPLETION",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "BICSetoutType",
											"type": "String"
										},
										"sink": {
											"name": "BICSETOUTTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SupplyDemand",
											"type": "Decimal"
										},
										"sink": {
											"name": "SUPPLYDEMAND",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SupplyUOM",
											"type": "String"
										},
										"sink": {
											"name": "SUPPLYUOM",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "EQUIPMENTCATEGORY"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "EQUIPMENTCATEGORY",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Tower UOM",
						"description": "Copy activity for dbo.UOMtable. \nCopy activity requires physical mapping of schema in the mapping tab due to data type issues.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower EQUIPMENTCATEGORY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.UOM;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "UOM",
											"type": "String"
										},
										"sink": {
											"name": "UOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UOMUID",
											"type": "Guid"
										},
										"sink": {
											"name": "UOMUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Singular",
											"type": "String"
										},
										"sink": {
											"name": "SINGULAR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Plural",
											"type": "String"
										},
										"sink": {
											"name": "PLURAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Abbrev",
											"type": "String"
										},
										"sink": {
											"name": "ABBREV",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "Int16"
										},
										"sink": {
											"name": "CATEGORY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DecimalPlaces",
											"type": "Int16"
										},
										"sink": {
											"name": "DECIMALPLACES",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RelativeFactor",
											"type": "Decimal"
										},
										"sink": {
											"name": "RELATIVEFACTOR",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Int16"
										},
										"sink": {
											"name": "ACTIVE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "EntryType",
											"type": "Int16"
										},
										"sink": {
											"name": "ENTRYTYPE",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "UOM"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "UOM",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Tower SERVICENOTE",
						"description": "Copy activity for dbo.SERVICENOTE table.\nCopy activity requires physical mapping of schema in the mapping tab due to data type issues.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower UOM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.SERVICENOTE;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ServiceNoteUID",
											"type": "Guid"
										},
										"sink": {
											"name": "SERVICENOTEUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ServiceUID",
											"type": "Guid"
										},
										"sink": {
											"name": "SERVICEUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NoteStartDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "NOTESTARTDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NoteEndDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "NOTEENDDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ServiceNote",
											"type": "String"
										},
										"sink": {
											"name": "SERVICENOTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IsPriority",
											"type": "Int16"
										},
										"sink": {
											"name": "ISPRIORITY",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "SERVICENOTE"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "SERVICENOTE",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Tower WORKFLOWCODE",
						"description": "Copy activity for dbo.WORKFLOWCODE table. \nCopy activity requires physical mapping of schema in the mapping tab due to data type issues.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower SERVICENOTE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.WORKFLOWCODE;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "WorkflowCode",
											"type": "String"
										},
										"sink": {
											"name": "WORKFLOWCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WorkflowCodeUID",
											"type": "Guid"
										},
										"sink": {
											"name": "WORKFLOWCODEUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IsWorkOrderItem",
											"type": "Int16"
										},
										"sink": {
											"name": "ISWORKORDERITEM",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "EquipmentMoveType",
											"type": "Int16"
										},
										"sink": {
											"name": "EQUIPMENTMOVETYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Int16"
										},
										"sink": {
											"name": "ACTIVE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "WorkflowDetailedNotes",
											"type": "String"
										},
										"sink": {
											"name": "WORKFLOWDETAILEDNOTES",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HaulEquivalency",
											"type": "Decimal"
										},
										"sink": {
											"name": "HAULEQUIVALENCY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AllowIneTower",
											"type": "Int16"
										},
										"sink": {
											"name": "ALLOWINETOWER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultTripType",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTTRIPTYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RequireDisposalEntry",
											"type": "Int16"
										},
										"sink": {
											"name": "REQUIREDISPOSALENTRY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "UpsRoadNetSyncNotifyAheadDays",
											"type": "Int16"
										},
										"sink": {
											"name": "UPSROADNETSYNCNOTIFYAHEADDAYS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "IsActivity",
											"type": "Boolean"
										},
										"sink": {
											"name": "ISACTIVITY",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "WORKFLOWCODE"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "WORKFLOWCODE",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Tower SETUP",
						"description": "Copy activity for dbo.SETUP table. \nCopy activity requires physical mapping of schema in the mapping tab due to data type issues.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower WORKFLOWCODE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.SETUP;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SetupUID",
											"type": "Guid"
										},
										"sink": {
											"name": "SETUPUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SplitIDsByServer",
											"type": "Int16"
										},
										"sink": {
											"name": "SPLITIDSBYSERVER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "GLAcctSegments",
											"type": "String"
										},
										"sink": {
											"name": "GLACCTSEGMENTS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CurrentPeriod",
											"type": "String"
										},
										"sink": {
											"name": "CURRENTPERIOD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FinalBillingCycle",
											"type": "String"
										},
										"sink": {
											"name": "FINALBILLINGCYCLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NSFFeeSvcCode",
											"type": "String"
										},
										"sink": {
											"name": "NSFFEESVCCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultNSFFee",
											"type": "Decimal"
										},
										"sink": {
											"name": "DEFAULTNSFFEE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "MinimumChargeSvcCode",
											"type": "String"
										},
										"sink": {
											"name": "MINIMUMCHARGESVCCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SchedulingBaseDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "SCHEDULINGBASEDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ScheduledThroughDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "SCHEDULEDTHROUGHDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DisplayCanceledServiceDays",
											"type": "Int16"
										},
										"sink": {
											"name": "DISPLAYCANCELEDSERVICEDAYS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OverrideRequiredDaysPastDue",
											"type": "Int16"
										},
										"sink": {
											"name": "OVERRIDEREQUIREDDAYSPASTDUE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OverrideRequiredCreditLimit",
											"type": "Int16"
										},
										"sink": {
											"name": "OVERRIDEREQUIREDCREDITLIMIT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OverrideRequiredCreditHold",
											"type": "Int16"
										},
										"sink": {
											"name": "OVERRIDEREQUIREDCREDITHOLD",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultCostPerHour",
											"type": "Decimal"
										},
										"sink": {
											"name": "DEFAULTCOSTPERHOUR",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultCostPerOdometerUnit",
											"type": "Decimal"
										},
										"sink": {
											"name": "DEFAULTCOSTPERODOMETERUNIT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ErrorNotifyWorker",
											"type": "String"
										},
										"sink": {
											"name": "ERRORNOTIFYWORKER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ErrorNotifyLevel",
											"type": "Int16"
										},
										"sink": {
											"name": "ERRORNOTIFYLEVEL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultCustClass",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTCUSTCLASS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultRevenueAcct",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTREVENUEACCT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultFinanceChargeAcct",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTFINANCECHARGEACCT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultARAcct",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTARACCT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultURAcct",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTURACCT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultPaymentAcct",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTPAYMENTACCT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultCreditWriteOffAcct",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTCREDITWRITEOFFACCT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultBalanceWriteOffAcct",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTBALANCEWRITEOFFACCT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DepositLiabilityAcct",
											"type": "String"
										},
										"sink": {
											"name": "DEPOSITLIABILITYACCT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RefundAcct",
											"type": "String"
										},
										"sink": {
											"name": "REFUNDACCT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultLengthUOM",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTLENGTHUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultVolumeUOM",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTVOLUMEUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultWeightUOM",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTWEIGHTUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultFuelUOM",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTFUELUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultDensityWeightUOM",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTDENSITYWEIGHTUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultSiteNotifyByEmail",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTSITENOTIFYBYEMAIL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultCustNotifyByEmail",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTCUSTNOTIFYBYEMAIL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultInvoiceByEmail",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTINVOICEBYEMAIL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultCountry",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTCOUNTRY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EncryptedClientUID",
											"type": "String"
										},
										"sink": {
											"name": "ENCRYPTEDCLIENTUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AvgDaysToPayInterval",
											"type": "Int32"
										},
										"sink": {
											"name": "AVGDAYSTOPAYINTERVAL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AuthorizationMethod",
											"type": "Int16"
										},
										"sink": {
											"name": "AUTHORIZATIONMETHOD",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "EnablePOAmounts",
											"type": "Int16"
										},
										"sink": {
											"name": "ENABLEPOAMOUNTS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultRatePrecision",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTRATEPRECISION",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultCreditLimit",
											"type": "Decimal"
										},
										"sink": {
											"name": "DEFAULTCREDITLIMIT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AllowAutoOnCall",
											"type": "Int16"
										},
										"sink": {
											"name": "ALLOWAUTOONCALL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AllowAnniversaryBillingCycles",
											"type": "Int16"
										},
										"sink": {
											"name": "ALLOWANNIVERSARYBILLINGCYCLES",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "LimitBillingCyclesByCompany",
											"type": "Int16"
										},
										"sink": {
											"name": "LIMITBILLINGCYCLESBYCOMPANY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RateVarianceApprovalPct",
											"type": "Decimal"
										},
										"sink": {
											"name": "RATEVARIANCEAPPROVALPCT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "WorkOrderChargesUseRouteSvcAreaSegment",
											"type": "Int16"
										},
										"sink": {
											"name": "WORKORDERCHARGESUSEROUTESVCAREASEGMENT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultAutoApply",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTAUTOAPPLY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultAssessFinanceCharge",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTASSESSFINANCECHARGE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultPrintDunningMsg",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTPRINTDUNNINGMSG",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultAssessSurcharge",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTASSESSSURCHARGE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultAssessFranchiseFee",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTASSESSFRANCHISEFEE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultBillZeroRate",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTBILLZERORATE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultCompanyID",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTCOMPANYID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnforceDestinationRates",
											"type": "Int16"
										},
										"sink": {
											"name": "ENFORCEDESTINATIONRATES",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultCODRequired",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTCODREQUIRED",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultInvoiceBySite",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTINVOICEBYSITE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultSitePORequired",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTSITEPOREQUIRED",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultSiteAssessSurcharge",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTSITEASSESSSURCHARGE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultSiteAssessFranchiseFee",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTSITEASSESSFRANCHISEFEE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultSiteSignatureRequired",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTSITESIGNATUREREQUIRED",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultSiteInsuranceCertificateRequired",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTSITEINSURANCECERTIFICATEREQUIRED",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "GLExportType",
											"type": "Int16"
										},
										"sink": {
											"name": "GLEXPORTTYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RequireCustTypeMatchForNewService",
											"type": "Int16"
										},
										"sink": {
											"name": "REQUIRECUSTTYPEMATCHFORNEWSERVICE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RequireLabelEntry",
											"type": "Int16"
										},
										"sink": {
											"name": "REQUIRELABELENTRY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "LastInstallationDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LASTINSTALLATIONDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "AutoPayBankName",
											"type": "String"
										},
										"sink": {
											"name": "AUTOPAYBANKNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AutoPayBankABANumber",
											"type": "String"
										},
										"sink": {
											"name": "AUTOPAYBANKABANUMBER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ApplyAutoCredits",
											"type": "Int16"
										},
										"sink": {
											"name": "APPLYAUTOCREDITS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AllowSiteLevelBillingCycle",
											"type": "Int16"
										},
										"sink": {
											"name": "ALLOWSITELEVELBILLINGCYCLE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OakleafVendor",
											"type": "String"
										},
										"sink": {
											"name": "OAKLEAFVENDOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OakleafHauler",
											"type": "String"
										},
										"sink": {
											"name": "OAKLEAFHAULER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ShowCollectionsOnARActivity",
											"type": "Int16"
										},
										"sink": {
											"name": "SHOWCOLLECTIONSONARACTIVITY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultPaymentToDueBalance",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTPAYMENTTODUEBALANCE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ScaleRequireVehicle",
											"type": "Int16"
										},
										"sink": {
											"name": "SCALEREQUIREVEHICLE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ScaleDefaultTareWeights",
											"type": "Int16"
										},
										"sink": {
											"name": "SCALEDEFAULTTAREWEIGHTS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ScaleAlwaysShowRates",
											"type": "Int16"
										},
										"sink": {
											"name": "SCALEALWAYSSHOWRATES",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AllowServicesAtVacantSites",
											"type": "Int16"
										},
										"sink": {
											"name": "ALLOWSERVICESATVACANTSITES",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "EnablePCScale",
											"type": "Int16"
										},
										"sink": {
											"name": "ENABLEPCSCALE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PCScaleURL",
											"type": "String"
										},
										"sink": {
											"name": "PCSCALEURL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ScheduleAheadDays",
											"type": "Int16"
										},
										"sink": {
											"name": "SCHEDULEAHEADDAYS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CreateIntercompanyOnPeriodClose",
											"type": "Int16"
										},
										"sink": {
											"name": "CREATEINTERCOMPANYONPERIODCLOSE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RequireRouteCustTypeMatchForTrip",
											"type": "Int16"
										},
										"sink": {
											"name": "REQUIREROUTECUSTTYPEMATCHFORTRIP",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "MaxwellMgmtJournalNbr",
											"type": "String"
										},
										"sink": {
											"name": "MAXWELLMGMTJOURNALNBR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WorkOrderMinimumChargeSvcCode",
											"type": "String"
										},
										"sink": {
											"name": "WORKORDERMINIMUMCHARGESVCCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultAutomatedCollectionsLetters",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTAUTOMATEDCOLLECTIONSLETTERS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OverrideRequiredPendingApprovalSite",
											"type": "Int16"
										},
										"sink": {
											"name": "OVERRIDEREQUIREDPENDINGAPPROVALSITE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ReportLogoFileName",
											"type": "String"
										},
										"sink": {
											"name": "REPORTLOGOFILENAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UseDefaultCompanyIDInGLExport",
											"type": "Int16"
										},
										"sink": {
											"name": "USEDEFAULTCOMPANYIDINGLEXPORT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ARAcctSegments",
											"type": "String"
										},
										"sink": {
											"name": "ARACCTSEGMENTS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultSuppressStatementPrinting",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTSUPPRESSSTATEMENTPRINTING",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "FCAcctSegments",
											"type": "String"
										},
										"sink": {
											"name": "FCACCTSEGMENTS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ProductVersionUID",
											"type": "Guid"
										},
										"sink": {
											"name": "PRODUCTVERSIONUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RFAcctSegments",
											"type": "String"
										},
										"sink": {
											"name": "RFACCTSEGMENTS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TaxAcctSegments",
											"type": "String"
										},
										"sink": {
											"name": "TAXACCTSEGMENTS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "URAcctSegments",
											"type": "String"
										},
										"sink": {
											"name": "URACCTSEGMENTS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WOAcctSegments",
											"type": "String"
										},
										"sink": {
											"name": "WOACCTSEGMENTS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BalanceTransferGLAccount",
											"type": "String"
										},
										"sink": {
											"name": "BALANCETRANSFERGLACCOUNT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastLicenseDate",
											"type": "String"
										},
										"sink": {
											"name": "LASTLICENSEDATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CRAcctSegments",
											"type": "String"
										},
										"sink": {
											"name": "CRACCTSEGMENTS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CreateARReconcileOnPeriodClose",
											"type": "Int16"
										},
										"sink": {
											"name": "CREATEARRECONCILEONPERIODCLOSE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DPAcctSegments",
											"type": "String"
										},
										"sink": {
											"name": "DPACCTSEGMENTS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RateVarianceApprovalPctUnder",
											"type": "Decimal"
										},
										"sink": {
											"name": "RATEVARIANCEAPPROVALPCTUNDER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RateVarianceApprovalPctWOOver",
											"type": "Decimal"
										},
										"sink": {
											"name": "RATEVARIANCEAPPROVALPCTWOOVER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RateVarianceApprovalPctWOUnder",
											"type": "Decimal"
										},
										"sink": {
											"name": "RATEVARIANCEAPPROVALPCTWOUNDER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ARPeriodBalanceLastUpdated",
											"type": "DateTime"
										},
										"sink": {
											"name": "ARPERIODBALANCELASTUPDATED",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "VersionBuild",
											"type": "Int32"
										},
										"sink": {
											"name": "VERSIONBUILD",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "VersionMajor",
											"type": "Int32"
										},
										"sink": {
											"name": "VERSIONMAJOR",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "VersionMinor",
											"type": "Int32"
										},
										"sink": {
											"name": "VERSIONMINOR",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "VersionRelease",
											"type": "Int32"
										},
										"sink": {
											"name": "VERSIONRELEASE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultCustomerDoNotProrateServices",
											"type": "Byte"
										},
										"sink": {
											"name": "DEFAULTCUSTOMERDONOTPRORATESERVICES",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultEnableAutomaticPaymentNotificationEmails",
											"type": "Byte"
										},
										"sink": {
											"name": "DEFAULTENABLEAUTOMATICPAYMENTNOTIFICATIONEMAILS",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "SETUP"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "SETUP",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Tower SERVICEINFO Table",
						"description": "Copy activity for dbo.EQUIPEMNT TYPE table. \nCopy activity requires physical mapping of schema in the mapping tab due to data type issues.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower SETUP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.SERVICEINFO;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ServiceInfoUID",
											"type": "Guid"
										},
										"sink": {
											"name": "SERVICEINFOUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ServiceUID",
											"type": "Guid"
										},
										"sink": {
											"name": "SERVICEUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SvcSourceUID",
											"type": "Guid"
										},
										"sink": {
											"name": "SVCSOURCEUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SvcSourceIDNbr",
											"type": "String"
										},
										"sink": {
											"name": "SVCSOURCEIDNBR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SvcChangeReason",
											"type": "String"
										},
										"sink": {
											"name": "SVCCHANGEREASON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OrderUser",
											"type": "String"
										},
										"sink": {
											"name": "ORDERUSER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OrderDateTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "ORDERDATETIME",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "STARTDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "EndDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ENDDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "Int16"
										},
										"sink": {
											"name": "STATUS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SvcDescription",
											"type": "String"
										},
										"sink": {
											"name": "SVCDESCRIPTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SvcCode",
											"type": "String"
										},
										"sink": {
											"name": "SVCCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EquipmentType",
											"type": "String"
										},
										"sink": {
											"name": "EQUIPMENTTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SvcFrequency",
											"type": "String"
										},
										"sink": {
											"name": "SVCFREQUENCY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "QUANTITY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "RATE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "MinimumCharge",
											"type": "Decimal"
										},
										"sink": {
											"name": "MINIMUMCHARGE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "InactivityAllowanceDays",
											"type": "Int16"
										},
										"sink": {
											"name": "INACTIVITYALLOWANCEDAYS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "InactivityDailyRate",
											"type": "Decimal"
										},
										"sink": {
											"name": "INACTIVITYDAILYRATE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "HoldBillingUntilServiceStart",
											"type": "Int16"
										},
										"sink": {
											"name": "HOLDBILLINGUNTILSERVICESTART",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "EstimatedQuantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "ESTIMATEDQUANTITY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DiscountSchedule",
											"type": "String"
										},
										"sink": {
											"name": "DISCOUNTSCHEDULE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DiscountStartDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "DISCOUNTSTARTDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "PrimarySiteID",
											"type": "String"
										},
										"sink": {
											"name": "PRIMARYSITEID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UPSServiceID",
											"type": "String"
										},
										"sink": {
											"name": "UPSSERVICEID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Competitor",
											"type": "String"
										},
										"sink": {
											"name": "COMPETITOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultDestination",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTDESTINATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EstimatedRoundTripTime",
											"type": "Decimal"
										},
										"sink": {
											"name": "ESTIMATEDROUNDTRIPTIME",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SvcChangeNote",
											"type": "String"
										},
										"sink": {
											"name": "SVCCHANGENOTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SvcLossReason",
											"type": "String"
										},
										"sink": {
											"name": "SVCLOSSREASON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TemporaryPermanent",
											"type": "Int16"
										},
										"sink": {
											"name": "TEMPORARYPERMANENT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "InchesPerDay",
											"type": "Decimal"
										},
										"sink": {
											"name": "INCHESPERDAY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "YieldPercentage",
											"type": "Decimal"
										},
										"sink": {
											"name": "YIELDPERCENTAGE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RebateRate",
											"type": "Decimal"
										},
										"sink": {
											"name": "REBATERATE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RebateRateType",
											"type": "Int16"
										},
										"sink": {
											"name": "REBATERATETYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultTransporter1",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTTRANSPORTER1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultTransporter2",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTTRANSPORTER2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultTransporter3",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTTRANSPORTER3",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EquipmentOwnership",
											"type": "Int16"
										},
										"sink": {
											"name": "EQUIPMENTOWNERSHIP",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ThirdPartyProviderCost",
											"type": "Decimal"
										},
										"sink": {
											"name": "THIRDPARTYPROVIDERCOST",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ThirdPartyServiceProvider",
											"type": "String"
										},
										"sink": {
											"name": "THIRDPARTYSERVICEPROVIDER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BICRatePerUnit",
											"type": "Decimal"
										},
										"sink": {
											"name": "BICRATEPERUNIT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "BICRateType",
											"type": "Byte"
										},
										"sink": {
											"name": "BICRATETYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "EstimatedMonthlyRevenue",
											"type": "Decimal"
										},
										"sink": {
											"name": "ESTIMATEDMONTHLYREVENUE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RentalRate",
											"type": "Decimal"
										},
										"sink": {
											"name": "RENTALRATE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RentalSvcCode",
											"type": "String"
										},
										"sink": {
											"name": "RENTALSVCCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DisableDiscount",
											"type": "Boolean"
										},
										"sink": {
											"name": "DISABLEDISCOUNT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DoNotProrateEnd",
											"type": "Boolean"
										},
										"sink": {
											"name": "DONOTPRORATEEND",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DoNotProrateStart",
											"type": "Boolean"
										},
										"sink": {
											"name": "DONOTPRORATESTART",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SiteWasteProfileID",
											"type": "String"
										},
										"sink": {
											"name": "SITEWASTEPROFILEID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ProjectCode",
											"type": "String"
										},
										"sink": {
											"name": "PROJECTCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ThirdPartyProviderRentalCost",
											"type": "Decimal"
										},
										"sink": {
											"name": "THIRDPARTYPROVIDERRENTALCOST",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ThirdPartyServiceProviderPONbr",
											"type": "String"
										},
										"sink": {
											"name": "THIRDPARTYSERVICEPROVIDERPONBR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BICBillingMethod",
											"type": "String"
										},
										"sink": {
											"name": "BICBILLINGMETHOD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PickupCreditOverageRate",
											"type": "Decimal"
										},
										"sink": {
											"name": "PICKUPCREDITOVERAGERATE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PickupCreditQuantity",
											"type": "Int32"
										},
										"sink": {
											"name": "PICKUPCREDITQUANTITY",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "SERVICEINFO"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "SERVICEINFO",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Tower DAILYROUTEENTRY",
						"description": "Copy activity for dbo.DAILYROUTEENTRY table. \nCopy activity requires physical mapping of schema in the mapping tab due to data type issues.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower SERVICEINFO Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.DAILYROUTEENTRY;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DailyRouteEntryUID",
											"type": "Guid"
										},
										"sink": {
											"name": "DAILYROUTEENTRYUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "Int16"
										},
										"sink": {
											"name": "STATUS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "WorkDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "WORKDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Route",
											"type": "String"
										},
										"sink": {
											"name": "ROUTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ScheduledStartTime",
											"type": "Int16"
										},
										"sink": {
											"name": "SCHEDULEDSTARTTIME",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Driver",
											"type": "String"
										},
										"sink": {
											"name": "DRIVER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Helper",
											"type": "String"
										},
										"sink": {
											"name": "HELPER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Vehicle",
											"type": "String"
										},
										"sink": {
											"name": "VEHICLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Trailer",
											"type": "String"
										},
										"sink": {
											"name": "TRAILER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OdometerUnits",
											"type": "Decimal"
										},
										"sink": {
											"name": "ODOMETERUNITS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "FuelPumped",
											"type": "Decimal"
										},
										"sink": {
											"name": "FUELPUMPED",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RouteNote",
											"type": "String"
										},
										"sink": {
											"name": "ROUTENOTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SentToOnBoardComputer",
											"type": "Int16"
										},
										"sink": {
											"name": "SENTTOONBOARDCOMPUTER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Helper2",
											"type": "String"
										},
										"sink": {
											"name": "HELPER2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ActualStartTime",
											"type": "Int16"
										},
										"sink": {
											"name": "ACTUALSTARTTIME",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "BeginningQuantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "BEGINNINGQUANTITY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "BeginningStops",
											"type": "Decimal"
										},
										"sink": {
											"name": "BEGINNINGSTOPS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ProductivityPosted",
											"type": "Int16"
										},
										"sink": {
											"name": "PRODUCTIVITYPOSTED",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ProductivityPostedDateTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "PRODUCTIVITYPOSTEDDATETIME",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ProductivityPostedUser",
											"type": "String"
										},
										"sink": {
											"name": "PRODUCTIVITYPOSTEDUSER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ActualEndTime",
											"type": "Int16"
										},
										"sink": {
											"name": "ACTUALENDTIME",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Exported",
											"type": "Int16"
										},
										"sink": {
											"name": "EXPORTED",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "MobileDeviceID",
											"type": "String"
										},
										"sink": {
											"name": "MOBILEDEVICEID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ProfitabilityComputed",
											"type": "Int16"
										},
										"sink": {
											"name": "PROFITABILITYCOMPUTED",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Origin",
											"type": "String"
										},
										"sink": {
											"name": "ORIGIN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "syncRowVersion",
											"type": "Byte[]"
										},
										"sink": {
											"name": "SYNCROWVERSION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "GpsMatchingEnabled",
											"type": "Boolean"
										},
										"sink": {
											"name": "GPSMATCHINGENABLED",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "GpsMatchingMaxRange",
											"type": "Decimal"
										},
										"sink": {
											"name": "GPSMATCHINGMAXRANGE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "GpsMatchingMinProximity",
											"type": "Decimal"
										},
										"sink": {
											"name": "GPSMATCHINGMINPROXIMITY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RouteVisitProximityRadius",
											"type": "Int32"
										},
										"sink": {
											"name": "ROUTEVISITPROXIMITYRADIUS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "UseSystemGpsMatchingSettings",
											"type": "Boolean"
										},
										"sink": {
											"name": "USESYSTEMGPSMATCHINGSETTINGS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "GPSUnits",
											"type": "Decimal"
										},
										"sink": {
											"name": "GPSUNITS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AutoCompleteVisits",
											"type": "Boolean"
										},
										"sink": {
											"name": "AUTOCOMPLETEVISITS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HelperRoute",
											"type": "String"
										},
										"sink": {
											"name": "HELPERROUTE",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "DAILYROUTEENTRY"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DAILYROUTEENTRY",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Tower DAILYROUTEENTRYVEHICLE",
						"description": "Copy activity for dbo.DAILYROUTEENTRYVEHICLE table. \nCopy activity requires physical mapping of schema in the mapping tab due to data type issues.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower DAILYROUTEENTRY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.DAILYROUTEENTRYVEHICLE;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DailyRouteEntryVehicleUID",
											"type": "Guid"
										},
										"sink": {
											"name": "DAILYROUTEENTRYVEHICLEUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DailyRouteEntryUID",
											"type": "Guid"
										},
										"sink": {
											"name": "DAILYROUTEENTRYUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Vehicle",
											"type": "String"
										},
										"sink": {
											"name": "VEHICLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OperatingHours",
											"type": "Decimal"
										},
										"sink": {
											"name": "OPERATINGHOURS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "StartOdometer",
											"type": "Decimal"
										},
										"sink": {
											"name": "STARTODOMETER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "EndOdometer",
											"type": "Decimal"
										},
										"sink": {
											"name": "ENDODOMETER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OdometerUnits",
											"type": "Decimal"
										},
										"sink": {
											"name": "ODOMETERUNITS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "FuelPumped",
											"type": "Decimal"
										},
										"sink": {
											"name": "FUELPUMPED",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "EndEngineHours",
											"type": "Decimal"
										},
										"sink": {
											"name": "ENDENGINEHOURS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "StartEngineHours",
											"type": "Decimal"
										},
										"sink": {
											"name": "STARTENGINEHOURS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OffSiteFuel",
											"type": "Decimal"
										},
										"sink": {
											"name": "OFFSITEFUEL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OnSiteFuel",
											"type": "Decimal"
										},
										"sink": {
											"name": "ONSITEFUEL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OffSiteFuelSource",
											"type": "String"
										},
										"sink": {
											"name": "OFFSITEFUELSOURCE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OnSiteFuelSource",
											"type": "String"
										},
										"sink": {
											"name": "ONSITEFUELSOURCE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EndEngineHoursMetered",
											"type": "Decimal"
										},
										"sink": {
											"name": "ENDENGINEHOURSMETERED",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "StartEngineHoursMetered",
											"type": "Decimal"
										},
										"sink": {
											"name": "STARTENGINEHOURSMETERED",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "FuelType",
											"type": "String"
										},
										"sink": {
											"name": "FUELTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OdometerState",
											"type": "String"
										},
										"sink": {
											"name": "ODOMETERSTATE",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "DAILYROUTEENTRYVEHICLE"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DAILYROUTEENTRYVEHICLE",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Tower DAILYROUTEENTRYDOWNTIME",
						"description": "Copy activity for dbo.DAILYROUTEENTRYDOWNTIME table. \nCopy activity requires physical mapping of schema in the mapping tab due to data type issues.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower DAILYROUTEENTRYVEHICLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.DAILYROUTEENTRYDOWNTIME;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DailyRouteEntryDowntimeUID",
											"type": "Guid"
										},
										"sink": {
											"name": "DAILYROUTEENTRYDOWNTIMEUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DailyRouteEntryUID",
											"type": "Guid"
										},
										"sink": {
											"name": "DAILYROUTEENTRYUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Vehicle",
											"type": "String"
										},
										"sink": {
											"name": "VEHICLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DowntimeStartTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "DOWNTIMESTARTTIME",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DowntimeEndTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "DOWNTIMEENDTIME",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Reason",
											"type": "String"
										},
										"sink": {
											"name": "REASON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DowntimeType",
											"type": "String"
										},
										"sink": {
											"name": "DOWNTIMETYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FuelPumped",
											"type": "Decimal"
										},
										"sink": {
											"name": "FUELPUMPED",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "FuelSource",
											"type": "String"
										},
										"sink": {
											"name": "FUELSOURCE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FuelType",
											"type": "Int16"
										},
										"sink": {
											"name": "FUELTYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Latitude",
											"type": "Decimal"
										},
										"sink": {
											"name": "LATITUDE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Longitude",
											"type": "Decimal"
										},
										"sink": {
											"name": "LONGITUDE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Odometer",
											"type": "Decimal"
										},
										"sink": {
											"name": "ODOMETER",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "DAILYROUTEENTRYDOWNTIME"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DAILYROUTEENTRYDOWNTIME",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Tower DAILYROUTEENTRYLABOR",
						"description": "Copy activity for dbo.DAILYROUTEENTRYLABOR table. \nCopy activity requires physical mapping of schema in the mapping tab due to data type issues.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower DAILYROUTEENTRYDOWNTIME",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.DAILYROUTEENTRYLABOR;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DailyRouteEntryLaborUID",
											"type": "Guid"
										},
										"sink": {
											"name": "DAILYROUTEENTRYLABORUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DailyRouteEntryUID",
											"type": "Guid"
										},
										"sink": {
											"name": "DAILYROUTEENTRYUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destination",
											"type": "String"
										},
										"sink": {
											"name": "DESTINATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Worker",
											"type": "String"
										},
										"sink": {
											"name": "WORKER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WorkerRole",
											"type": "Int16"
										},
										"sink": {
											"name": "WORKERROLE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "StartTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "STARTTIME",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "EndTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "ENDTIME",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "LunchStartTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "LUNCHSTARTTIME",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "LunchEndTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "LUNCHENDTIME",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Vehicle",
											"type": "String"
										},
										"sink": {
											"name": "VEHICLE",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "DAILYROUTEENTRYLABOR"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DAILYROUTEENTRYLABOR",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Tower SERVICELOCATION",
						"description": "Copy activity for dbo.SERVICELOCATION table. \nCopy activity requires physical mapping of schema in the mapping tab due to data type issues.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower DAILYROUTEENTRYLABOR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.DAILYROUTEENTRYLABOR;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ServiceLocation",
											"type": "String"
										},
										"sink": {
											"name": "SERVICELOCATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ServiceLocationUID",
											"type": "Guid"
										},
										"sink": {
											"name": "SERVICELOCATIONUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ServiceLocationName",
											"type": "String"
										},
										"sink": {
											"name": "SERVICELOCATIONNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ServiceAddressUID",
											"type": "Guid"
										},
										"sink": {
											"name": "SERVICEADDRESSUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LocationNote",
											"type": "String"
										},
										"sink": {
											"name": "LOCATIONNOTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SvcStartTimeWindow1Begin",
											"type": "Int16"
										},
										"sink": {
											"name": "SVCSTARTTIMEWINDOW1BEGIN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SvcStartTimeWindow1End",
											"type": "Int16"
										},
										"sink": {
											"name": "SVCSTARTTIMEWINDOW1END",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SvcStartTimeWindow2Begin",
											"type": "Int16"
										},
										"sink": {
											"name": "SVCSTARTTIMEWINDOW2BEGIN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SvcStartTimeWindow2End",
											"type": "Int16"
										},
										"sink": {
											"name": "SVCSTARTTIMEWINDOW2END",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SvcEndTimeWindow1Begin",
											"type": "Int16"
										},
										"sink": {
											"name": "SVCENDTIMEWINDOW1BEGIN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SvcEndTimeWindow1End",
											"type": "Int16"
										},
										"sink": {
											"name": "SVCENDTIMEWINDOW1END",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SvcEndTimeWindow2Begin",
											"type": "Int16"
										},
										"sink": {
											"name": "SVCENDTIMEWINDOW2BEGIN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SvcEndTimeWindow2End",
											"type": "Int16"
										},
										"sink": {
											"name": "SVCENDTIMEWINDOW2END",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TimeWindow1Begin",
											"type": "Int16"
										},
										"sink": {
											"name": "TIMEWINDOW1BEGIN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TimeWindow1End",
											"type": "Int16"
										},
										"sink": {
											"name": "TIMEWINDOW1END",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TimeWindow2Begin",
											"type": "Int16"
										},
										"sink": {
											"name": "TIMEWINDOW2BEGIN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TimeWindow2End",
											"type": "Int16"
										},
										"sink": {
											"name": "TIMEWINDOW2END",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "MapImage",
											"type": "Byte[]"
										},
										"sink": {
											"name": "MAPIMAGE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CloseTime",
											"type": "Int16"
										},
										"sink": {
											"name": "CLOSETIME",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OpenTime",
											"type": "Int16"
										},
										"sink": {
											"name": "OPENTIME",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ServiceLocationName2",
											"type": "String"
										},
										"sink": {
											"name": "SERVICELOCATIONNAME2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UpsRoadNetLastSyncDateTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "UPSROADNETLASTSYNCDATETIME",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "MapImage2",
											"type": "Byte[]"
										},
										"sink": {
											"name": "MAPIMAGE2",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "SERVICELOCATION"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "SERVICELOCATION",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Tower TRIP_VW_TRIPMATERIALTOTAL",
						"description": "Copy activity for dbo.TRIP_VW_TRIPMATERIALTOTAL table. \nCopy activity requires physical mapping of schema in the mapping tab due to data type issues.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower SERVICELOCATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.TRIP_VW_TRIPMATERIALTOTAL;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TripUID",
											"type": "Guid"
										},
										"sink": {
											"name": "TRIPUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TotalWeight",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTALWEIGHT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "WeightUOM",
											"type": "String"
										},
										"sink": {
											"name": "WEIGHTUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TotalVolume",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTALVOLUME",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "VolumeUOM",
											"type": "String"
										},
										"sink": {
											"name": "VOLUMEUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MaterialFees",
											"type": "Decimal"
										},
										"sink": {
											"name": "MATERIALFEES",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "TRIP_VW_TRIPMATERIALTOTAL"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "TRIP_VW_TRIPMATERIALTOTAL",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Tower SERVICEINFO_VW_PRIMARYSITE",
						"description": "Copy activity for dbo.SERVICEINFO_VW_PRIMARYSITE table. \nCopy activity requires physical mapping of schema in the mapping tab due to data type issues.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower TRIP_VW_TRIPMATERIALTOTAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.SERVICEINFO_VW_PRIMARYSITE;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ServiceInfoUID",
											"type": "Guid"
										},
										"sink": {
											"name": "SERVICEINFOUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "STARTDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "EndDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ENDDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "Int16"
										},
										"sink": {
											"name": "STATUS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SiteID",
											"type": "String"
										},
										"sink": {
											"name": "SITEID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CustID",
											"type": "String"
										},
										"sink": {
											"name": "CUSTID",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "SERVICEINFO_VW_PRIMARYSITE"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "SERVICEINFO_VW_PRIMARYSITE",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Tower DAILYROUTEENTRY_VW_PRODUCTIVITYTOTALS",
						"description": "Copy activity for dbo.DAILYROUTEENTRY_VW_PRODUCTIVITYTOTALS table. \nCopy activity requires physical mapping of schema in the mapping tab due to data type issues.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower SERVICEINFO_VW_PRIMARYSITE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.DAILYROUTEENTRY_VW_PRODUCTIVITYTOTALS;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DailyRouteEntryUID",
											"type": "Guid"
										},
										"sink": {
											"name": "DAILYROUTEENTRYUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Route",
											"type": "String"
										},
										"sink": {
											"name": "ROUTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WorkDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "WORKDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "Int16"
										},
										"sink": {
											"name": "STATUS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RouteNote",
											"type": "String"
										},
										"sink": {
											"name": "ROUTENOTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BeginningQuantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "BEGINNINGQUANTITY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "BeginningStops",
											"type": "Decimal"
										},
										"sink": {
											"name": "BEGINNINGSTOPS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DriverHours",
											"type": "Decimal"
										},
										"sink": {
											"name": "DRIVERHOURS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DriverLunchHours",
											"type": "Decimal"
										},
										"sink": {
											"name": "DRIVERLUNCHHOURS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "HelperHours",
											"type": "Decimal"
										},
										"sink": {
											"name": "HELPERHOURS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "HelperLunchHours",
											"type": "Decimal"
										},
										"sink": {
											"name": "HELPERLUNCHHOURS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TotalOdometerUnits",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTALODOMETERUNITS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OnSiteFuel",
											"type": "Decimal"
										},
										"sink": {
											"name": "ONSITEFUEL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OffSiteFuel",
											"type": "Decimal"
										},
										"sink": {
											"name": "OFFSITEFUEL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TotalFuel",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTALFUEL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "FuelType",
											"type": "String"
										},
										"sink": {
											"name": "FUELTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CountFuelTypes",
											"type": "Int32"
										},
										"sink": {
											"name": "COUNTFUELTYPES",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TotalVehicleHours",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTALVEHICLEHOURS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CountVehicles",
											"type": "Int32"
										},
										"sink": {
											"name": "COUNTVEHICLES",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TotalDowntime",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTALDOWNTIME",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DisposalHaulTrips",
											"type": "Int32"
										},
										"sink": {
											"name": "DISPOSALHAULTRIPS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "LaborTrips",
											"type": "Int32"
										},
										"sink": {
											"name": "LABORTRIPS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OutboundTrips",
											"type": "Int32"
										},
										"sink": {
											"name": "OUTBOUNDTRIPS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "HaulOnlyTrips",
											"type": "Int32"
										},
										"sink": {
											"name": "HAULONLYTRIPS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DisposalCost",
											"type": "Decimal"
										},
										"sink": {
											"name": "DISPOSALCOST",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TotalCost",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTALCOST",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TotalWeight",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTALWEIGHT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "WeightUOM",
											"type": "String"
										},
										"sink": {
											"name": "WEIGHTUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VolumeUOM",
											"type": "String"
										},
										"sink": {
											"name": "VOLUMEUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DestinationHours",
											"type": "Decimal"
										},
										"sink": {
											"name": "DESTINATIONHOURS",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "DAILYROUTEENTRY_VW_PRODUCTIVITYTOTALS"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DAILYROUTEENTRY_VW_PRODUCTIVITYTOTALS",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Tower WORKORDERCHARGE",
						"description": "Copy activity for dbo.WORKORDERCHARGE table. \nCopy activity requires physical mapping of schema in the mapping tab due to data type issues.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower DAILYROUTEENTRY_VW_PRODUCTIVITYTOTALS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT * FROM WORKORDERCHARGE\r\nWHERE AMOUNT > 0",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.WORKORDERCHARGE;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "msaz01_dm01_Azure_Blob",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "WorkOrderChargeUID",
											"type": "Guid"
										},
										"sink": {
											"name": "WORKORDERCHARGEUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WorkOrderID",
											"type": "String"
										},
										"sink": {
											"name": "WORKORDERID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SiteID",
											"type": "String"
										},
										"sink": {
											"name": "SITEID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SvcCode",
											"type": "String"
										},
										"sink": {
											"name": "SVCCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QuantityType",
											"type": "Int16"
										},
										"sink": {
											"name": "QUANTITYTYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "NoChargeQuantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "NOCHARGEQUANTITY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "RATE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "QUANTITY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "AMOUNT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "MinimumCharge",
											"type": "Decimal"
										},
										"sink": {
											"name": "MINIMUMCHARGE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "MaximumQuantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "MAXIMUMQUANTITY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OverMaximumQuantityRate",
											"type": "Decimal"
										},
										"sink": {
											"name": "OVERMAXIMUMQUANTITYRATE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "MarketPrice",
											"type": "Decimal"
										},
										"sink": {
											"name": "MARKETPRICE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RebateRateType",
											"type": "Int16"
										},
										"sink": {
											"name": "REBATERATETYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ThirdPartyCost",
											"type": "Decimal"
										},
										"sink": {
											"name": "THIRDPARTYCOST",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ThirdPartyRate",
											"type": "Decimal"
										},
										"sink": {
											"name": "THIRDPARTYRATE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ThirdPartyPONbr",
											"type": "String"
										},
										"sink": {
											"name": "THIRDPARTYPONBR",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "WORKORDERCHARGE"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "WORKORDERCHARGE",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Production/TOWER"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T18:18:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MSAZ01_TOWER')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TOWER_DAILY_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Tower Fact table Full Load",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TOWER_FULL_LOAD_FACT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Tower Dim table Full Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Tower Fact table Full Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TOWER_FULL_LOAD_DIM",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline Full Load 2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Tower Dim table Full Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TOWER FULL LOAD PIPELINE_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Production/Orchestration"
				},
				"annotations": [],
				"lastPublishTime": "2024-01-12T14:18:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TOWER_FULL_LOAD_FACT')]",
				"[concat(variables('factoryId'), '/pipelines/TOWER_FULL_LOAD_DIM')]",
				"[concat(variables('factoryId'), '/pipelines/TOWER FULL LOAD PIPELINE_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TOWER_FULL_LOAD_DIM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Tower Table Names",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "SELECT *\nFROM LRS_RAW.MASTER_DATA.TOWER_TABLE_NAMES\nWHERE LOAD_TYPE = 'Full'\nAND TABLE_NAME NOT IN ('SITE', 'DESTINATION', 'VEHICLE', 'TRIP', 'WORKER');\n",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "TOWER_TABLE_NAMES",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Tower Copy Activities",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Tower Table Names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Tower Table Names').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy tables",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table ',item().Schema_name,'.',item().Table_name)}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												},
												"path": "staging"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": {
													"value": "@item().Table_Name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": {
													"value": "@item().Table_name",
													"type": "Expression"
												},
												"Snowflake_Schema": {
													"value": "@item().Schema_name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Tower SITE Table",
						"description": "Copy activity for dbo.site table. \nCopy activity requires physical mapping of schema in the mapping tab due to data type issues.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower Copy Activities",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.SITE;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SiteID",
											"type": "String"
										},
										"sink": {
											"name": "SITEID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SiteUID",
											"type": "Guid"
										},
										"sink": {
											"name": "SITEUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CustID",
											"type": "String"
										},
										"sink": {
											"name": "CUSTID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BillToCustID",
											"type": "String"
										},
										"sink": {
											"name": "BILLTOCUSTID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PreviousSiteID",
											"type": "String"
										},
										"sink": {
											"name": "PREVIOUSSITEID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SiteName",
											"type": "String"
										},
										"sink": {
											"name": "SITENAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Contact",
											"type": "String"
										},
										"sink": {
											"name": "CONTACT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SiteAddressUID",
											"type": "Guid"
										},
										"sink": {
											"name": "SITEADDRESSUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ServiceLocation",
											"type": "String"
										},
										"sink": {
											"name": "SERVICELOCATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String"
										},
										"sink": {
											"name": "EMAIL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String"
										},
										"sink": {
											"name": "PHONE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fax",
											"type": "String"
										},
										"sink": {
											"name": "FAX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mobile",
											"type": "String"
										},
										"sink": {
											"name": "MOBILE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SvcArea",
											"type": "String"
										},
										"sink": {
											"name": "SVCAREA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Salesperson",
											"type": "String"
										},
										"sink": {
											"name": "SALESPERSON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NotifyByEmail",
											"type": "Int16"
										},
										"sink": {
											"name": "NOTIFYBYEMAIL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SignatureRequired",
											"type": "Int16"
										},
										"sink": {
											"name": "SIGNATUREREQUIRED",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "BlanketPONbr",
											"type": "String"
										},
										"sink": {
											"name": "BLANKETPONBR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BlanketPODate",
											"type": "DateTime"
										},
										"sink": {
											"name": "BLANKETPODATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "BlanketPOExpirationDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "BLANKETPOEXPIRATIONDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "PORequired",
											"type": "Int16"
										},
										"sink": {
											"name": "POREQUIRED",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PORequiredMessage",
											"type": "String"
										},
										"sink": {
											"name": "POREQUIREDMESSAGE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TaxGroup",
											"type": "String"
										},
										"sink": {
											"name": "TAXGROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TaxExempt",
											"type": "Int16"
										},
										"sink": {
											"name": "TAXEXEMPT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TaxExemptNbr",
											"type": "String"
										},
										"sink": {
											"name": "TAXEXEMPTNBR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AuditDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "AUDITDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "MinutesPerUnitQuantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "MINUTESPERUNITQUANTITY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "MaterialDensity",
											"type": "Decimal"
										},
										"sink": {
											"name": "MATERIALDENSITY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "VolumeUOM",
											"type": "String"
										},
										"sink": {
											"name": "VOLUMEUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WeightUOM",
											"type": "String"
										},
										"sink": {
											"name": "WEIGHTUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Comment",
											"type": "String"
										},
										"sink": {
											"name": "COMMENT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DetailedNotes",
											"type": "String"
										},
										"sink": {
											"name": "DETAILEDNOTES",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "YTDYear",
											"type": "Int16"
										},
										"sink": {
											"name": "YTDYEAR",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "YTDRevenue",
											"type": "Decimal"
										},
										"sink": {
											"name": "YTDREVENUE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TotalRevenue",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTALREVENUE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AnalysisFromDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ANALYSISFROMDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "AnalysisToDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ANALYSISTODATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "AnalysisRevenue",
											"type": "Decimal"
										},
										"sink": {
											"name": "ANALYSISREVENUE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AnalysisCost",
											"type": "Decimal"
										},
										"sink": {
											"name": "ANALYSISCOST",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OldSiteID",
											"type": "String"
										},
										"sink": {
											"name": "OLDSITEID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AssessSurcharge",
											"type": "Int16"
										},
										"sink": {
											"name": "ASSESSSURCHARGE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AssessFranchiseFee",
											"type": "Int16"
										},
										"sink": {
											"name": "ASSESSFRANCHISEFEE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RequireInventoryMoveCompletion",
											"type": "Int16"
										},
										"sink": {
											"name": "REQUIREINVENTORYMOVECOMPLETION",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "InsuranceCertificateRequired",
											"type": "Int16"
										},
										"sink": {
											"name": "INSURANCECERTIFICATEREQUIRED",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultTransporter",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTTRANSPORTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HidePricingOnDestinationTickets",
											"type": "Int16"
										},
										"sink": {
											"name": "HIDEPRICINGONDESTINATIONTICKETS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ManifestLabelCount",
											"type": "Int16"
										},
										"sink": {
											"name": "MANIFESTLABELCOUNT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultDestination",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTDESTINATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StatePermitID",
											"type": "String"
										},
										"sink": {
											"name": "STATEPERMITID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EPAID",
											"type": "String"
										},
										"sink": {
											"name": "EPAID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CompanyID",
											"type": "String"
										},
										"sink": {
											"name": "COMPANYID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TradeWasteReportable",
											"type": "Int16"
										},
										"sink": {
											"name": "TRADEWASTEREPORTABLE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "LocalInvoiceHandling",
											"type": "Int16"
										},
										"sink": {
											"name": "LOCALINVOICEHANDLING",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "BillingCycle",
											"type": "String"
										},
										"sink": {
											"name": "BILLINGCYCLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RoundScaleCharges",
											"type": "Int16"
										},
										"sink": {
											"name": "ROUNDSCALECHARGES",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ScalePrintTicket",
											"type": "Int16"
										},
										"sink": {
											"name": "SCALEPRINTTICKET",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ScalePrintStageTicket",
											"type": "Int16"
										},
										"sink": {
											"name": "SCALEPRINTSTAGETICKET",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ScaleRequireWorkOrder",
											"type": "Int16"
										},
										"sink": {
											"name": "SCALEREQUIREWORKORDER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ScaleTrafficDirection",
											"type": "Int16"
										},
										"sink": {
											"name": "SCALETRAFFICDIRECTION",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RateReviewMonth",
											"type": "Int16"
										},
										"sink": {
											"name": "RATEREVIEWMONTH",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ScaleTicketSite",
											"type": "Int16"
										},
										"sink": {
											"name": "SCALETICKETSITE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DisplayToUser",
											"type": "Int16"
										},
										"sink": {
											"name": "DISPLAYTOUSER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SiteName2",
											"type": "String"
										},
										"sink": {
											"name": "SITENAME2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PendingDunAndBradstreet",
											"type": "Int16"
										},
										"sink": {
											"name": "PENDINGDUNANDBRADSTREET",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PendingNotes",
											"type": "String"
										},
										"sink": {
											"name": "PENDINGNOTES",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PendingOther",
											"type": "Int16"
										},
										"sink": {
											"name": "PENDINGOTHER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PendingPrePayment",
											"type": "Int16"
										},
										"sink": {
											"name": "PENDINGPREPAYMENT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PendingPrePaymentAmount",
											"type": "Decimal"
										},
										"sink": {
											"name": "PENDINGPREPAYMENTAMOUNT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PendingSignedContract",
											"type": "Int16"
										},
										"sink": {
											"name": "PENDINGSIGNEDCONTRACT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Parcel",
											"type": "String"
										},
										"sink": {
											"name": "PARCEL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultTransporter2",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTTRANSPORTER2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultTransporter3",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTTRANSPORTER3",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BrokerAcct",
											"type": "String"
										},
										"sink": {
											"name": "BROKERACCT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RebateRateLevel",
											"type": "String"
										},
										"sink": {
											"name": "REBATERATELEVEL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ContactUID",
											"type": "Guid"
										},
										"sink": {
											"name": "CONTACTUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CreditLimitWarningLevel",
											"type": "Decimal"
										},
										"sink": {
											"name": "CREDITLIMITWARNINGLEVEL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "InactiveMessage",
											"type": "String"
										},
										"sink": {
											"name": "INACTIVEMESSAGE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InterCompany",
											"type": "Byte"
										},
										"sink": {
											"name": "INTERCOMPANY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "IsCarrier",
											"type": "Byte"
										},
										"sink": {
											"name": "ISCARRIER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "IsGenerator",
											"type": "Byte"
										},
										"sink": {
											"name": "ISGENERATOR",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PrintBalanceOnTicket",
											"type": "Byte"
										},
										"sink": {
											"name": "PRINTBALANCEONTICKET",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PrintBillOfLading",
											"type": "Byte"
										},
										"sink": {
											"name": "PRINTBILLOFLADING",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PrintPriceOnTicket",
											"type": "Byte"
										},
										"sink": {
											"name": "PRINTPRICEONTICKET",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PrintWeightsOnTicket",
											"type": "Byte"
										},
										"sink": {
											"name": "PRINTWEIGHTSONTICKET",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PromptForAddress",
											"type": "Byte"
										},
										"sink": {
											"name": "PROMPTFORADDRESS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RequirePO",
											"type": "Byte"
										},
										"sink": {
											"name": "REQUIREPO",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RestrictMaterial",
											"type": "Byte"
										},
										"sink": {
											"name": "RESTRICTMATERIAL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RestrictMaterialToPriceSheet",
											"type": "Byte"
										},
										"sink": {
											"name": "RESTRICTMATERIALTOPRICESHEET",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TicketScreenMessage",
											"type": "String"
										},
										"sink": {
											"name": "TICKETSCREENMESSAGE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TotalCutoffTons",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTALCUTOFFTONS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TotalTons",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTALTONS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TotalWarningTons",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTALWARNINGTONS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "BICBillingMethod",
											"type": "String"
										},
										"sink": {
											"name": "BICBILLINGMETHOD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BICBusinessType",
											"type": "String"
										},
										"sink": {
											"name": "BICBUSINESSTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BICComments",
											"type": "String"
										},
										"sink": {
											"name": "BICCOMMENTS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BICLastWasteStreamSurveyDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "BICLASTWASTESTREAMSURVEYDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "BICRefusalToSignWasteStreamSurvey",
											"type": "Boolean"
										},
										"sink": {
											"name": "BICREFUSALTOSIGNWASTESTREAMSURVEY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BICSourceType",
											"type": "String"
										},
										"sink": {
											"name": "BICSOURCETYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BICSpecialCondition",
											"type": "String"
										},
										"sink": {
											"name": "BICSPECIALCONDITION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BICWasteProfileMethod",
											"type": "String"
										},
										"sink": {
											"name": "BICWASTEPROFILEMETHOD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BuildingAccountLink",
											"type": "String"
										},
										"sink": {
											"name": "BUILDINGACCOUNTLINK",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IsBuildingAccount",
											"type": "Int16"
										},
										"sink": {
											"name": "ISBUILDINGACCOUNT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ScaleAllowRateOverride",
											"type": "Int16"
										},
										"sink": {
											"name": "SCALEALLOWRATEOVERRIDE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SerializedProgram",
											"type": "Int16"
										},
										"sink": {
											"name": "SERIALIZEDPROGRAM",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AllowWorkOrderChargesforTaxesAndFees",
											"type": "Int16"
										},
										"sink": {
											"name": "ALLOWWORKORDERCHARGESFORTAXESANDFEES",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CallAhead",
											"type": "Boolean"
										},
										"sink": {
											"name": "CALLAHEAD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SalesTerritory",
											"type": "String"
										},
										"sink": {
											"name": "SALESTERRITORY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SiteClass",
											"type": "String"
										},
										"sink": {
											"name": "SITECLASS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AcquisitionSource",
											"type": "String"
										},
										"sink": {
											"name": "ACQUISITIONSOURCE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AnnualNoChargePickupsQuantity",
											"type": "Int16"
										},
										"sink": {
											"name": "ANNUALNOCHARGEPICKUPSQUANTITY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AnnualNoChargePickupsQuantityUsed",
											"type": "Int16"
										},
										"sink": {
											"name": "ANNUALNOCHARGEPICKUPSQUANTITYUSED",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "BillFrequency",
											"type": "String"
										},
										"sink": {
											"name": "BILLFREQUENCY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BillRecurringCycleOffset",
											"type": "Int16"
										},
										"sink": {
											"name": "BILLRECURRINGCYCLEOFFSET",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "BillThruDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "BILLTHRUDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "InvoiceNote",
											"type": "String"
										},
										"sink": {
											"name": "INVOICENOTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NextBillDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "NEXTBILLDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ShippingAddressLine1",
											"type": "String"
										},
										"sink": {
											"name": "SHIPPINGADDRESSLINE1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ShippingAddressLine2",
											"type": "String"
										},
										"sink": {
											"name": "SHIPPINGADDRESSLINE2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ShippingCity",
											"type": "String"
										},
										"sink": {
											"name": "SHIPPINGCITY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ShippingName",
											"type": "String"
										},
										"sink": {
											"name": "SHIPPINGNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ShippingPostalCode",
											"type": "String"
										},
										"sink": {
											"name": "SHIPPINGPOSTALCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ShippingState",
											"type": "String"
										},
										"sink": {
											"name": "SHIPPINGSTATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UseCustomerAnniversarySettings",
											"type": "Boolean"
										},
										"sink": {
											"name": "USECUSTOMERANNIVERSARYSETTINGS",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "SITE"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "SITE",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Tower DESTINATION Table",
						"description": "Copy activity for dbo.site table. \nCopy activity requires physical mapping of schema in the mapping tab due to data type issues.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower SITE Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.DESTINATION;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "msaz01_dm01_Azure_Blob",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Destination",
											"type": "String"
										},
										"sink": {
											"name": "DESTINATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DestinationUID",
											"type": "Guid"
										},
										"sink": {
											"name": "DESTINATIONUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DestinationType",
											"type": "Int16"
										},
										"sink": {
											"name": "DESTINATIONTYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AddressUID",
											"type": "Guid"
										},
										"sink": {
											"name": "ADDRESSUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ContactName",
											"type": "String"
										},
										"sink": {
											"name": "CONTACTNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String"
										},
										"sink": {
											"name": "EMAIL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String"
										},
										"sink": {
											"name": "PHONE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fax",
											"type": "String"
										},
										"sink": {
											"name": "FAX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mobile",
											"type": "String"
										},
										"sink": {
											"name": "MOBILE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OpenTime00",
											"type": "Int16"
										},
										"sink": {
											"name": "OPENTIME00",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OpenTime01",
											"type": "Int16"
										},
										"sink": {
											"name": "OPENTIME01",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OpenTime02",
											"type": "Int16"
										},
										"sink": {
											"name": "OPENTIME02",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OpenTime03",
											"type": "Int16"
										},
										"sink": {
											"name": "OPENTIME03",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OpenTime04",
											"type": "Int16"
										},
										"sink": {
											"name": "OPENTIME04",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OpenTime05",
											"type": "Int16"
										},
										"sink": {
											"name": "OPENTIME05",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OpenTime06",
											"type": "Int16"
										},
										"sink": {
											"name": "OPENTIME06",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CloseTime00",
											"type": "Int16"
										},
										"sink": {
											"name": "CLOSETIME00",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CloseTime01",
											"type": "Int16"
										},
										"sink": {
											"name": "CLOSETIME01",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CloseTime02",
											"type": "Int16"
										},
										"sink": {
											"name": "CLOSETIME02",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CloseTime03",
											"type": "Int16"
										},
										"sink": {
											"name": "CLOSETIME03",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CloseTime04",
											"type": "Int16"
										},
										"sink": {
											"name": "CLOSETIME04",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CloseTime05",
											"type": "Int16"
										},
										"sink": {
											"name": "CLOSETIME05",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CloseTime06",
											"type": "Int16"
										},
										"sink": {
											"name": "CLOSETIME06",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PermittedUOM",
											"type": "String"
										},
										"sink": {
											"name": "PERMITTEDUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DailyPermittedUnits",
											"type": "Decimal"
										},
										"sink": {
											"name": "DAILYPERMITTEDUNITS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DailyStartTime",
											"type": "Int16"
										},
										"sink": {
											"name": "DAILYSTARTTIME",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "EnableProcessing",
											"type": "Int16"
										},
										"sink": {
											"name": "ENABLEPROCESSING",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "StateID",
											"type": "String"
										},
										"sink": {
											"name": "STATEID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EPAID",
											"type": "String"
										},
										"sink": {
											"name": "EPAID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultWorkflowCode",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTWORKFLOWCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DamageFeeSvcCode",
											"type": "String"
										},
										"sink": {
											"name": "DAMAGEFEESVCCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InboundWorkOrderReportUID",
											"type": "Guid"
										},
										"sink": {
											"name": "INBOUNDWORKORDERREPORTUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OutboundWorkOrderReportUID",
											"type": "Guid"
										},
										"sink": {
											"name": "OUTBOUNDWORKORDERREPORTUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CODWorkOrderReportUID",
											"type": "Guid"
										},
										"sink": {
											"name": "CODWORKORDERREPORTUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultSiteID",
											"type": "String"
										},
										"sink": {
											"name": "DEFAULTSITEID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Int16"
										},
										"sink": {
											"name": "ACTIVE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Internal",
											"type": "Int16"
										},
										"sink": {
											"name": "INTERNAL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CompanyID",
											"type": "String"
										},
										"sink": {
											"name": "COMPANYID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ManifestLevel1ShippingLabelReportUID",
											"type": "Guid"
										},
										"sink": {
											"name": "MANIFESTLEVEL1SHIPPINGLABELREPORTUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ManifestLevel1WorkOrderReportUID",
											"type": "Guid"
										},
										"sink": {
											"name": "MANIFESTLEVEL1WORKORDERREPORTUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ManifestLevel2ShippingLabelReportUID",
											"type": "Guid"
										},
										"sink": {
											"name": "MANIFESTLEVEL2SHIPPINGLABELREPORTUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ManifestLevel2WorkOrderReportUID",
											"type": "Guid"
										},
										"sink": {
											"name": "MANIFESTLEVEL2WORKORDERREPORTUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBCDisplayOrder",
											"type": "Int16"
										},
										"sink": {
											"name": "OBCDISPLAYORDER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "BICDestination",
											"type": "String"
										},
										"sink": {
											"name": "BICDESTINATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ActivateBales",
											"type": "Byte"
										},
										"sink": {
											"name": "ACTIVATEBALES",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AlwaysAllServices",
											"type": "Boolean"
										},
										"sink": {
											"name": "ALWAYSALLSERVICES",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Cash_AcceptCash",
											"type": "Boolean"
										},
										"sink": {
											"name": "CASH_ACCEPTCASH",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Cash_AcceptChecks",
											"type": "Boolean"
										},
										"sink": {
											"name": "CASH_ACCEPTCHECKS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Cash_AcceptCreditCard",
											"type": "Boolean"
										},
										"sink": {
											"name": "CASH_ACCEPTCREDITCARD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Cash_AcceptDebitCard",
											"type": "Boolean"
										},
										"sink": {
											"name": "CASH_ACCEPTDEBITCARD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Cash_AcceptDeposit",
											"type": "Boolean"
										},
										"sink": {
											"name": "CASH_ACCEPTDEPOSIT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Cash_DisplayChangeDuePopup",
											"type": "Boolean"
										},
										"sink": {
											"name": "CASH_DISPLAYCHANGEDUEPOPUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Cash_GrossWeightDepositConversion",
											"type": "Decimal"
										},
										"sink": {
											"name": "CASH_GROSSWEIGHTDEPOSITCONVERSION",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Cash_MinimumDefaultDeposit",
											"type": "Decimal"
										},
										"sink": {
											"name": "CASH_MINIMUMDEFAULTDEPOSIT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Cash_RequireAmountDue",
											"type": "Boolean"
										},
										"sink": {
											"name": "CASH_REQUIREAMOUNTDUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Cash_RoundCash",
											"type": "Byte"
										},
										"sink": {
											"name": "CASH_ROUNDCASH",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Cash_RoundCashToNearest",
											"type": "Decimal"
										},
										"sink": {
											"name": "CASH_ROUNDCASHTONEAREST",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CashTendered",
											"type": "Boolean"
										},
										"sink": {
											"name": "CASHTENDERED",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CheckForDuplicateMaterialsOnTicket",
											"type": "Boolean"
										},
										"sink": {
											"name": "CHECKFORDUPLICATEMATERIALSONTICKET",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CustomerTotalsEnable",
											"type": "Boolean"
										},
										"sink": {
											"name": "CUSTOMERTOTALSENABLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CustomerTotalsLastReset",
											"type": "DateTime"
										},
										"sink": {
											"name": "CUSTOMERTOTALSLASTRESET",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CustomerTotalsResetAfterDays",
											"type": "Int16"
										},
										"sink": {
											"name": "CUSTOMERTOTALSRESETAFTERDAYS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DEPTriggerTrailerGrossVehicleWeight",
											"type": "Decimal"
										},
										"sink": {
											"name": "DEPTRIGGERTRAILERGROSSVEHICLEWEIGHT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DEPTriggerTruckGrossVehicleWeight",
											"type": "Decimal"
										},
										"sink": {
											"name": "DEPTRIGGERTRUCKGROSSVEHICLEWEIGHT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "EnableDEPGVWCheck",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEDEPGVWCHECK",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableDestinationReconciliation",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEDESTINATIONRECONCILIATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableField_BillOfLading",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEFIELD_BILLOFLADING",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableField_Booking",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEFIELD_BOOKING",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableField_Destination",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEFIELD_DESTINATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableField_Driver",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEFIELD_DRIVER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableField_Generator",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEFIELD_GENERATOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableField_InventoryLocation",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEFIELD_INVENTORYLOCATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableField_Manifest",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEFIELD_MANIFEST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableField_PONbr",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEFIELD_PONBR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableField_Release",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEFIELD_RELEASE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableField_Route",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEFIELD_ROUTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableField_Seal",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEFIELD_SEAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableField_SiteWastProfile",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEFIELD_SITEWASTPROFILE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableField_Trailer",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEFIELD_TRAILER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableField_Transporter",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEFIELD_TRANSPORTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableField_TripSource",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEFIELD_TRIPSOURCE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableField_VehicleType",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEFIELD_VEHICLETYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableField_VehicleVolume",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEFIELD_VEHICLEVOLUME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableField_WorkOrder",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEFIELD_WORKORDER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableMaterialReclassification",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEMATERIALRECLASSIFICATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableMaximumWeightCutoff",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEMAXIMUMWEIGHTCUTOFF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnablePayTypeSelection",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEPAYTYPESELECTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableStoreLastLoadToVehicle",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLESTORELASTLOADTOVEHICLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableStoreNewVehicle",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLESTORENEWVEHICLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableStoreNewVehicleTare",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLESTORENEWVEHICLETARE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableTicketPricePopup",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLETICKETPRICEPOPUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableTrafficFlowSelection",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLETRAFFICFLOWSELECTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableUpdateVehicleTare",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEUPDATEVEHICLETARE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableVehicleTypeChanging",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEVEHICLETYPECHANGING",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnableVolumeCalculatorPopup",
											"type": "Boolean"
										},
										"sink": {
											"name": "ENABLEVOLUMECALCULATORPOPUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ForceWeighAllLoads",
											"type": "Boolean"
										},
										"sink": {
											"name": "FORCEWEIGHALLLOADS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HolidayRouteAdjustment",
											"type": "Int16"
										},
										"sink": {
											"name": "HOLIDAYROUTEADJUSTMENT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "IncludeNoChargeQuantityInTax",
											"type": "Boolean"
										},
										"sink": {
											"name": "INCLUDENOCHARGEQUANTITYINTAX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MaterialCatTotalsEnable",
											"type": "Boolean"
										},
										"sink": {
											"name": "MATERIALCATTOTALSENABLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MaterialCatTotalsLastReset",
											"type": "DateTime"
										},
										"sink": {
											"name": "MATERIALCATTOTALSLASTRESET",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "MaterialCatTotalsResetAfterDays",
											"type": "Int16"
										},
										"sink": {
											"name": "MATERIALCATTOTALSRESETAFTERDAYS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PermitTotalsEnable",
											"type": "Boolean"
										},
										"sink": {
											"name": "PERMITTOTALSENABLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PermitTotalsLastReset",
											"type": "DateTime"
										},
										"sink": {
											"name": "PERMITTOTALSLASTRESET",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "PermitTotalsLoadsIn",
											"type": "Int32"
										},
										"sink": {
											"name": "PERMITTOTALSLOADSIN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PermitTotalsLoadsOut",
											"type": "Int32"
										},
										"sink": {
											"name": "PERMITTOTALSLOADSOUT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PermitTotalsResetAfterDays",
											"type": "Int16"
										},
										"sink": {
											"name": "PERMITTOTALSRESETAFTERDAYS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PermitTotalsVolumeIn",
											"type": "Decimal"
										},
										"sink": {
											"name": "PERMITTOTALSVOLUMEIN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PermitTotalsVolumeInCutoff",
											"type": "Decimal"
										},
										"sink": {
											"name": "PERMITTOTALSVOLUMEINCUTOFF",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PermitTotalsVolumeInWarning",
											"type": "Decimal"
										},
										"sink": {
											"name": "PERMITTOTALSVOLUMEINWARNING",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PermitTotalsVolumeOut",
											"type": "Decimal"
										},
										"sink": {
											"name": "PERMITTOTALSVOLUMEOUT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PermitTotalsWeightIn",
											"type": "Decimal"
										},
										"sink": {
											"name": "PERMITTOTALSWEIGHTIN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PermitTotalsWeightInCutoff",
											"type": "Decimal"
										},
										"sink": {
											"name": "PERMITTOTALSWEIGHTINCUTOFF",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PermitTotalsWeightInWarning",
											"type": "Decimal"
										},
										"sink": {
											"name": "PERMITTOTALSWEIGHTINWARNING",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PermitTotalsWeightOut",
											"type": "Decimal"
										},
										"sink": {
											"name": "PERMITTOTALSWEIGHTOUT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PermitVolumeUOM",
											"type": "String"
										},
										"sink": {
											"name": "PERMITVOLUMEUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PermitWeightUOM",
											"type": "String"
										},
										"sink": {
											"name": "PERMITWEIGHTUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PrintedTicketMessage",
											"type": "String"
										},
										"sink": {
											"name": "PRINTEDTICKETMESSAGE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RequireWeightBeforeStage",
											"type": "Boolean"
										},
										"sink": {
											"name": "REQUIREWEIGHTBEFORESTAGE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RestrictMaterial",
											"type": "Boolean"
										},
										"sink": {
											"name": "RESTRICTMATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RestrictTripSourceToSiteProfile",
											"type": "Boolean"
										},
										"sink": {
											"name": "RESTRICTTRIPSOURCETOSITEPROFILE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ScaleDefaultDestination",
											"type": "String"
										},
										"sink": {
											"name": "SCALEDEFAULTDESTINATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ScaleDefaultDriver",
											"type": "String"
										},
										"sink": {
											"name": "SCALEDEFAULTDRIVER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ScaleDefaultGenerator",
											"type": "String"
										},
										"sink": {
											"name": "SCALEDEFAULTGENERATOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ScaleDefaultInventoryLocation",
											"type": "String"
										},
										"sink": {
											"name": "SCALEDEFAULTINVENTORYLOCATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ScaleDefaultRoute",
											"type": "String"
										},
										"sink": {
											"name": "SCALEDEFAULTROUTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ScaleDefaultSiteID",
											"type": "String"
										},
										"sink": {
											"name": "SCALEDEFAULTSITEID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ScaleDefaultSiteWasteProfileID",
											"type": "String"
										},
										"sink": {
											"name": "SCALEDEFAULTSITEWASTEPROFILEID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ScaleDefaultTransporter",
											"type": "String"
										},
										"sink": {
											"name": "SCALEDEFAULTTRANSPORTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ScaleDefaultTripSource",
											"type": "String"
										},
										"sink": {
											"name": "SCALEDEFAULTTRIPSOURCE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ScaleDefaultVehicleType",
											"type": "String"
										},
										"sink": {
											"name": "SCALEDEFAULTVEHICLETYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IncludeInMapping",
											"type": "Byte"
										},
										"sink": {
											"name": "INCLUDEINMAPPING",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AuthorizedProcessor",
											"type": "String"
										},
										"sink": {
											"name": "AUTHORIZEDPROCESSOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FacilityCompanyID",
											"type": "String"
										},
										"sink": {
											"name": "FACILITYCOMPANYID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InterfaceCode",
											"type": "String"
										},
										"sink": {
											"name": "INTERFACECODE",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "DESTINATION"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DESTINATION",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Tower VEHICLE Table",
						"description": "Copy activity for dbo.site table. \nCopy activity requires physical mapping of schema in the mapping tab due to data type issues.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower DESTINATION Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.VEHICLE;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Vehicle",
											"type": "String"
										},
										"sink": {
											"name": "VEHICLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VehicleUID",
											"type": "Guid"
										},
										"sink": {
											"name": "VEHICLEUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VehicleType",
											"type": "String"
										},
										"sink": {
											"name": "VEHICLETYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String"
										},
										"sink": {
											"name": "MODEL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ModelYear",
											"type": "Int16"
										},
										"sink": {
											"name": "MODELYEAR",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "BodyModel",
											"type": "String"
										},
										"sink": {
											"name": "BODYMODEL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DatePurchased",
											"type": "DateTime"
										},
										"sink": {
											"name": "DATEPURCHASED",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "VehiclePurchaseCost",
											"type": "Decimal"
										},
										"sink": {
											"name": "VEHICLEPURCHASECOST",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "VehicleCostPerOdometerUnit",
											"type": "Decimal"
										},
										"sink": {
											"name": "VEHICLECOSTPERODOMETERUNIT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "VehicleCostPerHour",
											"type": "Decimal"
										},
										"sink": {
											"name": "VEHICLECOSTPERHOUR",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "LicenseNbr",
											"type": "String"
										},
										"sink": {
											"name": "LICENSENBR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Registration",
											"type": "String"
										},
										"sink": {
											"name": "REGISTRATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VehicleIDNumber",
											"type": "String"
										},
										"sink": {
											"name": "VEHICLEIDNUMBER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CustType",
											"type": "String"
										},
										"sink": {
											"name": "CUSTTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MaterialCat",
											"type": "String"
										},
										"sink": {
											"name": "MATERIALCAT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EquipmentYard",
											"type": "String"
										},
										"sink": {
											"name": "EQUIPMENTYARD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CurrentOdometer",
											"type": "Decimal"
										},
										"sink": {
											"name": "CURRENTODOMETER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OdometerUOM",
											"type": "String"
										},
										"sink": {
											"name": "ODOMETERUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WeightCapacity",
											"type": "Decimal"
										},
										"sink": {
											"name": "WEIGHTCAPACITY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TareWeight",
											"type": "Decimal"
										},
										"sink": {
											"name": "TAREWEIGHT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "WeightUOM",
											"type": "String"
										},
										"sink": {
											"name": "WEIGHTUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VolumeCapacity",
											"type": "Decimal"
										},
										"sink": {
											"name": "VOLUMECAPACITY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "VolumeUOM",
											"type": "String"
										},
										"sink": {
											"name": "VOLUMEUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Transporter",
											"type": "String"
										},
										"sink": {
											"name": "TRANSPORTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SiteID",
											"type": "String"
										},
										"sink": {
											"name": "SITEID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Int16"
										},
										"sink": {
											"name": "ACTIVE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DestinationLockout",
											"type": "Int16"
										},
										"sink": {
											"name": "DESTINATIONLOCKOUT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DestinationLockoutNote",
											"type": "String"
										},
										"sink": {
											"name": "DESTINATIONLOCKOUTNOTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastMaterial",
											"type": "String"
										},
										"sink": {
											"name": "LASTMATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastSource",
											"type": "String"
										},
										"sink": {
											"name": "LASTSOURCE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OnBoardComputerType",
											"type": "Int16"
										},
										"sink": {
											"name": "ONBOARDCOMPUTERTYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "LineOfBusiness",
											"type": "String"
										},
										"sink": {
											"name": "LINEOFBUSINESS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AutoReTareActivateDays",
											"type": "Int16"
										},
										"sink": {
											"name": "AUTORETAREACTIVATEDAYS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AutoReTareActivateTrips",
											"type": "Int16"
										},
										"sink": {
											"name": "AUTORETAREACTIVATETRIPS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AutoReTareNbrOfDays",
											"type": "Int16"
										},
										"sink": {
											"name": "AUTORETARENBROFDAYS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AutoReTareNbrOfTrips",
											"type": "Int16"
										},
										"sink": {
											"name": "AUTORETARENBROFTRIPS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Color",
											"type": "String"
										},
										"sink": {
											"name": "COLOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DEPPermit",
											"type": "String"
										},
										"sink": {
											"name": "DEPPERMIT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DEPPermitExpirationDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "DEPPERMITEXPIRATIONDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DEPRevoked",
											"type": "Int16"
										},
										"sink": {
											"name": "DEPREVOKED",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "GrossVehicleWeight",
											"type": "Decimal"
										},
										"sink": {
											"name": "GROSSVEHICLEWEIGHT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "IDCard",
											"type": "String"
										},
										"sink": {
											"name": "IDCARD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Inactive_Message",
											"type": "String"
										},
										"sink": {
											"name": "INACTIVE_MESSAGE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PermitExpiration",
											"type": "DateTime"
										},
										"sink": {
											"name": "PERMITEXPIRATION",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ScaleForceWeighTwice",
											"type": "Int16"
										},
										"sink": {
											"name": "SCALEFORCEWEIGHTWICE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ScaleRequireRoute",
											"type": "Int16"
										},
										"sink": {
											"name": "SCALEREQUIREROUTE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TareDate",
											"type": "Int16"
										},
										"sink": {
											"name": "TAREDATE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TareNTEP",
											"type": "String"
										},
										"sink": {
											"name": "TARENTEP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DateRegistered",
											"type": "DateTime"
										},
										"sink": {
											"name": "DATEREGISTERED",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ScaleSettings",
											"type": "Int16"
										},
										"sink": {
											"name": "SCALESETTINGS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "FuelType",
											"type": "String"
										},
										"sink": {
											"name": "FUELTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBCUnitID",
											"type": "String"
										},
										"sink": {
											"name": "OBCUNITID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SupplyCapacity",
											"type": "Decimal"
										},
										"sink": {
											"name": "SUPPLYCAPACITY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SupplyUOM",
											"type": "String"
										},
										"sink": {
											"name": "SUPPLYUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UnitCapacity",
											"type": "Decimal"
										},
										"sink": {
											"name": "UNITCAPACITY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "UnitUOM",
											"type": "String"
										},
										"sink": {
											"name": "UNITUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Facility",
											"type": "String"
										},
										"sink": {
											"name": "FACILITY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InternationalRegistrationPlan",
											"type": "Boolean"
										},
										"sink": {
											"name": "INTERNATIONALREGISTRATIONPLAN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RegistrationState",
											"type": "String"
										},
										"sink": {
											"name": "REGISTRATIONSTATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ID",
											"type": "Int64"
										},
										"sink": {
											"name": "ID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OperationalGroup",
											"type": "String"
										},
										"sink": {
											"name": "OPERATIONALGROUP",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "VEHICLE"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VEHICLE",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Tower TRIP Table",
						"description": "Copy activity for dbo.site table. \nCopy activity requires physical mapping of schema in the mapping tab due to data type issues.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower VEHICLE Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.TRIP;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TripUID",
											"type": "Guid"
										},
										"sink": {
											"name": "TRIPUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TripDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "TRIPDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Route",
											"type": "String"
										},
										"sink": {
											"name": "ROUTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TripType",
											"type": "Int16"
										},
										"sink": {
											"name": "TRIPTYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Vehicle",
											"type": "String"
										},
										"sink": {
											"name": "VEHICLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LicenseNbr",
											"type": "String"
										},
										"sink": {
											"name": "LICENSENBR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TripEquipmentType",
											"type": "String"
										},
										"sink": {
											"name": "TRIPEQUIPMENTTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Driver",
											"type": "String"
										},
										"sink": {
											"name": "DRIVER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Helper",
											"type": "String"
										},
										"sink": {
											"name": "HELPER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TripStartTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "TRIPSTARTTIME",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "TripEndTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "TRIPENDTIME",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "TripStartOdometer",
											"type": "Decimal"
										},
										"sink": {
											"name": "TRIPSTARTODOMETER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TripEndOdometer",
											"type": "Decimal"
										},
										"sink": {
											"name": "TRIPENDODOMETER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Destination",
											"type": "String"
										},
										"sink": {
											"name": "DESTINATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DestinationArriveTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "DESTINATIONARRIVETIME",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DestinationLeaveTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "DESTINATIONLEAVETIME",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DestinationOdometer",
											"type": "Decimal"
										},
										"sink": {
											"name": "DESTINATIONODOMETER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ScaleTicketNbr",
											"type": "String"
										},
										"sink": {
											"name": "SCALETICKETNBR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WeightUOM",
											"type": "String"
										},
										"sink": {
											"name": "WEIGHTUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VolumeUOM",
											"type": "String"
										},
										"sink": {
											"name": "VOLUMEUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "GrossWeight",
											"type": "Decimal"
										},
										"sink": {
											"name": "GROSSWEIGHT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ExtraCharges",
											"type": "Decimal"
										},
										"sink": {
											"name": "EXTRACHARGES",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Material1",
											"type": "String"
										},
										"sink": {
											"name": "MATERIAL1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Weight1",
											"type": "Decimal"
										},
										"sink": {
											"name": "WEIGHT1",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Weight1EntryMode",
											"type": "Int16"
										},
										"sink": {
											"name": "WEIGHT1ENTRYMODE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "WeightIn1",
											"type": "Decimal"
										},
										"sink": {
											"name": "WEIGHTIN1",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "WeightIn1EntryMode",
											"type": "Int16"
										},
										"sink": {
											"name": "WEIGHTIN1ENTRYMODE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "WeightOut1",
											"type": "Decimal"
										},
										"sink": {
											"name": "WEIGHTOUT1",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "WeightOut1EntryMode",
											"type": "Int16"
										},
										"sink": {
											"name": "WEIGHTOUT1ENTRYMODE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Volume1",
											"type": "Decimal"
										},
										"sink": {
											"name": "VOLUME1",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PayableUnits1",
											"type": "Decimal"
										},
										"sink": {
											"name": "PAYABLEUNITS1",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Fee1",
											"type": "Decimal"
										},
										"sink": {
											"name": "FEE1",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Material2",
											"type": "String"
										},
										"sink": {
											"name": "MATERIAL2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Weight2",
											"type": "Decimal"
										},
										"sink": {
											"name": "WEIGHT2",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Volume2",
											"type": "Decimal"
										},
										"sink": {
											"name": "VOLUME2",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PayableUnits2",
											"type": "Decimal"
										},
										"sink": {
											"name": "PAYABLEUNITS2",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Fee2",
											"type": "Decimal"
										},
										"sink": {
											"name": "FEE2",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Material3",
											"type": "String"
										},
										"sink": {
											"name": "MATERIAL3",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Weight3",
											"type": "Decimal"
										},
										"sink": {
											"name": "WEIGHT3",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Volume3",
											"type": "Decimal"
										},
										"sink": {
											"name": "VOLUME3",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PayableUnits3",
											"type": "Decimal"
										},
										"sink": {
											"name": "PAYABLEUNITS3",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Fee3",
											"type": "Decimal"
										},
										"sink": {
											"name": "FEE3",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Transporter",
											"type": "String"
										},
										"sink": {
											"name": "TRANSPORTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WorkOrderID",
											"type": "String"
										},
										"sink": {
											"name": "WORKORDERID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Source",
											"type": "String"
										},
										"sink": {
											"name": "SOURCE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SiteEquipment",
											"type": "String"
										},
										"sink": {
											"name": "SITEEQUIPMENT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SiteEquipmentLocationNote",
											"type": "String"
										},
										"sink": {
											"name": "SITEEQUIPMENTLOCATIONNOTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SiteWasteProfileID",
											"type": "String"
										},
										"sink": {
											"name": "SITEWASTEPROFILEID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DestinationCell",
											"type": "String"
										},
										"sink": {
											"name": "DESTINATIONCELL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DestinationGrid",
											"type": "String"
										},
										"sink": {
											"name": "DESTINATIONGRID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DisposalDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "DISPOSALDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Trailer",
											"type": "String"
										},
										"sink": {
											"name": "TRAILER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EndingSequence",
											"type": "Decimal"
										},
										"sink": {
											"name": "ENDINGSEQUENCE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Scale_Gross",
											"type": "String"
										},
										"sink": {
											"name": "SCALE_GROSS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Scale_Tare",
											"type": "String"
										},
										"sink": {
											"name": "SCALE_TARE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StartingSequence",
											"type": "Decimal"
										},
										"sink": {
											"name": "STARTINGSEQUENCE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TareWeight",
											"type": "Decimal"
										},
										"sink": {
											"name": "TAREWEIGHT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "WeightOut",
											"type": "Decimal"
										},
										"sink": {
											"name": "WEIGHTOUT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "MaterialValue1",
											"type": "Decimal"
										},
										"sink": {
											"name": "MATERIALVALUE1",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "MaterialValue2",
											"type": "Decimal"
										},
										"sink": {
											"name": "MATERIALVALUE2",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "MaterialValue3",
											"type": "Decimal"
										},
										"sink": {
											"name": "MATERIALVALUE3",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TripTagNumber",
											"type": "String"
										},
										"sink": {
											"name": "TRIPTAGNUMBER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ScaleTicketUID",
											"type": "Guid"
										},
										"sink": {
											"name": "SCALETICKETUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "syncRowVersion",
											"type": "Byte[]"
										},
										"sink": {
											"name": "SYNCROWVERSION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OBCUID",
											"type": "Guid"
										},
										"sink": {
											"name": "OBCUID",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "TRIP"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "TRIP",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Tower CustomerVWOpenInvoices View",
						"description": "Copy activity for Customer Open Invoice view. \nCopy activity requires physical mapping of schema in the mapping tab due to data type issues.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower TRIP Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.CUSTOMER_VW_OPEN_INVOICES;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BillCustID",
											"type": "String"
										},
										"sink": {
											"name": "BILLCUSTID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InvoiceID",
											"type": "String"
										},
										"sink": {
											"name": "INVOICEID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InvoiceDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "INVOICEDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DueDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "DUEDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Balance",
											"type": "Decimal"
										},
										"sink": {
											"name": "BALANCE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OriginalAmount",
											"type": "Decimal"
										},
										"sink": {
											"name": "ORIGINALAMOUNT",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "CUSTOMER_VW_OPENINVOICES"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "CUSTOMER_VW_OPEN_INVOICES",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Tower CUSTOMERPAYMENTACCOUNT table",
						"description": "Copy activity for Customer Payment Accounts. \nCopy activity requires physical mapping of schema in the mapping tab for security.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower CustomerVWOpenInvoices View",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT CUSTOMERPAYMENTACCOUNTUID\n     , CUSTID\n     , SITEID\n     , ISDEFAULTAUTOMATICPAYMENTACCOUNT\n     , CREDITCARDTYPE\n     , ACCOUNTHOLDERNAME\n     , NULL AS CREDITCARDNUMBER\n     , NULL AS CREDITCARDSECURITYCODE\n     , CREDITCARDEXPIRATIONDATE\n     , NULL AS DEBITACCOUNT\n     , NULL AS DEBITROUTING\n     , PAYMENTACCOUNTADDRESSUID\n     , ACCOUNTTYPE\n     , ACTIVE\n     , NULL AS CREDITCARDDESCRIPTION\n     , NULL AS CREDITCARDLAST4\n     , NULL AS MERCHANTPROFILEID\n     , DEBITACCOUNTTYPE\n     , NULL AS ACCOUNTDESCRIPTION\n     , AUTOPAYMAXLIMIT\n     , AUTOPAYSCOPE\n     , NULL AS DEBITACCOUNTLAST4\n     , NULL AS DEBITROUTINGLAST4\n     , DEBITACCOUNTOWNERSHIP\n     , PROCESSINGMETHOD\n     , MERCHANTTOKEN\nFROM CUSTOMERPAYMENTACCOUNT",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.CUSTOMERPAYMENTACCOUNT;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CUSTOMERPAYMENTACCOUNTUID",
											"type": "Guid"
										},
										"sink": {
											"name": "CUSTOMERPAYMENTACCOUNTUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CUSTID",
											"type": "String"
										},
										"sink": {
											"name": "CUSTID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SITEID",
											"type": "String"
										},
										"sink": {
											"name": "SITEID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ISDEFAULTAUTOMATICPAYMENTACCOUNT",
											"type": "Int16"
										},
										"sink": {
											"name": "ISDEFAULTAUTOMATICPAYMENTACCOUNT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CREDITCARDTYPE",
											"type": "Int16"
										},
										"sink": {
											"name": "CREDITCARDTYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ACCOUNTHOLDERNAME",
											"type": "String"
										},
										"sink": {
											"name": "ACCOUNTHOLDERNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREDITCARDNUMBER",
											"type": "Int32"
										},
										"sink": {
											"name": "CREDITCARDNUMBER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREDITCARDSECURITYCODE",
											"type": "Int32"
										},
										"sink": {
											"name": "CREDITCARDSECURITYCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREDITCARDEXPIRATIONDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "CREDITCARDEXPIRATIONDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DEBITACCOUNT",
											"type": "Int32"
										},
										"sink": {
											"name": "DEBITACCOUNT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DEBITROUTING",
											"type": "Int32"
										},
										"sink": {
											"name": "DEBITROUTING",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PAYMENTACCOUNTADDRESSUID",
											"type": "Guid"
										},
										"sink": {
											"name": "PAYMENTACCOUNTADDRESSUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ACCOUNTTYPE",
											"type": "Int16"
										},
										"sink": {
											"name": "ACCOUNTTYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ACTIVE",
											"type": "Int16"
										},
										"sink": {
											"name": "ACTIVE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CREDITCARDDESCRIPTION",
											"type": "Int32"
										},
										"sink": {
											"name": "CREDITCARDDESCRIPTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREDITCARDLAST4",
											"type": "Int32"
										},
										"sink": {
											"name": "CREDITCARDLAST4",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MERCHANTPROFILEID",
											"type": "Int32"
										},
										"sink": {
											"name": "MERCHANTPROFILEID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DEBITACCOUNTTYPE",
											"type": "Int16"
										},
										"sink": {
											"name": "DEBITACCOUNTTYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ACCOUNTDESCRIPTION",
											"type": "Int32"
										},
										"sink": {
											"name": "ACCOUNTDESCRIPTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AUTOPAYMAXLIMIT",
											"type": "Decimal"
										},
										"sink": {
											"name": "AUTOPAYMAXLIMIT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AUTOPAYSCOPE",
											"type": "Byte"
										},
										"sink": {
											"name": "AUTOPAYSCOPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DEBITACCOUNTLAST4",
											"type": "Int32"
										},
										"sink": {
											"name": "DEBITACCOUNTLAST4",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DEBITROUTINGLAST4",
											"type": "Int32"
										},
										"sink": {
											"name": "DEBITROUTINGLAST4",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DEBITACCOUNTOWNERSHIP",
											"type": "Int16"
										},
										"sink": {
											"name": "DEBITACCOUNTOWNERSHIP",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PROCESSINGMETHOD",
											"type": "Int16"
										},
										"sink": {
											"name": "PROCESSINGMETHOD",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "MERCHANTTOKEN",
											"type": "String"
										},
										"sink": {
											"name": "MERCHANTTOKEN",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "CUSTOMERPAYMENTACCOUNT"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "CUSTOMERPAYMENTACCOUNT",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Tower WORKER Table",
						"description": "Copy activity for dbo.worker table.\nCopy activity requires physical mapping of schema in the mapping tab due to data type issues.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower CUSTOMERPAYMENTACCOUNT table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.TOWER_RAW.WORKER;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Worker",
											"type": "String"
										},
										"sink": {
											"name": "WORKER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WorkerUID",
											"type": "Guid"
										},
										"sink": {
											"name": "WORKERUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String"
										},
										"sink": {
											"name": "FIRSTNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MiddleName",
											"type": "String"
										},
										"sink": {
											"name": "MIDDLENAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String"
										},
										"sink": {
											"name": "LASTNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Suffix",
											"type": "String"
										},
										"sink": {
											"name": "SUFFIX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NickName",
											"type": "String"
										},
										"sink": {
											"name": "NICKNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Supervisor",
											"type": "String"
										},
										"sink": {
											"name": "SUPERVISOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "JobTitle",
											"type": "String"
										},
										"sink": {
											"name": "JOBTITLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WorkerType",
											"type": "Int16"
										},
										"sink": {
											"name": "WORKERTYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "IsSupervisor",
											"type": "Int16"
										},
										"sink": {
											"name": "ISSUPERVISOR",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "IsSalesperson",
											"type": "Int16"
										},
										"sink": {
											"name": "ISSALESPERSON",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "IsCSR",
											"type": "Int16"
										},
										"sink": {
											"name": "ISCSR",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "IsDriver",
											"type": "Int16"
										},
										"sink": {
											"name": "ISDRIVER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "IsHelper",
											"type": "Int16"
										},
										"sink": {
											"name": "ISHELPER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DriversLicenseNbr",
											"type": "String"
										},
										"sink": {
											"name": "DRIVERSLICENSENBR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DriversLicenseClass",
											"type": "String"
										},
										"sink": {
											"name": "DRIVERSLICENSECLASS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DriversLicenseExpiration",
											"type": "DateTime"
										},
										"sink": {
											"name": "DRIVERSLICENSEEXPIRATION",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DriversLicenseState",
											"type": "String"
										},
										"sink": {
											"name": "DRIVERSLICENSESTATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "Int16"
										},
										"sink": {
											"name": "STATUS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "STARTDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "TerminationDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "TERMINATIONDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "AddressUID",
											"type": "Guid"
										},
										"sink": {
											"name": "ADDRESSUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String"
										},
										"sink": {
											"name": "EMAIL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HomeEmail",
											"type": "String"
										},
										"sink": {
											"name": "HOMEEMAIL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String"
										},
										"sink": {
											"name": "PHONE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HomePhone",
											"type": "String"
										},
										"sink": {
											"name": "HOMEPHONE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fax",
											"type": "String"
										},
										"sink": {
											"name": "FAX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mobile",
											"type": "String"
										},
										"sink": {
											"name": "MOBILE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WageRate",
											"type": "Decimal"
										},
										"sink": {
											"name": "WAGERATE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OvertimeRate",
											"type": "Decimal"
										},
										"sink": {
											"name": "OVERTIMERATE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "BurdenPercentage",
											"type": "Decimal"
										},
										"sink": {
											"name": "BURDENPERCENTAGE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CommissionPercentage",
											"type": "Decimal"
										},
										"sink": {
											"name": "COMMISSIONPERCENTAGE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SalesGoal",
											"type": "Decimal"
										},
										"sink": {
											"name": "SALESGOAL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CommissionMethod",
											"type": "Int16"
										},
										"sink": {
											"name": "COMMISSIONMETHOD",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OverridePassword",
											"type": "String"
										},
										"sink": {
											"name": "OVERRIDEPASSWORD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MedicalCardDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "MEDICALCARDDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Int16"
										},
										"sink": {
											"name": "ACTIVE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CompanyID",
											"type": "String"
										},
										"sink": {
											"name": "COMPANYID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EncryptedDriversLicenseNbr",
											"type": "String"
										},
										"sink": {
											"name": "ENCRYPTEDDRIVERSLICENSENBR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DefaultLunchTimeType",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTLUNCHTIMETYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultLunchTime",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTLUNCHTIME",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DefaultLunchDuration",
											"type": "Int16"
										},
										"sink": {
											"name": "DEFAULTLUNCHDURATION",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "IsCollector",
											"type": "Int16"
										},
										"sink": {
											"name": "ISCOLLECTOR",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Notes",
											"type": "String"
										},
										"sink": {
											"name": "NOTES",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IsGrader",
											"type": "Int16"
										},
										"sink": {
											"name": "ISGRADER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AnnualReview",
											"type": "DateTime"
										},
										"sink": {
											"name": "ANNUALREVIEW",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "OperationalGroup",
											"type": "String"
										},
										"sink": {
											"name": "OPERATIONALGROUP",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "WORKER"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "WORKER",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Production/TOWER"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-16T18:13:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/MSAZ01_TOWER')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_IR_V2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TOWER_FULL_LOAD_DIM_DC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Tower Table Names",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "SELECT *\r\n  FROM lrs_raw.master_data.tower_Table_names\r\n WHERE Load_type = 'Full'",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "TOWER_TABLE_NAMES",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Tower Copy Activities",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Tower Table Names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Tower Table Names').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy tables",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table ',item().Schema_name,'.',item().Table_name)}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": {
													"value": "@item().table_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "@item().Table_name",
												"Snowflake_Schema": "@item().Schema_name"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Test/Tower_DC"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/MSAZ01_TOWER')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_IR_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TOWER_FULL_LOAD_FACT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Tower Table Names",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TOWER_WATERMARK",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Copy Tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Tower Table Names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Tower Table Names').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table ',item().Snowflake_Schema,'.', item().Table_Name)}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": {
													"value": "@item().Table_Name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "@item().Table_name",
												"Snowflake_Schema": "@item().Snowflake_Schema"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Production/TOWER"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-29T04:22:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/MSAZ01_TOWER')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_IR_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TOWER_FULL_LOAD_FACT_DAILY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Tower Table Names",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TOWER_WATERMARK_PVT",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "UID Incremental Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Tower Table Names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Tower Table Names').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "WorkOrder ID Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Payment Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": "truncate table LRS_RAW.TOWER_RAW.WORKORDER_1",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "WorkOrderID",
														"type": "String"
													},
													"sink": {
														"name": "WORKORDERID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "WorkOrderUID",
														"type": "Guid"
													},
													"sink": {
														"name": "WORKORDERUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "WorkPONbr",
														"type": "String"
													},
													"sink": {
														"name": "WORKPONBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DestCertificate",
														"type": "String"
													},
													"sink": {
														"name": "DESTCERTIFICATE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CODRequired",
														"type": "Int16"
													},
													"sink": {
														"name": "CODREQUIRED",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CustomerDataFileUID",
														"type": "Guid"
													},
													"sink": {
														"name": "CUSTOMERDATAFILEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceMessage",
														"type": "String"
													},
													"sink": {
														"name": "INVOICEMESSAGE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Printed",
														"type": "Int16"
													},
													"sink": {
														"name": "PRINTED",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "PrintDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "PRINTDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "PrintUser",
														"type": "String"
													},
													"sink": {
														"name": "PRINTUSER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Destination",
														"type": "String"
													},
													"sink": {
														"name": "DESTINATION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ServiceQuantity",
														"type": "Decimal"
													},
													"sink": {
														"name": "SERVICEQUANTITY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ServiceUOM",
														"type": "String"
													},
													"sink": {
														"name": "SERVICEUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ReferenceNumber",
														"type": "String"
													},
													"sink": {
														"name": "REFERENCENUMBER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TagNumber",
														"type": "String"
													},
													"sink": {
														"name": "TAGNUMBER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "FinalManifestDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "FINALMANIFESTDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "IsNoChargePickup",
														"type": "Boolean"
													},
													"sink": {
														"name": "ISNOCHARGEPICKUP",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "WORKORDER"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "WORKORDER",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								},
								{
									"name": "Invoice Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GLExportBatch Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from INVOICE \nwhere INVOICEuiID >  @{item().INVOICE}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "InvoiceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "INVOICEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceID",
														"type": "String"
													},
													"sink": {
														"name": "INVOICEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "Int16"
													},
													"sink": {
														"name": "STATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "InvoiceContent",
														"type": "Int16"
													},
													"sink": {
														"name": "INVOICECONTENT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "PrintInvoice",
														"type": "Int16"
													},
													"sink": {
														"name": "PRINTINVOICE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "InvoiceOrderKey",
														"type": "String"
													},
													"sink": {
														"name": "INVOICEORDERKEY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillBatchUID",
														"type": "Guid"
													},
													"sink": {
														"name": "BILLBATCHUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillCustID",
														"type": "String"
													},
													"sink": {
														"name": "BILLCUSTID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BillSiteID",
														"type": "String"
													},
													"sink": {
														"name": "BILLSITEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BillName",
														"type": "String"
													},
													"sink": {
														"name": "BILLNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillContact",
														"type": "String"
													},
													"sink": {
														"name": "BILLCONTACT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillAddressUID",
														"type": "Guid"
													},
													"sink": {
														"name": "BILLADDRESSUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillPhone",
														"type": "String"
													},
													"sink": {
														"name": "BILLPHONE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillFax",
														"type": "String"
													},
													"sink": {
														"name": "BILLFAX",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillEmail",
														"type": "String"
													},
													"sink": {
														"name": "BILLEMAIL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SiteAddressUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SITEADDRESSUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "INVOICEDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LastInvoiceDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "LASTINVOICEDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DueDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "DUEDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "FinanceChargeThruDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "FINANCECHARGETHRUDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CustClass",
														"type": "String"
													},
													"sink": {
														"name": "CUSTCLASS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BalForward",
														"type": "Decimal"
													},
													"sink": {
														"name": "BALFORWARD",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AgingBal00",
														"type": "Decimal"
													},
													"sink": {
														"name": "AGINGBAL00",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AgingBal01",
														"type": "Decimal"
													},
													"sink": {
														"name": "AGINGBAL01",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AgingBal02",
														"type": "Decimal"
													},
													"sink": {
														"name": "AGINGBAL02",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AgingBal03",
														"type": "Decimal"
													},
													"sink": {
														"name": "AGINGBAL03",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AgingBal04",
														"type": "Decimal"
													},
													"sink": {
														"name": "AGINGBAL04",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "NewBalance",
														"type": "Decimal"
													},
													"sink": {
														"name": "NEWBALANCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotSvcOneTime",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTSVCONETIME",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotSvcRecurring",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTSVCRECURRING",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotSvcOnCall",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTSVCONCALL",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotSvcTaxes",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTSVCTAXES",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotFinCharges",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTFINCHARGES",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotCharges",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTCHARGES",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotChargeTaxes",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTCHARGETAXES",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotCredits",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTCREDITS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotCreditTaxes",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTCREDITTAXES",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotPayments",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTPAYMENTS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AutomaticPaymentType",
														"type": "Int16"
													},
													"sink": {
														"name": "AUTOMATICPAYMENTTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CompanyID",
														"type": "String"
													},
													"sink": {
														"name": "COMPANYID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceMailingOption",
														"type": "Int16"
													},
													"sink": {
														"name": "INVOICEMAILINGOPTION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceInsert",
														"type": "String"
													},
													"sink": {
														"name": "INVOICEINSERT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ExternalInvoiceNbr",
														"type": "String"
													},
													"sink": {
														"name": "EXTERNALINVOICENBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceDetailFormat",
														"type": "Int16"
													},
													"sink": {
														"name": "INVOICEDETAILFORMAT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LineOfBusiness",
														"type": "String"
													},
													"sink": {
														"name": "LINEOFBUSINESS",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "INVOICE"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "INVOICE",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								},
								{
									"name": "Ardetail Delta Load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "Select * from ARdetail \nwhere replace(ARDETAILUID, '-', '') > @{item().ARDETAIL}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ARDetailUID",
														"type": "Guid"
													},
													"sink": {
														"name": "ARDETAILUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SourceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SOURCEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "Int16"
													},
													"sink": {
														"name": "STATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CustID",
														"type": "String"
													},
													"sink": {
														"name": "CUSTID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SiteID",
														"type": "String"
													},
													"sink": {
														"name": "SITEID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Material",
														"type": "String"
													},
													"sink": {
														"name": "MATERIAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DetailType",
														"type": "Int16"
													},
													"sink": {
														"name": "DETAILTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Tax",
														"type": "String"
													},
													"sink": {
														"name": "TAX",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DebitAcct",
														"type": "String"
													},
													"sink": {
														"name": "DEBITACCT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CreditAcct",
														"type": "String"
													},
													"sink": {
														"name": "CREDITACCT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Period",
														"type": "String"
													},
													"sink": {
														"name": "PERIOD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "INVOICEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TransactionDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "TRANSACTIONDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DueDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "DUEDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "GLExportBatchUID",
														"type": "Guid"
													},
													"sink": {
														"name": "GLEXPORTBATCHUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Quantity",
														"type": "Decimal"
													},
													"sink": {
														"name": "QUANTITY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "UnitRate",
														"type": "Decimal"
													},
													"sink": {
														"name": "UNITRATE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "OriginalAmount",
														"type": "Decimal"
													},
													"sink": {
														"name": "ORIGINALAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Balance",
														"type": "Decimal"
													},
													"sink": {
														"name": "BALANCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BilledAppliedAmount",
														"type": "Decimal"
													},
													"sink": {
														"name": "BILLEDAPPLIEDAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DisplayOnInvoice",
														"type": "Int16"
													},
													"sink": {
														"name": "DISPLAYONINVOICE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DetailSource",
														"type": "Int16"
													},
													"sink": {
														"name": "DETAILSOURCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CompanyID",
														"type": "String"
													},
													"sink": {
														"name": "COMPANYID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CreatedDateTime",
														"type": "DateTime"
													},
													"sink": {
														"name": "CREATEDDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CreditAcctSegType",
														"type": "Byte"
													},
													"sink": {
														"name": "CREDITACCTSEGTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DebitAcctSegType",
														"type": "Byte"
													},
													"sink": {
														"name": "DEBITACCTSEGTYPE",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "Ardetail"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "ARDETAIL",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								},
								{
									"name": "GLExportBatch Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Ardetail Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from GLEXPORTBATCH where GLEXPORTBATCHUID > @{item().GLEXPORTBATCH}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "GLExportBatchUID",
														"type": "Guid"
													},
													"sink": {
														"name": "GLEXPORTBATCHUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "GLExportBatchID",
														"type": "String"
													},
													"sink": {
														"name": "GLEXPORTBATCHID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ExportDateTime",
														"type": "DateTime"
													},
													"sink": {
														"name": "EXPORTDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "Int16"
													},
													"sink": {
														"name": "STATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CreditTotal",
														"type": "Decimal"
													},
													"sink": {
														"name": "CREDITTOTAL",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DebitTotal",
														"type": "Decimal"
													},
													"sink": {
														"name": "DEBITTOTAL",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Description",
														"type": "String"
													},
													"sink": {
														"name": "DESCRIPTION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "FileCount",
														"type": "Int32"
													},
													"sink": {
														"name": "FILECOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BatchType",
														"type": "Int16"
													},
													"sink": {
														"name": "BATCHTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CompanyID",
														"type": "String"
													},
													"sink": {
														"name": "COMPANYID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Period",
														"type": "String"
													},
													"sink": {
														"name": "PERIOD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CompanyList",
														"type": "String"
													},
													"sink": {
														"name": "COMPANYLIST",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PeriodList",
														"type": "String"
													},
													"sink": {
														"name": "PERIODLIST",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "GLEXPORTBATCH"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "GLEXPORTBATCH",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								},
								{
									"name": "Payment Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Invoice Detail Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from payment \nwhere paymentuid >  @{item().PAYMENT}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "PaymentUID",
														"type": "Guid"
													},
													"sink": {
														"name": "PAYMENTUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PaymentBatchUID",
														"type": "Guid"
													},
													"sink": {
														"name": "PAYMENTBATCHUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BatchSequence",
														"type": "Int32"
													},
													"sink": {
														"name": "BATCHSEQUENCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SourceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SOURCEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PaymentDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "PAYMENTDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "Int16"
													},
													"sink": {
														"name": "STATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ClearOrNSFDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "CLEARORNSFDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CustID",
														"type": "String"
													},
													"sink": {
														"name": "CUSTID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PaymentMethod",
														"type": "Int16"
													},
													"sink": {
														"name": "PAYMENTMETHOD",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CreditCardType",
														"type": "Int16"
													},
													"sink": {
														"name": "CREDITCARDTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "PaymentBankAcct",
														"type": "String"
													},
													"sink": {
														"name": "PAYMENTBANKACCT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PaymentIDNbr",
														"type": "String"
													},
													"sink": {
														"name": "PAYMENTIDNBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Amount",
														"type": "Decimal"
													},
													"sink": {
														"name": "AMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ApplicationMethod",
														"type": "Int16"
													},
													"sink": {
														"name": "APPLICATIONMETHOD",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RemoveCreditHold",
														"type": "Int16"
													},
													"sink": {
														"name": "REMOVECREDITHOLD",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CreditAmount",
														"type": "Decimal"
													},
													"sink": {
														"name": "CREDITAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CreditReason",
														"type": "String"
													},
													"sink": {
														"name": "CREDITREASON",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PaymentNote",
														"type": "String"
													},
													"sink": {
														"name": "PAYMENTNOTE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CustomerBalance",
														"type": "Decimal"
													},
													"sink": {
														"name": "CUSTOMERBALANCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BankAccountXRefUID",
														"type": "Guid"
													},
													"sink": {
														"name": "BANKACCOUNTXREFUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CollectionsNotified",
														"type": "Int16"
													},
													"sink": {
														"name": "COLLECTIONSNOTIFIED",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CustomerPaymentAccountUID",
														"type": "Guid"
													},
													"sink": {
														"name": "CUSTOMERPAYMENTACCOUNTUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ReversedByDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "REVERSEDBYDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "ReversedByUserID",
														"type": "String"
													},
													"sink": {
														"name": "REVERSEDBYUSERID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ReversalReasonNote",
														"type": "String"
													},
													"sink": {
														"name": "REVERSALREASONNOTE",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "PAYMENT"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "PAYMENT",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								},
								{
									"name": "Invoice Detail Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Invoice Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from INVOICEDETAIL \nwhere INVOICEDETAILUID > @{item().INVOICEDETAIL}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "InvoiceDetailUID",
														"type": "Guid"
													},
													"sink": {
														"name": "INVOICEDETAILUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "INVOICEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SiteID",
														"type": "String"
													},
													"sink": {
														"name": "SITEID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ServiceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SERVICEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SourceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SOURCEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SourceIDNbr",
														"type": "String"
													},
													"sink": {
														"name": "SOURCEIDNBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LineType",
														"type": "Int16"
													},
													"sink": {
														"name": "LINETYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LineSubType",
														"type": "Int16"
													},
													"sink": {
														"name": "LINESUBTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SvcCode",
														"type": "String"
													},
													"sink": {
														"name": "SVCCODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Description",
														"type": "String"
													},
													"sink": {
														"name": "DESCRIPTION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Salesperson",
														"type": "String"
													},
													"sink": {
														"name": "SALESPERSON",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SvcFrequency",
														"type": "String"
													},
													"sink": {
														"name": "SVCFREQUENCY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Quantity",
														"type": "Decimal"
													},
													"sink": {
														"name": "QUANTITY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Amount",
														"type": "Decimal"
													},
													"sink": {
														"name": "AMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "UnitPrice",
														"type": "Decimal"
													},
													"sink": {
														"name": "UNITPRICE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TaxAmount",
														"type": "Decimal"
													},
													"sink": {
														"name": "TAXAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "StartDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "STARTDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "EndDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "ENDDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "PrintRecord",
														"type": "Int16"
													},
													"sink": {
														"name": "PRINTRECORD",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LineOrderKey1",
														"type": "String"
													},
													"sink": {
														"name": "LINEORDERKEY1",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LineOrderKey2",
														"type": "String"
													},
													"sink": {
														"name": "LINEORDERKEY2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LineOrderKey3",
														"type": "String"
													},
													"sink": {
														"name": "LINEORDERKEY3",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LineOrderKey4",
														"type": "String"
													},
													"sink": {
														"name": "LINEORDERKEY4",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PONbr",
														"type": "String"
													},
													"sink": {
														"name": "PONBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "POSource",
														"type": "Int16"
													},
													"sink": {
														"name": "POSOURCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AssignedToCollections",
														"type": "Int16"
													},
													"sink": {
														"name": "ASSIGNEDTOCOLLECTIONS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AssignedToCollectionsDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "ASSIGNEDTOCOLLECTIONSDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DiscountAmount",
														"type": "Decimal"
													},
													"sink": {
														"name": "DISCOUNTAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "PriorARDStatus",
														"type": "Int16"
													},
													"sink": {
														"name": "PRIORARDSTATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LineLevel",
														"type": "Int16"
													},
													"sink": {
														"name": "LINELEVEL",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SiteAddressUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SITEADDRESSUID",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "INVOICEDETAIL"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "INVOICEDETAIL",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-29T04:22:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/MSAZ01_TOWER')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_IR_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TOWER_FULL_LOAD_FACT_DC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Tower Table Names",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TOWER_WATERMARK",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Copy Tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Tower Table Names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Tower Table Names').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table ',item().Snowflake_Schema,'.', item().Table_Name)}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": {
													"value": "@item().Table_Name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "@item().Table_name",
												"Snowflake_Schema": "@item().Snowflake_Schema"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Test/Tower_DC"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/MSAZ01_TOWER')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_IR_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TOWER_INCREMENTAL_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Tower Incremental Load",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TOWER_INCREMENTAL_LOAD_FACT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Production/Orchestration"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T18:18:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TOWER_INCREMENTAL_LOAD_FACT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TOWER_INCREMENTAL_LOAD_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Tower Table Names",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "SELECT *\nfrom lrs_raw.master_data.tower_Table_names\nwhere Load_type = 'Incremental'\nand\ntable_name IN ('SERVICEINFO', 'DAILYROUTEENTRY', 'DAILYROUTEENTRYVEHICLE','WORKORDERCHARGE', 'DAILYROUTEENTRY', 'DAILYROUTEDOWNTIME','DAILYROUTEENTRYLABOR')",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TOWER_WATERMARK_PVT",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DateTime Incremental Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Tower Table Names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Tower Table Names').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "SERVICEINFO Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging for ServiceInfo",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from SERVICEINFO where STARTDATE > DATEADD(day,-', \n    pipeline().parameters.Incremental_Range,\n    ', GETDATE())'\n    )\n}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ARDETAILUID",
														"type": "String"
													},
													"sink": {
														"name": "ARDETAILUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SOURCEUID",
														"type": "String"
													},
													"sink": {
														"name": "SOURCEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "STATUS",
														"type": "Int64"
													},
													"sink": {
														"name": "STATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CUSTID",
														"type": "String"
													},
													"sink": {
														"name": "CUSTID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SITEID",
														"type": "String"
													},
													"sink": {
														"name": "SITEID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "MATERIAL",
														"type": "String"
													},
													"sink": {
														"name": "MATERIAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DETAILTYPE",
														"type": "Int64"
													},
													"sink": {
														"name": "DETAILTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TAX",
														"type": "String"
													},
													"sink": {
														"name": "TAX",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DEBITACCT",
														"type": "String"
													},
													"sink": {
														"name": "DEBITACCT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CREDITACCT",
														"type": "String"
													},
													"sink": {
														"name": "CREDITACCT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PERIOD",
														"type": "String"
													},
													"sink": {
														"name": "PERIOD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "INVOICEUID",
														"type": "String"
													},
													"sink": {
														"name": "INVOICEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TRANSACTIONDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "TRANSACTIONDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DUEDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DUEDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "GLEXPORTBATCHUID",
														"type": "String"
													},
													"sink": {
														"name": "GLEXPORTBATCHUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QUANTITY",
														"type": "Int64"
													},
													"sink": {
														"name": "QUANTITY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "UNITRATE",
														"type": "Int64"
													},
													"sink": {
														"name": "UNITRATE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ORIGINALAMOUNT",
														"type": "Int64"
													},
													"sink": {
														"name": "ORIGINALAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BALANCE",
														"type": "Int64"
													},
													"sink": {
														"name": "BALANCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BILLEDAPPLIEDAMOUNT",
														"type": "Int64"
													},
													"sink": {
														"name": "BILLEDAPPLIEDAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DISPLAYONINVOICE",
														"type": "Int64"
													},
													"sink": {
														"name": "DISPLAYONINVOICE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DETAILSOURCE",
														"type": "Int64"
													},
													"sink": {
														"name": "DETAILSOURCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "COMPANYID",
														"type": "String"
													},
													"sink": {
														"name": "COMPANYID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CREATEDDATETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "CREATEDDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CREDITACCTSEGTYPE",
														"type": "Int64"
													},
													"sink": {
														"name": "CREDITACCTSEGTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DEBITACCTSEGTYPE",
														"type": "Int64"
													},
													"sink": {
														"name": "DEBITACCTSEGTYPE",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "SERVICEINFO"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "ARDETAIL_STAGING",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								},
								{
									"name": "SERVICEINFO Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "SERVICEINFO Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into LRS_RAW.TOWER_RAW.ARDETAIL t \nusing \n    TOWER_RAW.ARDETAIL_STAGING s \non t.ardetailuid = s.ardetailuid  \nwhen matched then update set \n\tardetailuid = s.ardetailuid ,\n      t.sourceuid = s.sourceuid ,\n      t.status = s.status ,\n      t.custid = s.custid ,\n      t.siteid = s.siteid ,\n      t.material = s.material ,\n      t.detailtype = s.detailtype ,\n      t.tax = s.tax ,\n      t.debitacct = s.debitacct ,\n      t.creditacct = s.creditacct ,\n      t.period = s.period ,\n      t.invoiceuid = s.invoiceuid ,\n      t.transactiondate = s.transactiondate ,\n      t.duedate = s.duedate ,\n      t.glexportbatchuid = s.glexportbatchuid ,\n      t.quantity = s.quantity ,\n      t.unitrate = s.unitrate,\n      t.originalamount = s.originalamount ,\n      t.balance = s.balance ,\n      t.billedappliedamount = s.billedappliedamount ,\n      t.displayoninvoice = s.displayoninvoice ,\n      t.detailsource = s.detailsource ,\n      t.companyid = s. companyid ,\n      t.createddatetime = s.createddatetime ,\n      t.creditacctsegtype = s.creditacctsegtype ,\n      t.debitacctsegtype = s.debitacctsegtype \nwhen not matched then insert \n\t(\n\tardetailuid ,\n      t.sourceuid ,\n      t.status ,\n      t.custid ,\n      t.siteid ,\n      t.material ,\n      t.detailtype ,\n      t.tax ,\n      t.debitacct ,\n      t.creditacct ,\n      t.period ,\n      t.invoiceuid ,\n      t.transactiondate ,\n      t.duedate ,\n      t.glexportbatchuid ,\n      t.quantity ,\n      t.unitrate ,\n      t.originalamount ,\n      t.balance ,\n      t.billedappliedamount ,\n      t.displayoninvoice ,\n      t.detailsource ,\n      t.companyid ,\n      t.createddatetime ,\n      t.creditacctsegtype ,\n      t.debitacctsegtype \n\t)\nvalues \n\t(\n\t ardetailuid ,\n      s.sourceuid ,\n      s.status ,\n      s.custid ,\n      s.siteid ,\n      s.material ,\n      s.detailtype ,\n      s.tax ,\n      s.debitacct ,\n      s.creditacct ,\n      s.period ,\n      s.invoiceuid ,\n      s.transactiondate ,\n      s.duedate ,\n      s.glexportbatchuid ,\n      s.quantity ,\n      s.unitrate ,\n      s.originalamount ,\n      s.balance ,\n      s.billedappliedamount ,\n      s.displayoninvoice ,\n      s.detailsource ,\n      s.companyid ,\n      s.createddatetime ,\n      s.creditacctsegtype ,\n      s.debitacctsegtype)'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Create staging for ServiceInfo",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table LRS_RAW.TOWER_RAW.SERVICEINFO_STAGING',\n    ' as select * from  \n    LRS_RAW.TOWER_RAW.SERVICEINFO where 1=0'\n    )\n    }",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for SERVICEINFO",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "SERVICEINFO Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table LRS_RAW.TOWER_RAW.SERVICEINFO_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "DAILYROUTEENTRYVEHICLE Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging for DAILYROUTEENTRYVEHICLE",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from DAILYROUTEENTRYVEHICLE where exportdatetime > DATEADD(day,-', \n    pipeline().parameters.Incremental_Range,\n    ', GETDATE())'\n    )\n}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "GLExportBatchUID",
														"type": "Guid"
													},
													"sink": {
														"name": "GLEXPORTBATCHUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "GLExportBatchID",
														"type": "String"
													},
													"sink": {
														"name": "GLEXPORTBATCHID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ExportDateTime",
														"type": "DateTime"
													},
													"sink": {
														"name": "EXPORTDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "Int16"
													},
													"sink": {
														"name": "STATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CreditTotal",
														"type": "Decimal"
													},
													"sink": {
														"name": "CREDITTOTAL",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DebitTotal",
														"type": "Decimal"
													},
													"sink": {
														"name": "DEBITTOTAL",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Description",
														"type": "String"
													},
													"sink": {
														"name": "DESCRIPTION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "FileCount",
														"type": "Int32"
													},
													"sink": {
														"name": "FILECOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BatchType",
														"type": "Int16"
													},
													"sink": {
														"name": "BATCHTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CompanyID",
														"type": "String"
													},
													"sink": {
														"name": "COMPANYID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Period",
														"type": "String"
													},
													"sink": {
														"name": "PERIOD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CompanyList",
														"type": "String"
													},
													"sink": {
														"name": "COMPANYLIST",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PeriodList",
														"type": "String"
													},
													"sink": {
														"name": "PERIODLIST",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "DAILYROUTEENTRYVEHICLE"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "GLEXPORTBATCH_STAGING",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								},
								{
									"name": "GLExportBatch Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "DAILYROUTEENTRYVEHICLE Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into LRS_RAW.TOWER_RAW.GLEXPORTBATCH t \nusing \n    TOWER_RAW.GLEXPORTBATCH_STAGING s \non t.GLEXPORTBATCHUID = s.GLEXPORTBATCHUID  \nwhen matched then update set \n\tt.glexportbatchuid = s.glexportbatchuid ,\n\tt.glexportbatchid = s.glexportbatchid,\n\tt.exportdatetime= s.exportdatetime ,\n\tt.status = s.status ,\n\tt.credittotal = s.credittotal ,\n\tt.debittotal = s.debittotal ,\n\tt.description = s.description ,\n\tt.filecount = s.filecount,\n\tt.batchtype = s.batchtype,\n\tt.companyid = s.companyid,\n\tt.period = s.period ,\n\tt.companylist = s.companylist ,\n\tt.periodlist = s.periodlist \nwhen not matched then insert \n\t(\n\tt.glexportbatchuid,\n\tt.glexportbatchid ,\n\tt.exportdatetime,\n\tt.status ,\n\tt.credittotal ,\n\tt.debittotal ,\n\tt.description ,\n\tt.filecount ,\n\tt.batchtype ,\n\tt.companyid ,\n\tt.period ,\n\tt.companylist ,\n\tt.periodlist \n\t)\nvalues \n\t(\n\ts.glexportbatchuid ,\n\ts.glexportbatchid ,\n\ts.exportdatetime,\n\ts.status ,\n\ts.credittotal ,\n\ts.debittotal ,\n\ts.description ,\n\ts.filecount ,\n\ts.batchtype ,\n\ts.companyid ,\n\ts.period ,\n\ts.companylist,\n\ts.periodlist)'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Create staging for DAILYROUTEENTRYVEHICLE",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table LRS_RAW.TOWER_RAW.DAILYROUTEENTRYVEHICLE_STAGING',\n    ' as select * from  \n    LRS_RAW.TOWER_RAW.DAILYROUTEENTRYVEHICLE where 1=0'\n    )\n    }",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for GLExportBatch",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "GLExportBatch Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table LRS_RAW.TOWER_RAW.GLEXPORTBATCH_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Payment Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging for Payment",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from PAYMENT where PAYMENTDATE > DATEADD(day,-', \n    pipeline().parameters.Incremental_Range,\n    ', GETDATE())'\n    )\n}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "PaymentUID",
														"type": "Guid"
													},
													"sink": {
														"name": "PAYMENTUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PaymentBatchUID",
														"type": "Guid"
													},
													"sink": {
														"name": "PAYMENTBATCHUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BatchSequence",
														"type": "Int32"
													},
													"sink": {
														"name": "BATCHSEQUENCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SourceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SOURCEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PaymentDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "PAYMENTDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "Int16"
													},
													"sink": {
														"name": "STATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ClearOrNSFDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "CLEARORNSFDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CustID",
														"type": "String"
													},
													"sink": {
														"name": "CUSTID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PaymentMethod",
														"type": "Int16"
													},
													"sink": {
														"name": "PAYMENTMETHOD",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CreditCardType",
														"type": "Int16"
													},
													"sink": {
														"name": "CREDITCARDTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "PaymentBankAcct",
														"type": "String"
													},
													"sink": {
														"name": "PAYMENTBANKACCT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PaymentIDNbr",
														"type": "String"
													},
													"sink": {
														"name": "PAYMENTIDNBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Amount",
														"type": "Decimal"
													},
													"sink": {
														"name": "AMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ApplicationMethod",
														"type": "Int16"
													},
													"sink": {
														"name": "APPLICATIONMETHOD",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RemoveCreditHold",
														"type": "Int16"
													},
													"sink": {
														"name": "REMOVECREDITHOLD",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CreditAmount",
														"type": "Decimal"
													},
													"sink": {
														"name": "CREDITAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CreditReason",
														"type": "String"
													},
													"sink": {
														"name": "CREDITREASON",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PaymentNote",
														"type": "String"
													},
													"sink": {
														"name": "PAYMENTNOTE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CustomerBalance",
														"type": "Decimal"
													},
													"sink": {
														"name": "CUSTOMERBALANCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BankAccountXRefUID",
														"type": "Guid"
													},
													"sink": {
														"name": "BANKACCOUNTXREFUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CollectionsNotified",
														"type": "Int16"
													},
													"sink": {
														"name": "COLLECTIONSNOTIFIED",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CustomerPaymentAccountUID",
														"type": "Guid"
													},
													"sink": {
														"name": "CUSTOMERPAYMENTACCOUNTUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ReversedByDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "REVERSEDBYDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "ReversedByUserID",
														"type": "String"
													},
													"sink": {
														"name": "REVERSEDBYUSERID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ReversalReasonNote",
														"type": "String"
													},
													"sink": {
														"name": "REVERSALREASONNOTE",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "Payment"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "PAYMENT_STAGING",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								},
								{
									"name": "Payment Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Payment Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into LRS_RAW.TOWER_RAW.PAYMENT t \nusing \n    TOWER_RAW.PAYMENT_STAGING s \non t.PAYMENTUID = s.PAYMENTUID  \nwhen matched then update set \n\tt.paymentuid =s.paymentuid , \n\tt.paymentbatchuid =s.paymentbatchuid , \n\tt.batchsequence =s.batchsequence , \n\tt.sourceuid =s.sourceuid, \n\tt.paymentdate =s.paymentdate , \n\tt.status =s.status, \n\tt.clearornsfdate =s.clearornsfdate, \n\tt.custid =s. custid , \n\tt.paymentmethod =s.paymentmethod , \n\tt.creditcardtype =s.creditcardtype, \n\tt.paymentbankacct =s.paymentbankacct, \n\tt.paymentidnbr =s.paymentidnbr, \n\tt.amount =s.amount , \n\tt.applicationmethod =s.applicationmethod , \n\tt.removecredithold =s.removecredithold , \n\tt.creditamount =s.creditamount , \n\tt.creditreason =s.creditreason, \n\tt.paymentnote=s.paymentnote ,  \n\tt.customerbalance =s.customerbalance, \n\tt.bankaccountxrefuid =s.bankaccountxrefuid , \n\tt.collectionsnotified =s.collectionsnotified, \n\tt.customerpaymentaccountuid =s.customerpaymentaccountuid, \n\tt.reversedbydate=s.reversedbydate , \n\tt.reversedbyuserid =s.reversedbyuserid , \n\tt.reversalreasonnote = s.reversalreasonnote  \nwhen not matched then insert \n\t(\n\tt.paymentuid ,\n\tt.paymentbatchuid ,\n\tt.batchsequence ,\n\tt.sourceuid ,\n\tt.paymentdate ,\n\tt.status ,\n\tt.clearornsfdate ,\n\tt.custid ,\n\tt.paymentmethod ,\n\tt.creditcardtype ,\n\tt.paymentbankacct ,\n\tt.paymentidnbr ,\n\tt.amount ,\n\tt.applicationmethod ,\n\tt.removecredithold ,\n\tt.creditamount ,\n\tt.creditreason ,\n\tt.paymentnote, \n\tt.customerbalance ,\n\tt.bankaccountxrefuid ,\n\tt.collectionsnotified ,\n\tt.customerpaymentaccountuid,\n\tt.reversedbydate,\n\tt.reversedbyuserid ,\n\tt.reversalreasonnote \n\t)\nvalues \n\t(\n\ts.paymentuid ,\n\ts.paymentbatchuid ,\n\ts.batchsequence ,\n\ts.sourceuid ,\n\ts.paymentdate ,\n\ts.status ,\n\ts.clearornsfdate ,\n\ts.custid ,\n\ts.paymentmethod ,\n\ts.creditcardtype ,\n\ts.paymentbankacct ,\n\ts.paymentidnbr ,\n\ts.amount ,\n\ts.applicationmethod ,\n\ts.removecredithold ,\n\ts.creditamount ,\n\ts.creditreason ,\n\ts.paymentnote, \n\ts.customerbalance ,\n\ts.bankaccountxrefuid ,\n\ts.collectionsnotified ,\n\ts.customerpaymentaccountuid ,\n\ts.reversedbydate,\n\ts.reversedbyuserid ,\n\ts.reversalreasonnote )'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Create staging for Payment",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table LRS_RAW.TOWER_RAW.PAYMENT_STAGING',\n    ' as select * from  \n    LRS_RAW.TOWER_RAW.PAYMENT where 1=0'\n    )\n    }",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for Payment",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Payment Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table LRS_RAW.TOWER_RAW.PAYMENT_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "InvoiceDetail Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging for InvoiceDetail",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from INVOICEDETAIL \n    where STARTDATE > (SELECT MAX(STARTDATE) FROM INVOICEDETAIL) -' , \n  pipeline().parameters.Incremental_Range2\n    )\n}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "InvoiceDetailUID",
														"type": "Guid"
													},
													"sink": {
														"name": "INVOICEDETAILUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "INVOICEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SiteID",
														"type": "String"
													},
													"sink": {
														"name": "SITEID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ServiceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SERVICEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SourceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SOURCEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SourceIDNbr",
														"type": "String"
													},
													"sink": {
														"name": "SOURCEIDNBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LineType",
														"type": "Int16"
													},
													"sink": {
														"name": "LINETYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LineSubType",
														"type": "Int16"
													},
													"sink": {
														"name": "LINESUBTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SvcCode",
														"type": "String"
													},
													"sink": {
														"name": "SVCCODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Description",
														"type": "String"
													},
													"sink": {
														"name": "DESCRIPTION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Salesperson",
														"type": "String"
													},
													"sink": {
														"name": "SALESPERSON",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SvcFrequency",
														"type": "String"
													},
													"sink": {
														"name": "SVCFREQUENCY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Quantity",
														"type": "Decimal"
													},
													"sink": {
														"name": "QUANTITY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Amount",
														"type": "Decimal"
													},
													"sink": {
														"name": "AMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "UnitPrice",
														"type": "Decimal"
													},
													"sink": {
														"name": "UNITPRICE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TaxAmount",
														"type": "Decimal"
													},
													"sink": {
														"name": "TAXAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "StartDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "STARTDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "EndDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "ENDDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "PrintRecord",
														"type": "Int16"
													},
													"sink": {
														"name": "PRINTRECORD",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LineOrderKey1",
														"type": "String"
													},
													"sink": {
														"name": "LINEORDERKEY1",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LineOrderKey2",
														"type": "String"
													},
													"sink": {
														"name": "LINEORDERKEY2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LineOrderKey3",
														"type": "String"
													},
													"sink": {
														"name": "LINEORDERKEY3",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LineOrderKey4",
														"type": "String"
													},
													"sink": {
														"name": "LINEORDERKEY4",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PONbr",
														"type": "String"
													},
													"sink": {
														"name": "PONBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "POSource",
														"type": "Int16"
													},
													"sink": {
														"name": "POSOURCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AssignedToCollections",
														"type": "Int16"
													},
													"sink": {
														"name": "ASSIGNEDTOCOLLECTIONS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AssignedToCollectionsDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "ASSIGNEDTOCOLLECTIONSDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DiscountAmount",
														"type": "Decimal"
													},
													"sink": {
														"name": "DISCOUNTAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "PriorARDStatus",
														"type": "Int16"
													},
													"sink": {
														"name": "PRIORARDSTATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LineLevel",
														"type": "Int16"
													},
													"sink": {
														"name": "LINELEVEL",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SiteAddressUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SITEADDRESSUID",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "INVOICEDETAIL"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "INVOICEDETAIL_STAGING",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								},
								{
									"name": "InvoiceDetail Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "InvoiceDetail Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into LRS_RAW.TOWER_RAW.INVOICEDETAIL t \nusing \n    TOWER_RAW.INVOICEDETAIL_STAGING s \non t.INVOICEDETAILUID= s.INVOICEDETAILUID  \nwhen matched then update set \nt.InvoiceDetailUID= s.InvoiceDetailUID,\n      t.InvoiceUID= s.InvoiceUID,\n      t.SiteID= s.SiteID,\n      t.ServiceUID= s.ServiceUID,\n      t.SourceUID= s.SourceUID,\n      t.SourceIDNbr= s.SourceIDNbr,\n      t.LineType= s.LineType,\n      t.LineSubType= s.LineSubType,\n      t.SvcCode= s.SvcCode,\n      t.Description= s.Description ,\n      t. Salesperson = s.Salesperson ,\n      t.SvcFrequency= s.SvcFrequency ,\n      t.Quantity= s.Quantity,\n      t.Amount= s.Amount ,\n      t.UnitPrice= s.UnitPrice,\n      t.TaxAmount= s.TaxAmount,\n      t.StartDate= s.StartDate,\n      t.EndDate= s.EndDate ,\n      t.PrintRecord= s.PrintRecord ,\n      t.LineOrderKey1= s.LineOrderKey1 ,\n      t.LineOrderKey2= s.LineOrderKey2 ,\n      t.LineOrderKey3= s.LineOrderKey3 ,\n      t.LineOrderKey4= s.LineOrderKey4 ,\n      t.PONbr= s.PONbr ,\n      t.POSource= s.POSource ,\n      t.AssignedToCollections= s.AssignedToCollections ,\n      t.AssignedToCollectionsDate= s.AssignedToCollectionsDate ,\n      t.DiscountAmount= s.DiscountAmount,\n      t.PriorARDStatus= s.PriorARDStatus ,\n      t.LineLevel= s.LineLevel,\n      t.SiteAddressUID= s.SiteAddressUID \nwhen not matched then insert \n\t(\n\tt.InvoiceDetailUID,\n      t.InvoiceUID,\n      t.SiteID,\n      t.ServiceUID,\n      t.SourceUID,\n      t.SourceIDNbr,\n      t.LineType,\n      t.LineSubType,\n      t.SvcCode,\n      t.Description,\n      t.Salesperson,\n      t.SvcFrequency,\n      t.Quantity,\n      t.Amount,\n      t.UnitPrice,\n      t.TaxAmount,\n      t.StartDate,\n      t.EndDate,\n      t.PrintRecord,\n      t.LineOrderKey1,\n      t.LineOrderKey2,\n      t.LineOrderKey3,\n      t.LineOrderKey4,\n      t.PONbr,\n      t.POSource,\n      t.AssignedToCollections,\n      t.AssignedToCollectionsDate,\n      t.DiscountAmount,\n      t.PriorARDStatus,\n      t.LineLevel,\n      t.SiteAddressUID\n\t)\nvalues \n\t(\n\ts.InvoiceDetailUID,\n      s.InvoiceUID,\n      s.SiteID,\n      s.ServiceUID,\n      s.SourceUID,\n      s.SourceIDNbr,\n      s.LineType,\n      s.LineSubType,\n      s.SvcCode,\n      s.Description,\n      s.Salesperson,\n      s.SvcFrequency,\n      s.Quantity,\n      s.Amount,\n      s.UnitPrice,\n      s.TaxAmount,\n      s.StartDate,\n      s.EndDate,\n      s.PrintRecord,\n      s.LineOrderKey1,\n      s.LineOrderKey2,\n      s.LineOrderKey3,\n      s.LineOrderKey4,\n      s.PONbr,\n      s.POSource,\n      s.AssignedToCollections,\n      s.AssignedToCollectionsDate,\n      s.DiscountAmount,\n      s.PriorARDStatus,\n      s.LineLevel,\n      s.SiteAddressUID)'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Create staging for InvoiceDetail",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table LRS_RAW.TOWER_RAW.INVOICEDETAIL_STAGING',\n    ' as select * from  \n    LRS_RAW.TOWER_RAW.INVOICEDETAIL where 1=0'\n    )\n    }",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for InvoiceDetail",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "InvoiceDetail Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table LRS_RAW.TOWER_RAW.INVOICEDETAIL_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Invoice Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging for Invoice",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from INVOICE \n    where DUEDATE > (SELECT MAX(DUEDATE) FROM INVOICE) -' , \n  pipeline().parameters.Incremental_Range3\n    )\n}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "InvoiceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "INVOICEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceID",
														"type": "String"
													},
													"sink": {
														"name": "INVOICEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "Int16"
													},
													"sink": {
														"name": "STATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "InvoiceContent",
														"type": "Int16"
													},
													"sink": {
														"name": "INVOICECONTENT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "PrintInvoice",
														"type": "Int16"
													},
													"sink": {
														"name": "PRINTINVOICE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "InvoiceOrderKey",
														"type": "String"
													},
													"sink": {
														"name": "INVOICEORDERKEY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillBatchUID",
														"type": "Guid"
													},
													"sink": {
														"name": "BILLBATCHUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillCustID",
														"type": "String"
													},
													"sink": {
														"name": "BILLCUSTID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BillSiteID",
														"type": "String"
													},
													"sink": {
														"name": "BILLSITEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BillName",
														"type": "String"
													},
													"sink": {
														"name": "BILLNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillContact",
														"type": "String"
													},
													"sink": {
														"name": "BILLCONTACT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillAddressUID",
														"type": "Guid"
													},
													"sink": {
														"name": "BILLADDRESSUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillPhone",
														"type": "String"
													},
													"sink": {
														"name": "BILLPHONE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillFax",
														"type": "String"
													},
													"sink": {
														"name": "BILLFAX",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillEmail",
														"type": "String"
													},
													"sink": {
														"name": "BILLEMAIL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SiteAddressUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SITEADDRESSUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "INVOICEDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LastInvoiceDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "LASTINVOICEDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DueDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "DUEDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "FinanceChargeThruDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "FINANCECHARGETHRUDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CustClass",
														"type": "String"
													},
													"sink": {
														"name": "CUSTCLASS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BalForward",
														"type": "Decimal"
													},
													"sink": {
														"name": "BALFORWARD",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AgingBal00",
														"type": "Decimal"
													},
													"sink": {
														"name": "AGINGBAL00",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AgingBal01",
														"type": "Decimal"
													},
													"sink": {
														"name": "AGINGBAL01",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AgingBal02",
														"type": "Decimal"
													},
													"sink": {
														"name": "AGINGBAL02",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AgingBal03",
														"type": "Decimal"
													},
													"sink": {
														"name": "AGINGBAL03",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AgingBal04",
														"type": "Decimal"
													},
													"sink": {
														"name": "AGINGBAL04",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "NewBalance",
														"type": "Decimal"
													},
													"sink": {
														"name": "NEWBALANCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotSvcOneTime",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTSVCONETIME",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotSvcRecurring",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTSVCRECURRING",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotSvcOnCall",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTSVCONCALL",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotSvcTaxes",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTSVCTAXES",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotFinCharges",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTFINCHARGES",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotCharges",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTCHARGES",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotChargeTaxes",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTCHARGETAXES",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotCredits",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTCREDITS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotCreditTaxes",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTCREDITTAXES",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotPayments",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTPAYMENTS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AutomaticPaymentType",
														"type": "Int16"
													},
													"sink": {
														"name": "AUTOMATICPAYMENTTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CompanyID",
														"type": "String"
													},
													"sink": {
														"name": "COMPANYID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceMailingOption",
														"type": "Int16"
													},
													"sink": {
														"name": "INVOICEMAILINGOPTION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceInsert",
														"type": "String"
													},
													"sink": {
														"name": "INVOICEINSERT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ExternalInvoiceNbr",
														"type": "String"
													},
													"sink": {
														"name": "EXTERNALINVOICENBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceDetailFormat",
														"type": "Int16"
													},
													"sink": {
														"name": "INVOICEDETAILFORMAT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LineOfBusiness",
														"type": "String"
													},
													"sink": {
														"name": "LINEOFBUSINESS",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "INVOICE"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "INVOICE_STAGING",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								},
								{
									"name": "Create staging for Invoice",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table LRS_RAW.TOWER_RAW.INVOICE_STAGING',\n    ' as select * from  \n    LRS_RAW.TOWER_RAW.INVOICE where 1=0'\n    )\n    }",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Invoice Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Invoice Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into LRS_RAW.TOWER_RAW.INVOICE t \nusing \n    TOWER_RAW.INVOICE_STAGING s \non t.INVOICEUID= s.INVOICEUID  \nwhen matched then update set \n\tt.invoiceuid = s.invoiceuid ,\n\tt.invoiceid = s.invoiceid ,\n\tt.status = s. status,\n\tt.invoicecontent = s.invoicecontent ,\n\tt.printinvoice = s.printinvoice ,\n\tt.invoiceorderkey = s.invoiceorderkey ,\n\tt.billbatchuid = s.billbatchuid ,\n\tt.billcustid = s.billcustid ,\n\tt.billsiteid = s.billsiteid ,\n\tt.billname = s.billname ,\n\tt.billcontact= s.billcontact ,\n\tt.billaddressuid = s.billaddressuid ,\n\tt.billphone = s.billphone ,\n\tt.billfax = s.billfax ,\n\tt.billemail = s.billemail ,\n\tt.siteaddressuid = s.siteaddressuid ,\n\tt.invoicedate = s.invoicedate ,\n\tt.lastinvoicedate = s.lastinvoicedate ,\n\tt.duedate = s.duedate ,\n\tt.financechargethrudate = s.financechargethrudate ,\n\tt.custclass = s.custclass ,\n\tt.balforward = s.balforward ,\n\tt.agingbal00 = s.agingbal00 ,\n\tt.agingbal01 = s.agingbal01 ,\n\tt.agingbal02 = s.agingbal02 ,\n\tt.agingbal03 = s.agingbal03 ,\n\tt.agingbal04 = s.agingbal04 ,\n\tt.newbalance = s.newbalance ,\n\tt.totsvconetime = s.totsvconetime ,\n\tt.totsvcrecurring = s.totsvcrecurring ,\n\tt.totsvconcall = s.totsvconcall ,\n\tt.totsvctaxes = s.totsvctaxes ,\n\tt.totfincharges = s.totfincharges ,\n\tt.totcharges = s.totcharges ,\n\tt.totchargetaxes = s.totchargetaxes ,\n\tt.totcredits = s.totcredits ,\n\tt.totcredittaxes = s.totcredittaxes ,\n\tt.totpayments = s.totpayments ,\n\tt.automaticpaymenttype = s.automaticpaymenttype ,\n\tt.companyid = s.companyid ,\n\tt.invoicemailingoption = s.invoicemailingoption ,\n\tt.invoiceinsert = s.invoiceinsert ,\n\tt.externalinvoicenbr = s.externalinvoicenbr ,\n\tt.invoicedetailformat = s.invoicedetailformat ,\n\tt.lineofbusiness =s.lineofbusiness \nwhen not matched then insert \n\t( \n\tt.invoiceuid ,\n\tt.invoiceid ,\n\tt.status ,\n\tt.invoicecontent ,\n\tt.printinvoice ,\n\tt.invoiceorderkey ,\n\tt.billbatchuid ,\n\tt.billcustid ,\n\tt.billsiteid ,\n\tt.billname ,\n\tt.billcontact,\n\tt.billaddressuid ,\n\tt.billphone ,\n\tt.billfax ,\n\tt.billemail ,\n\tt.siteaddressuid ,\n\tt.invoicedate ,\n\tt.lastinvoicedate ,\n\tt.duedate ,\n\tt.financechargethrudate ,\n\tt.custclass ,\n\tt.balforward ,\n\tt.agingbal00 ,\n\tt.agingbal01 ,\n\tt.agingbal02 ,\n\tt.agingbal03 ,\n\tt.agingbal04 ,\n\tt.newbalance ,\n\tt.totsvconetime ,\n\tt.totsvcrecurring ,\n\tt.totsvconcall ,\n\tt.totsvctaxes ,\n\tt.totfincharges ,\n\tt.totcharges ,\n\tt.totchargetaxes ,\n\tt.totcredits ,\n\tt.totcredittaxes ,\n\tt.totpayments ,\n\tt.automaticpaymenttype ,\n\tt.companyid ,\n\tt.invoicemailingoption ,\n\tt.invoiceinsert ,\n\tt.externalinvoicenbr ,\n\tt.invoicedetailformat ,\n\tt.lineofbusiness \n\t)\nvalues \n\t(\n\ts.invoiceuid ,\n\ts.invoiceid ,\n\ts.status ,\n\ts.invoicecontent ,\n\ts.printinvoice ,\n\ts.invoiceorderkey ,\n\ts.billbatchuid ,\n\ts.billcustid ,\n\ts.billsiteid ,\n\ts.billname ,\n\ts.billcontact,\n\ts.billaddressuid ,\n\ts.billphone ,\n\ts.billfax ,\n\ts.billemail ,\n\ts.siteaddressuid ,\n\ts.invoicedate ,\n\ts.lastinvoicedate ,\n\ts.duedate ,\n\ts.financechargethrudate ,\n\ts.custclass ,\n\ts.balforward ,\n\ts.agingbal00 ,\n\ts.agingbal01 ,\n\ts.agingbal02 ,\n\ts.agingbal03 ,\n\ts.agingbal04 ,\n\ts.newbalance ,\n\ts.totsvconetime ,\n\ts.totsvcrecurring ,\n\ts.totsvconcall ,\n\ts.totsvctaxes ,\n\ts.totfincharges ,\n\ts.totcharges ,\n\ts.totchargetaxes ,\n\ts.totcredits ,\n\ts.totcredittaxes ,\n\ts.totpayments ,\n\ts.automaticpaymenttype ,\n\ts.companyid ,\n\ts.invoicemailingoption ,\n\ts.invoiceinsert ,\n\ts.externalinvoicenbr ,\n\ts.invoicedetailformat ,\n\ts.lineofbusiness)'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for Invoice",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Invoice Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table LRS_RAW.TOWER_RAW.INVOICE_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Create staging for Service History",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table LRS_RAW.TOWER_RAW.SERVICEHISTORY_STAGING',\n    ' as select * from  \n    LRS_RAW.TOWER_RAW.SERVICEHISTORY where 1=0'\n    )\n    }",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Service History Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging for Service History",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from SERVICEHISTORY \n    where SERVICEDATE > (SELECT MAX(SERVICEDATE) FROM SERVICEHISTORY) -' , \n  pipeline().parameters.Incremental_Range3\n    )\n}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ServiceHistoryUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SERVICEHISTORYUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ServiceHistoryType",
														"type": "Int16"
													},
													"sink": {
														"name": "SERVICEHISTORYTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "WorkflowCode",
														"type": "String"
													},
													"sink": {
														"name": "WORKFLOWCODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ServiceQueue",
														"type": "String"
													},
													"sink": {
														"name": "SERVICEQUEUE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SourceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SOURCEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ServiceOrderID",
														"type": "String"
													},
													"sink": {
														"name": "SERVICEORDERID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ServiceInfoUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SERVICEINFOUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ServiceScheduleUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SERVICESCHEDULEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RescheduledHistoryUID",
														"type": "Guid"
													},
													"sink": {
														"name": "RESCHEDULEDHISTORYUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "Int16"
													},
													"sink": {
														"name": "STATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ReleasedToBilling",
														"type": "Int16"
													},
													"sink": {
														"name": "RELEASEDTOBILLING",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ReasonNote",
														"type": "String"
													},
													"sink": {
														"name": "REASONNOTE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Route",
														"type": "String"
													},
													"sink": {
														"name": "ROUTE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RouteSequence",
														"type": "Decimal"
													},
													"sink": {
														"name": "ROUTESEQUENCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ServiceDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "SERVICEDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "StartTime",
														"type": "DateTime"
													},
													"sink": {
														"name": "STARTTIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "FinishTime",
														"type": "DateTime"
													},
													"sink": {
														"name": "FINISHTIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "ServiceNote",
														"type": "String"
													},
													"sink": {
														"name": "SERVICENOTE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "WorkOrderID",
														"type": "String"
													},
													"sink": {
														"name": "WORKORDERID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Quantity",
														"type": "Decimal"
													},
													"sink": {
														"name": "QUANTITY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RequestedStartTime",
														"type": "Int16"
													},
													"sink": {
														"name": "REQUESTEDSTARTTIME",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RequestedEndTime",
														"type": "Int16"
													},
													"sink": {
														"name": "REQUESTEDENDTIME",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LaborCost",
														"type": "Decimal"
													},
													"sink": {
														"name": "LABORCOST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "NonLaborCost",
														"type": "Decimal"
													},
													"sink": {
														"name": "NONLABORCOST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "OriginalServiceDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "ORIGINALSERVICEDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "GPSVerified",
														"type": "Int16"
													},
													"sink": {
														"name": "GPSVERIFIED",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Latitude",
														"type": "Decimal"
													},
													"sink": {
														"name": "LATITUDE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LiftArmUsed",
														"type": "Int16"
													},
													"sink": {
														"name": "LIFTARMUSED",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Longitude",
														"type": "Decimal"
													},
													"sink": {
														"name": "LONGITUDE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AllocatedRevenue",
														"type": "Decimal"
													},
													"sink": {
														"name": "ALLOCATEDREVENUE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DriverNotified",
														"type": "Int16"
													},
													"sink": {
														"name": "DRIVERNOTIFIED",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DisposalTripUID",
														"type": "Guid"
													},
													"sink": {
														"name": "DISPOSALTRIPUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "OriginalWorkflowCode",
														"type": "String"
													},
													"sink": {
														"name": "ORIGINALWORKFLOWCODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "UpsRoadNetSyncNotificationStatus",
														"type": "Int16"
													},
													"sink": {
														"name": "UPSROADNETSYNCNOTIFICATIONSTATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "GeocodeDifference",
														"type": "Int32"
													},
													"sink": {
														"name": "GEOCODEDIFFERENCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "GeocodeUpdate",
														"type": "Int16"
													},
													"sink": {
														"name": "GEOCODEUPDATE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AllocatedRebate",
														"type": "Decimal"
													},
													"sink": {
														"name": "ALLOCATEDREBATE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "PercentFull",
														"type": "Decimal"
													},
													"sink": {
														"name": "PERCENTFULL",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CompletionSequence",
														"type": "Int32"
													},
													"sink": {
														"name": "COMPLETIONSEQUENCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Odometer",
														"type": "Decimal"
													},
													"sink": {
														"name": "ODOMETER",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RecurringRevenue",
														"type": "Decimal"
													},
													"sink": {
														"name": "RECURRINGREVENUE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Surcharges",
														"type": "Decimal"
													},
													"sink": {
														"name": "SURCHARGES",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "WorkorderRevenue",
														"type": "Decimal"
													},
													"sink": {
														"name": "WORKORDERREVENUE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ThirdPartyServiceCost",
														"type": "Decimal"
													},
													"sink": {
														"name": "THIRDPARTYSERVICECOST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ThirdPartyWorkorderCost",
														"type": "Decimal"
													},
													"sink": {
														"name": "THIRDPARTYWORKORDERCOST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "HolidayScheduleUID",
														"type": "Guid"
													},
													"sink": {
														"name": "HOLIDAYSCHEDULEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SerialNbr",
														"type": "String"
													},
													"sink": {
														"name": "SERIALNBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "syncRowVersion",
														"type": "Byte[]"
													},
													"sink": {
														"name": "SYNCROWVERSION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "WorkStartTime",
														"type": "DateTime"
													},
													"sink": {
														"name": "WORKSTARTTIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "WorkStopTime",
														"type": "DateTime"
													},
													"sink": {
														"name": "WORKSTOPTIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RouteSubsectionUID",
														"type": "Guid"
													},
													"sink": {
														"name": "ROUTESUBSECTIONUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ThirdPartyPONbr",
														"type": "String"
													},
													"sink": {
														"name": "THIRDPARTYPONBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ThirdPartyServiceProvider",
														"type": "String"
													},
													"sink": {
														"name": "THIRDPARTYSERVICEPROVIDER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CompletedByVehicle",
														"type": "String"
													},
													"sink": {
														"name": "COMPLETEDBYVEHICLE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PickupEquivalent",
														"type": "Int32"
													},
													"sink": {
														"name": "PICKUPEQUIVALENT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "PickupEquivalentAdjustment",
														"type": "Int32"
													},
													"sink": {
														"name": "PICKUPEQUIVALENTADJUSTMENT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "PickupEquivalentIsBilled",
														"type": "Boolean"
													},
													"sink": {
														"name": "PICKUPEQUIVALENTISBILLED",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "StatusSource",
														"type": "Int16"
													},
													"sink": {
														"name": "STATUSSOURCE",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "SERVICEHISTORY"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "SERVICEHISTORY_STAGING",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								},
								{
									"name": "Service History Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Service History Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into LRS_RAW.TOWER_RAW. SERVICEHISTORY t \nusing \n    TOWER_RAW.SERVICEHISTORY_STAGING s \non t.SERVICEHISTORYUID= s.SERVICEHISTORYUID \nwhen matched then update set\nt.ServiceHistoryUID= s.ServiceHistoryUID,\n      t.ServiceHistoryType= s.ServiceHistoryType,\n      t.WorkflowCode= s.WorkflowCode,\n      t.ServiceQueue= s.ServiceQueue,\n      t.SourceUID= s.SourceUID,\n      t.ServiceOrderID= s.ServiceOrderID,\n      t.ServiceInfoUID= s.ServiceInfoUID,\n      t.ServiceScheduleUID= s.ServiceScheduleUID,\n      t.RescheduledHistoryUID= s.RescheduledHistoryUID,\n      t.Status= s.Status,\n      t.ReleasedToBilling= s.ReleasedToBilling,\n      t.ReasonNote= s.ReasonNote,\n      t.Route= s.Route,\n      t.RouteSequence= s.RouteSequence,\n      t.ServiceDate= s.ServiceDate,\n      t.StartTime= s.StartTime,\n      t.FinishTime= s.FinishTime,\n      t.ServiceNote= s.ServiceNote,\n      t.WorkOrderID= s.WorkOrderID,\n      t.Quantity= s.Quantity,\n      t.RequestedStartTime= s.RequestedStartTime,\n      t.RequestedEndTime= s.RequestedEndTime,   \n      t.LaborCost= s. LaborCost,\n      t.NonLaborCost= s.NonLaborCost,\n      t.OriginalServiceDate= s.OriginalServiceDate,\n      t.GPSVerified= s.GPSVerified,\n      t.Latitude= s.Latitude,\n      t.LiftArmUsed= s.LiftArmUsed,\n      t.Longitude= s.Longitude,\n      t.AllocatedRevenue= s.AllocatedRevenue,\n      t.DriverNotified= s.DriverNotified,\n      t.DisposalTripUID= s.DisposalTripUID,\n      t.OriginalWorkflowCode= s.OriginalWorkflowCode,\n      t.UpsRoadNetSyncNotificationStatus= s.UpsRoadNetSyncNotificationStatus,\n      t.GeocodeDifference= s.GeocodeDifference,\n      t.GeocodeUpdate= s.GeocodeUpdate,\n      t.AllocatedRebate= s.AllocatedRebate,\n      t.PercentFull= s.PercentFull,\n      t.CompletionSequence= s.CompletionSequence,\n      t.Odometer= s.Odometer,\n      t.RecurringRevenue= s.RecurringRevenue,\n      t.Surcharges= s.Surcharges,\n      t.WorkorderRevenue= s.WorkorderRevenue,\n      t.ThirdPartyServiceCost= s.ThirdPartyServiceCost,\n      t.ThirdPartyWorkorderCost= s.ThirdPartyWorkorderCost,\n      t.HolidayScheduleUID= s.HolidayScheduleUID,\n      t.SerialNbr= s.SerialNbr,\n      t.syncRowVersion= s.syncRowVersion,\n      t.WorkStartTime= s.WorkStartTime,\n      t.WorkStopTime= s.WorkStopTime,\n      t.RouteSubsectionUID= s.RouteSubsectionUID,\n      t.ThirdPartyPONbr= s.ThirdPartyPONbr,\n      t.ThirdPartyServiceProvider= s.ThirdPartyServiceProvider,\n      t.CompletedByVehicle= s.CompletedByVehicle,\n      t.PickupEquivalent= s.PickupEquivalent,\n      t.PickupEquivalentAdjustment= s.PickupEquivalentAdjustment,\n      t.PickupEquivalentIsBilled= s.PickupEquivalentIsBilled,\n      t.StatusSource = s.StatusSource \nwhen not matched then insert \n    ( \nt.ServiceHistoryUID,\n      t.ServiceHistoryType,\n      t.WorkflowCode,\n      t.ServiceQueue,\n      t.SourceUID,\n      t.ServiceOrderID,\n      t.ServiceInfoUID,\n      t.ServiceScheduleUID,\n      t.RescheduledHistoryUID,\n      t.Status,\n      t.ReleasedToBilling,\n      t.ReasonNote,\n      t.Route,\n      t.RouteSequence,\n      t.ServiceDate,\n      t.StartTime,\n      t.FinishTime,\n      t.ServiceNote,\n      t.WorkOrderID,\n      t.Quantity,\n      t.RequestedStartTime,\n      t.RequestedEndTime,\n      t.LaborCost,\n      t.NonLaborCost,\n      t.OriginalServiceDate,\n      t.GPSVerified,\n      t.Latitude,\n      t.LiftArmUsed,\n      t.Longitude,\n      t.AllocatedRevenue,\n      t.DriverNotified,\n      t.DisposalTripUID,\n      t.OriginalWorkflowCode,\n      t.UpsRoadNetSyncNotificationStatus,\n      t.GeocodeDifference,\n      t.GeocodeUpdate,\n      t.AllocatedRebate,\n      t.PercentFull,\n      t.CompletionSequence,\n      t.Odometer,\n      t.RecurringRevenue,\n      t.Surcharges,\n      t.WorkorderRevenue,\n      t.ThirdPartyServiceCost,\n      t.ThirdPartyWorkorderCost,\n      t.HolidayScheduleUID,\n      t.SerialNbr,\n      t.syncRowVersion,\n      t.WorkStartTime,\n      t.WorkStopTime,\n      t.RouteSubsectionUID,\n      t.ThirdPartyPONbr,\n      t.ThirdPartyServiceProvider,\n      t.CompletedByVehicle,\n      t.PickupEquivalent,\n      t.PickupEquivalentAdjustment,\n      t.PickupEquivalentIsBilled,\n      t.StatusSource\n)\nValues\n(\ns.ServiceHistoryUID,\n      s.ServiceHistoryType,\n      s.WorkflowCode,\n      s.ServiceQueue,\n      s.SourceUID,\n      s.ServiceOrderID,\n      s.ServiceInfoUID,\n      s.ServiceScheduleUID,\n      s.RescheduledHistoryUID,\n      s.Status,\n      s.ReleasedToBilling,\n      s.ReasonNote,\n      s.Route,\n      s.RouteSequence,\n      s.ServiceDate,\n      s.StartTime,\n      s.FinishTime,\n      s.ServiceNote,\n      s.WorkOrderID,\n      s.Quantity,\n      s.RequestedStartTime,\n      s.RequestedEndTime,\n      s.LaborCost,\n      s.NonLaborCost,\n      s.OriginalServiceDate,\n      s.GPSVerified,\n      s.Latitude,\n      s.LiftArmUsed,\n      s.Longitude,\n      s.AllocatedRevenue,\n      s.DriverNotified,\n      s.DisposalTripUID,\n      s.OriginalWorkflowCode,\n      s.UpsRoadNetSyncNotificationStatus,\n      s.GeocodeDifference,\n      s.GeocodeUpdate,\n      s.AllocatedRebate,\n      s.PercentFull,\n      s.CompletionSequence,\n      s.Odometer,\n      s.RecurringRevenue,\n      s.Surcharges,\n      s.WorkorderRevenue,\n      s.ThirdPartyServiceCost,\n      s.ThirdPartyWorkorderCost,\n      s.HolidayScheduleUID,\n      s.SerialNbr,\n      s.syncRowVersion,\n      s.WorkStartTime,\n      s.WorkStopTime,\n      s.RouteSubsectionUID,\n      s.ThirdPartyPONbr,\n      s.ThirdPartyServiceProvider,\n      s.CompletedByVehicle,\n      s.PickupEquivalent,\n      s.PickupEquivalentAdjustment,\n      s.PickupEquivalentIsBilled,\n      s.StatusSource)'\n)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for Service History",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Service History Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table LRS_RAW.TOWER_RAW.SERVICEHISTORY_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Incremental_Range": {
						"type": "string",
						"defaultValue": "14"
					},
					"Incremental_Range2": {
						"type": "string",
						"defaultValue": "500"
					},
					"Incremental_Range3": {
						"type": "string",
						"defaultValue": "50"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-29T04:22:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/MSAZ01_TOWER')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_IR_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/LRS_Snowflake_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TOWER_INCREMENTAL_LOAD_FACT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Tower Table Names",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TOWER_WATERMARK_PVT",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DateTime Incremental Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Tower Table Names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Tower Table Names').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Ardetail Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging for ARDetail",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from ARdetail where createddatetime > DATEADD(day,-', \n    pipeline().parameters.Incremental_Range,\n    ', GETDATE())'\n    )\n}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ARDetailUID",
														"type": "Guid"
													},
													"sink": {
														"name": "ARDETAILUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SourceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SOURCEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "Int16"
													},
													"sink": {
														"name": "STATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CustID",
														"type": "String"
													},
													"sink": {
														"name": "CUSTID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SiteID",
														"type": "String"
													},
													"sink": {
														"name": "SITEID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Material",
														"type": "String"
													},
													"sink": {
														"name": "MATERIAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DetailType",
														"type": "Int16"
													},
													"sink": {
														"name": "DETAILTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Tax",
														"type": "String"
													},
													"sink": {
														"name": "TAX",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DebitAcct",
														"type": "String"
													},
													"sink": {
														"name": "DEBITACCT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CreditAcct",
														"type": "String"
													},
													"sink": {
														"name": "CREDITACCT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Period",
														"type": "String"
													},
													"sink": {
														"name": "PERIOD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "INVOICEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TransactionDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "TRANSACTIONDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DueDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "DUEDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "GLExportBatchUID",
														"type": "Guid"
													},
													"sink": {
														"name": "GLEXPORTBATCHUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Quantity",
														"type": "Decimal"
													},
													"sink": {
														"name": "QUANTITY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "UnitRate",
														"type": "Decimal"
													},
													"sink": {
														"name": "UNITRATE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "OriginalAmount",
														"type": "Decimal"
													},
													"sink": {
														"name": "ORIGINALAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Balance",
														"type": "Decimal"
													},
													"sink": {
														"name": "BALANCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BilledAppliedAmount",
														"type": "Decimal"
													},
													"sink": {
														"name": "BILLEDAPPLIEDAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DisplayOnInvoice",
														"type": "Int16"
													},
													"sink": {
														"name": "DISPLAYONINVOICE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DetailSource",
														"type": "Int16"
													},
													"sink": {
														"name": "DETAILSOURCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CompanyID",
														"type": "String"
													},
													"sink": {
														"name": "COMPANYID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CreatedDateTime",
														"type": "DateTime"
													},
													"sink": {
														"name": "CREATEDDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CreditAcctSegType",
														"type": "Byte"
													},
													"sink": {
														"name": "CREDITACCTSEGTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DebitAcctSegType",
														"type": "Byte"
													},
													"sink": {
														"name": "DEBITACCTSEGTYPE",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "ARdetail"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "ARDETAIL_STAGING",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								},
								{
									"name": "ARDetail Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Ardetail Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into LRS_RAW.TOWER_RAW.ARDETAIL t \nusing \n    TOWER_RAW.ARDETAIL_STAGING s \non t.ardetailuid = s.ardetailuid  \nwhen matched then update set \n\tardetailuid = s.ardetailuid ,\n      t.sourceuid = s.sourceuid ,\n      t.status = s.status ,\n      t.custid = s.custid ,\n      t.siteid = s.siteid ,\n      t.material = s.material ,\n      t.detailtype = s.detailtype ,\n      t.tax = s.tax ,\n      t.debitacct = s.debitacct ,\n      t.creditacct = s.creditacct ,\n      t.period = s.period ,\n      t.invoiceuid = s.invoiceuid ,\n      t.transactiondate = s.transactiondate ,\n      t.duedate = s.duedate ,\n      t.glexportbatchuid = s.glexportbatchuid ,\n      t.quantity = s.quantity ,\n      t.unitrate = s.unitrate,\n      t.originalamount = s.originalamount ,\n      t.balance = s.balance ,\n      t.billedappliedamount = s.billedappliedamount ,\n      t.displayoninvoice = s.displayoninvoice ,\n      t.detailsource = s.detailsource ,\n      t.companyid = s. companyid ,\n      t.createddatetime = s.createddatetime ,\n      t.creditacctsegtype = s.creditacctsegtype ,\n      t.debitacctsegtype = s.debitacctsegtype \nwhen not matched then insert \n\t(\n\tardetailuid ,\n      t.sourceuid ,\n      t.status ,\n      t.custid ,\n      t.siteid ,\n      t.material ,\n      t.detailtype ,\n      t.tax ,\n      t.debitacct ,\n      t.creditacct ,\n      t.period ,\n      t.invoiceuid ,\n      t.transactiondate ,\n      t.duedate ,\n      t.glexportbatchuid ,\n      t.quantity ,\n      t.unitrate ,\n      t.originalamount ,\n      t.balance ,\n      t.billedappliedamount ,\n      t.displayoninvoice ,\n      t.detailsource ,\n      t.companyid ,\n      t.createddatetime ,\n      t.creditacctsegtype ,\n      t.debitacctsegtype \n\t)\nvalues \n\t(\n\t ardetailuid ,\n      s.sourceuid ,\n      s.status ,\n      s.custid ,\n      s.siteid ,\n      s.material ,\n      s.detailtype ,\n      s.tax ,\n      s.debitacct ,\n      s.creditacct ,\n      s.period ,\n      s.invoiceuid ,\n      s.transactiondate ,\n      s.duedate ,\n      s.glexportbatchuid ,\n      s.quantity ,\n      s.unitrate ,\n      s.originalamount ,\n      s.balance ,\n      s.billedappliedamount ,\n      s.displayoninvoice ,\n      s.detailsource ,\n      s.companyid ,\n      s.createddatetime ,\n      s.creditacctsegtype ,\n      s.debitacctsegtype)'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Create staging for ARDetail",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table LRS_RAW.TOWER_RAW.ARDETAIL_STAGING',\n    ' as select * from  \n    LRS_RAW.TOWER_RAW.ARDETAIL where 1=0'\n    )\n    }",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for AR Detail",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "ARDetail Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table LRS_RAW.TOWER_RAW.ARDETAIL_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "GLExportBatch Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging for GLExportBatch",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from GLEXPORTBATCH where exportdatetime > DATEADD(day,-', \n    pipeline().parameters.Incremental_Range,\n    ', GETDATE())'\n    )\n}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "GLExportBatchUID",
														"type": "Guid"
													},
													"sink": {
														"name": "GLEXPORTBATCHUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "GLExportBatchID",
														"type": "String"
													},
													"sink": {
														"name": "GLEXPORTBATCHID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ExportDateTime",
														"type": "DateTime"
													},
													"sink": {
														"name": "EXPORTDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "Int16"
													},
													"sink": {
														"name": "STATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CreditTotal",
														"type": "Decimal"
													},
													"sink": {
														"name": "CREDITTOTAL",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DebitTotal",
														"type": "Decimal"
													},
													"sink": {
														"name": "DEBITTOTAL",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Description",
														"type": "String"
													},
													"sink": {
														"name": "DESCRIPTION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "FileCount",
														"type": "Int32"
													},
													"sink": {
														"name": "FILECOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BatchType",
														"type": "Int16"
													},
													"sink": {
														"name": "BATCHTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CompanyID",
														"type": "String"
													},
													"sink": {
														"name": "COMPANYID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Period",
														"type": "String"
													},
													"sink": {
														"name": "PERIOD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CompanyList",
														"type": "String"
													},
													"sink": {
														"name": "COMPANYLIST",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PeriodList",
														"type": "String"
													},
													"sink": {
														"name": "PERIODLIST",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "GLEXPORTBATCH"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "GLEXPORTBATCH_STAGING",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								},
								{
									"name": "GLExportBatch Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "GLExportBatch Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into LRS_RAW.TOWER_RAW.GLEXPORTBATCH t \nusing \n    TOWER_RAW.GLEXPORTBATCH_STAGING s \non t.GLEXPORTBATCHUID = s.GLEXPORTBATCHUID  \nwhen matched then update set \n\tt.glexportbatchuid = s.glexportbatchuid ,\n\tt.glexportbatchid = s.glexportbatchid,\n\tt.exportdatetime= s.exportdatetime ,\n\tt.status = s.status ,\n\tt.credittotal = s.credittotal ,\n\tt.debittotal = s.debittotal ,\n\tt.description = s.description ,\n\tt.filecount = s.filecount,\n\tt.batchtype = s.batchtype,\n\tt.companyid = s.companyid,\n\tt.period = s.period ,\n\tt.companylist = s.companylist ,\n\tt.periodlist = s.periodlist \nwhen not matched then insert \n\t(\n\tt.glexportbatchuid,\n\tt.glexportbatchid ,\n\tt.exportdatetime,\n\tt.status ,\n\tt.credittotal ,\n\tt.debittotal ,\n\tt.description ,\n\tt.filecount ,\n\tt.batchtype ,\n\tt.companyid ,\n\tt.period ,\n\tt.companylist ,\n\tt.periodlist \n\t)\nvalues \n\t(\n\ts.glexportbatchuid ,\n\ts.glexportbatchid ,\n\ts.exportdatetime,\n\ts.status ,\n\ts.credittotal ,\n\ts.debittotal ,\n\ts.description ,\n\ts.filecount ,\n\ts.batchtype ,\n\ts.companyid ,\n\ts.period ,\n\ts.companylist,\n\ts.periodlist)'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Create staging for GLExportBatch",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table LRS_RAW.TOWER_RAW.GLEXPORTBATCH_STAGING',\n    ' as select * from  \n    LRS_RAW.TOWER_RAW.GLEXPORTBATCH where 1=0'\n    )\n    }",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for GLExportBatch",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "GLExportBatch Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table LRS_RAW.TOWER_RAW.GLEXPORTBATCH_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Payment Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging for Payment",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from PAYMENT where PAYMENTDATE > DATEADD(day,-', \n    pipeline().parameters.Incremental_Range,\n    ', GETDATE())'\n    )\n}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "PaymentUID",
														"type": "Guid"
													},
													"sink": {
														"name": "PAYMENTUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PaymentBatchUID",
														"type": "Guid"
													},
													"sink": {
														"name": "PAYMENTBATCHUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BatchSequence",
														"type": "Int32"
													},
													"sink": {
														"name": "BATCHSEQUENCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SourceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SOURCEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PaymentDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "PAYMENTDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "Int16"
													},
													"sink": {
														"name": "STATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ClearOrNSFDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "CLEARORNSFDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CustID",
														"type": "String"
													},
													"sink": {
														"name": "CUSTID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PaymentMethod",
														"type": "Int16"
													},
													"sink": {
														"name": "PAYMENTMETHOD",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CreditCardType",
														"type": "Int16"
													},
													"sink": {
														"name": "CREDITCARDTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "PaymentBankAcct",
														"type": "String"
													},
													"sink": {
														"name": "PAYMENTBANKACCT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PaymentIDNbr",
														"type": "String"
													},
													"sink": {
														"name": "PAYMENTIDNBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Amount",
														"type": "Decimal"
													},
													"sink": {
														"name": "AMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ApplicationMethod",
														"type": "Int16"
													},
													"sink": {
														"name": "APPLICATIONMETHOD",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RemoveCreditHold",
														"type": "Int16"
													},
													"sink": {
														"name": "REMOVECREDITHOLD",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CreditAmount",
														"type": "Decimal"
													},
													"sink": {
														"name": "CREDITAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CreditReason",
														"type": "String"
													},
													"sink": {
														"name": "CREDITREASON",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PaymentNote",
														"type": "String"
													},
													"sink": {
														"name": "PAYMENTNOTE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CustomerBalance",
														"type": "Decimal"
													},
													"sink": {
														"name": "CUSTOMERBALANCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BankAccountXRefUID",
														"type": "Guid"
													},
													"sink": {
														"name": "BANKACCOUNTXREFUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CollectionsNotified",
														"type": "Int16"
													},
													"sink": {
														"name": "COLLECTIONSNOTIFIED",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CustomerPaymentAccountUID",
														"type": "Guid"
													},
													"sink": {
														"name": "CUSTOMERPAYMENTACCOUNTUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ReversedByDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "REVERSEDBYDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "ReversedByUserID",
														"type": "String"
													},
													"sink": {
														"name": "REVERSEDBYUSERID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ReversalReasonNote",
														"type": "String"
													},
													"sink": {
														"name": "REVERSALREASONNOTE",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "Payment"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "PAYMENT_STAGING",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								},
								{
									"name": "Payment Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Payment Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into LRS_RAW.TOWER_RAW.PAYMENT t \nusing \n    TOWER_RAW.PAYMENT_STAGING s \non t.PAYMENTUID = s.PAYMENTUID  \nwhen matched then update set \n\tt.paymentuid =s.paymentuid , \n\tt.paymentbatchuid =s.paymentbatchuid , \n\tt.batchsequence =s.batchsequence , \n\tt.sourceuid =s.sourceuid, \n\tt.paymentdate =s.paymentdate , \n\tt.status =s.status, \n\tt.clearornsfdate =s.clearornsfdate, \n\tt.custid =s. custid , \n\tt.paymentmethod =s.paymentmethod , \n\tt.creditcardtype =s.creditcardtype, \n\tt.paymentbankacct =s.paymentbankacct, \n\tt.paymentidnbr =s.paymentidnbr, \n\tt.amount =s.amount , \n\tt.applicationmethod =s.applicationmethod , \n\tt.removecredithold =s.removecredithold , \n\tt.creditamount =s.creditamount , \n\tt.creditreason =s.creditreason, \n\tt.paymentnote=s.paymentnote ,  \n\tt.customerbalance =s.customerbalance, \n\tt.bankaccountxrefuid =s.bankaccountxrefuid , \n\tt.collectionsnotified =s.collectionsnotified, \n\tt.customerpaymentaccountuid =s.customerpaymentaccountuid, \n\tt.reversedbydate=s.reversedbydate , \n\tt.reversedbyuserid =s.reversedbyuserid , \n\tt.reversalreasonnote = s.reversalreasonnote  \nwhen not matched then insert \n\t(\n\tt.paymentuid ,\n\tt.paymentbatchuid ,\n\tt.batchsequence ,\n\tt.sourceuid ,\n\tt.paymentdate ,\n\tt.status ,\n\tt.clearornsfdate ,\n\tt.custid ,\n\tt.paymentmethod ,\n\tt.creditcardtype ,\n\tt.paymentbankacct ,\n\tt.paymentidnbr ,\n\tt.amount ,\n\tt.applicationmethod ,\n\tt.removecredithold ,\n\tt.creditamount ,\n\tt.creditreason ,\n\tt.paymentnote, \n\tt.customerbalance ,\n\tt.bankaccountxrefuid ,\n\tt.collectionsnotified ,\n\tt.customerpaymentaccountuid,\n\tt.reversedbydate,\n\tt.reversedbyuserid ,\n\tt.reversalreasonnote \n\t)\nvalues \n\t(\n\ts.paymentuid ,\n\ts.paymentbatchuid ,\n\ts.batchsequence ,\n\ts.sourceuid ,\n\ts.paymentdate ,\n\ts.status ,\n\ts.clearornsfdate ,\n\ts.custid ,\n\ts.paymentmethod ,\n\ts.creditcardtype ,\n\ts.paymentbankacct ,\n\ts.paymentidnbr ,\n\ts.amount ,\n\ts.applicationmethod ,\n\ts.removecredithold ,\n\ts.creditamount ,\n\ts.creditreason ,\n\ts.paymentnote, \n\ts.customerbalance ,\n\ts.bankaccountxrefuid ,\n\ts.collectionsnotified ,\n\ts.customerpaymentaccountuid ,\n\ts.reversedbydate,\n\ts.reversedbyuserid ,\n\ts.reversalreasonnote )'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Create staging for Payment",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table LRS_RAW.TOWER_RAW.PAYMENT_STAGING',\n    ' as select * from  \n    LRS_RAW.TOWER_RAW.PAYMENT where 1=0'\n    )\n    }",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for Payment",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Payment Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table LRS_RAW.TOWER_RAW.PAYMENT_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "InvoiceDetail Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging for InvoiceDetail",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from INVOICEDETAIL \n    where STARTDATE > (SELECT MAX(STARTDATE) FROM INVOICEDETAIL) -' , \n  pipeline().parameters.Incremental_Range2\n    )\n}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "InvoiceDetailUID",
														"type": "Guid"
													},
													"sink": {
														"name": "INVOICEDETAILUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "INVOICEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SiteID",
														"type": "String"
													},
													"sink": {
														"name": "SITEID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ServiceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SERVICEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SourceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SOURCEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SourceIDNbr",
														"type": "String"
													},
													"sink": {
														"name": "SOURCEIDNBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LineType",
														"type": "Int16"
													},
													"sink": {
														"name": "LINETYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LineSubType",
														"type": "Int16"
													},
													"sink": {
														"name": "LINESUBTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SvcCode",
														"type": "String"
													},
													"sink": {
														"name": "SVCCODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Description",
														"type": "String"
													},
													"sink": {
														"name": "DESCRIPTION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Salesperson",
														"type": "String"
													},
													"sink": {
														"name": "SALESPERSON",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SvcFrequency",
														"type": "String"
													},
													"sink": {
														"name": "SVCFREQUENCY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Quantity",
														"type": "Decimal"
													},
													"sink": {
														"name": "QUANTITY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Amount",
														"type": "Decimal"
													},
													"sink": {
														"name": "AMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "UnitPrice",
														"type": "Decimal"
													},
													"sink": {
														"name": "UNITPRICE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TaxAmount",
														"type": "Decimal"
													},
													"sink": {
														"name": "TAXAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "StartDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "STARTDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "EndDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "ENDDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "PrintRecord",
														"type": "Int16"
													},
													"sink": {
														"name": "PRINTRECORD",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LineOrderKey1",
														"type": "String"
													},
													"sink": {
														"name": "LINEORDERKEY1",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LineOrderKey2",
														"type": "String"
													},
													"sink": {
														"name": "LINEORDERKEY2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LineOrderKey3",
														"type": "String"
													},
													"sink": {
														"name": "LINEORDERKEY3",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LineOrderKey4",
														"type": "String"
													},
													"sink": {
														"name": "LINEORDERKEY4",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PONbr",
														"type": "String"
													},
													"sink": {
														"name": "PONBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "POSource",
														"type": "Int16"
													},
													"sink": {
														"name": "POSOURCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AssignedToCollections",
														"type": "Int16"
													},
													"sink": {
														"name": "ASSIGNEDTOCOLLECTIONS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AssignedToCollectionsDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "ASSIGNEDTOCOLLECTIONSDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DiscountAmount",
														"type": "Decimal"
													},
													"sink": {
														"name": "DISCOUNTAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "PriorARDStatus",
														"type": "Int16"
													},
													"sink": {
														"name": "PRIORARDSTATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LineLevel",
														"type": "Int16"
													},
													"sink": {
														"name": "LINELEVEL",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SiteAddressUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SITEADDRESSUID",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "INVOICEDETAIL"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "INVOICEDETAIL_STAGING",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								},
								{
									"name": "InvoiceDetail Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "InvoiceDetail Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into LRS_RAW.TOWER_RAW.INVOICEDETAIL t \nusing \n    TOWER_RAW.INVOICEDETAIL_STAGING s \non t.INVOICEDETAILUID= s.INVOICEDETAILUID  \nwhen matched then update set \nt.InvoiceDetailUID= s.InvoiceDetailUID,\n      t.InvoiceUID= s.InvoiceUID,\n      t.SiteID= s.SiteID,\n      t.ServiceUID= s.ServiceUID,\n      t.SourceUID= s.SourceUID,\n      t.SourceIDNbr= s.SourceIDNbr,\n      t.LineType= s.LineType,\n      t.LineSubType= s.LineSubType,\n      t.SvcCode= s.SvcCode,\n      t.Description= s.Description ,\n      t. Salesperson = s.Salesperson ,\n      t.SvcFrequency= s.SvcFrequency ,\n      t.Quantity= s.Quantity,\n      t.Amount= s.Amount ,\n      t.UnitPrice= s.UnitPrice,\n      t.TaxAmount= s.TaxAmount,\n      t.StartDate= s.StartDate,\n      t.EndDate= s.EndDate ,\n      t.PrintRecord= s.PrintRecord ,\n      t.LineOrderKey1= s.LineOrderKey1 ,\n      t.LineOrderKey2= s.LineOrderKey2 ,\n      t.LineOrderKey3= s.LineOrderKey3 ,\n      t.LineOrderKey4= s.LineOrderKey4 ,\n      t.PONbr= s.PONbr ,\n      t.POSource= s.POSource ,\n      t.AssignedToCollections= s.AssignedToCollections ,\n      t.AssignedToCollectionsDate= s.AssignedToCollectionsDate ,\n      t.DiscountAmount= s.DiscountAmount,\n      t.PriorARDStatus= s.PriorARDStatus ,\n      t.LineLevel= s.LineLevel,\n      t.SiteAddressUID= s.SiteAddressUID \nwhen not matched then insert \n\t(\n\tt.InvoiceDetailUID,\n      t.InvoiceUID,\n      t.SiteID,\n      t.ServiceUID,\n      t.SourceUID,\n      t.SourceIDNbr,\n      t.LineType,\n      t.LineSubType,\n      t.SvcCode,\n      t.Description,\n      t.Salesperson,\n      t.SvcFrequency,\n      t.Quantity,\n      t.Amount,\n      t.UnitPrice,\n      t.TaxAmount,\n      t.StartDate,\n      t.EndDate,\n      t.PrintRecord,\n      t.LineOrderKey1,\n      t.LineOrderKey2,\n      t.LineOrderKey3,\n      t.LineOrderKey4,\n      t.PONbr,\n      t.POSource,\n      t.AssignedToCollections,\n      t.AssignedToCollectionsDate,\n      t.DiscountAmount,\n      t.PriorARDStatus,\n      t.LineLevel,\n      t.SiteAddressUID\n\t)\nvalues \n\t(\n\ts.InvoiceDetailUID,\n      s.InvoiceUID,\n      s.SiteID,\n      s.ServiceUID,\n      s.SourceUID,\n      s.SourceIDNbr,\n      s.LineType,\n      s.LineSubType,\n      s.SvcCode,\n      s.Description,\n      s.Salesperson,\n      s.SvcFrequency,\n      s.Quantity,\n      s.Amount,\n      s.UnitPrice,\n      s.TaxAmount,\n      s.StartDate,\n      s.EndDate,\n      s.PrintRecord,\n      s.LineOrderKey1,\n      s.LineOrderKey2,\n      s.LineOrderKey3,\n      s.LineOrderKey4,\n      s.PONbr,\n      s.POSource,\n      s.AssignedToCollections,\n      s.AssignedToCollectionsDate,\n      s.DiscountAmount,\n      s.PriorARDStatus,\n      s.LineLevel,\n      s.SiteAddressUID)'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Create staging for InvoiceDetail",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table LRS_RAW.TOWER_RAW.INVOICEDETAIL_STAGING',\n    ' as select * from  \n    LRS_RAW.TOWER_RAW.INVOICEDETAIL where 1=0'\n    )\n    }",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for InvoiceDetail",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "InvoiceDetail Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table LRS_RAW.TOWER_RAW.INVOICEDETAIL_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Invoice Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging for Invoice",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from INVOICE \n    where DUEDATE > (SELECT MAX(DUEDATE) FROM INVOICE) -' , \n  pipeline().parameters.Incremental_Range3\n    )\n}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "InvoiceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "INVOICEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceID",
														"type": "String"
													},
													"sink": {
														"name": "INVOICEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "Int16"
													},
													"sink": {
														"name": "STATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "InvoiceContent",
														"type": "Int16"
													},
													"sink": {
														"name": "INVOICECONTENT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "PrintInvoice",
														"type": "Int16"
													},
													"sink": {
														"name": "PRINTINVOICE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "InvoiceOrderKey",
														"type": "String"
													},
													"sink": {
														"name": "INVOICEORDERKEY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillBatchUID",
														"type": "Guid"
													},
													"sink": {
														"name": "BILLBATCHUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillCustID",
														"type": "String"
													},
													"sink": {
														"name": "BILLCUSTID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BillSiteID",
														"type": "String"
													},
													"sink": {
														"name": "BILLSITEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BillName",
														"type": "String"
													},
													"sink": {
														"name": "BILLNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillContact",
														"type": "String"
													},
													"sink": {
														"name": "BILLCONTACT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillAddressUID",
														"type": "Guid"
													},
													"sink": {
														"name": "BILLADDRESSUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillPhone",
														"type": "String"
													},
													"sink": {
														"name": "BILLPHONE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillFax",
														"type": "String"
													},
													"sink": {
														"name": "BILLFAX",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillEmail",
														"type": "String"
													},
													"sink": {
														"name": "BILLEMAIL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SiteAddressUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SITEADDRESSUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "INVOICEDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LastInvoiceDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "LASTINVOICEDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DueDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "DUEDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "FinanceChargeThruDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "FINANCECHARGETHRUDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CustClass",
														"type": "String"
													},
													"sink": {
														"name": "CUSTCLASS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BalForward",
														"type": "Decimal"
													},
													"sink": {
														"name": "BALFORWARD",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AgingBal00",
														"type": "Decimal"
													},
													"sink": {
														"name": "AGINGBAL00",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AgingBal01",
														"type": "Decimal"
													},
													"sink": {
														"name": "AGINGBAL01",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AgingBal02",
														"type": "Decimal"
													},
													"sink": {
														"name": "AGINGBAL02",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AgingBal03",
														"type": "Decimal"
													},
													"sink": {
														"name": "AGINGBAL03",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AgingBal04",
														"type": "Decimal"
													},
													"sink": {
														"name": "AGINGBAL04",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "NewBalance",
														"type": "Decimal"
													},
													"sink": {
														"name": "NEWBALANCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotSvcOneTime",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTSVCONETIME",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotSvcRecurring",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTSVCRECURRING",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotSvcOnCall",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTSVCONCALL",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotSvcTaxes",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTSVCTAXES",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotFinCharges",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTFINCHARGES",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotCharges",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTCHARGES",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotChargeTaxes",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTCHARGETAXES",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotCredits",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTCREDITS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotCreditTaxes",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTCREDITTAXES",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotPayments",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTPAYMENTS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AutomaticPaymentType",
														"type": "Int16"
													},
													"sink": {
														"name": "AUTOMATICPAYMENTTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CompanyID",
														"type": "String"
													},
													"sink": {
														"name": "COMPANYID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceMailingOption",
														"type": "Int16"
													},
													"sink": {
														"name": "INVOICEMAILINGOPTION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceInsert",
														"type": "String"
													},
													"sink": {
														"name": "INVOICEINSERT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ExternalInvoiceNbr",
														"type": "String"
													},
													"sink": {
														"name": "EXTERNALINVOICENBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceDetailFormat",
														"type": "Int16"
													},
													"sink": {
														"name": "INVOICEDETAILFORMAT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LineOfBusiness",
														"type": "String"
													},
													"sink": {
														"name": "LINEOFBUSINESS",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "INVOICE"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "INVOICE_STAGING",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								},
								{
									"name": "Create staging for Invoice",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table LRS_RAW.TOWER_RAW.INVOICE_STAGING',\n    ' as select * from  \n    LRS_RAW.TOWER_RAW.INVOICE where 1=0'\n    )\n    }",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Invoice Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Invoice Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into LRS_RAW.TOWER_RAW.INVOICE t \nusing \n    TOWER_RAW.INVOICE_STAGING s \non t.INVOICEUID= s.INVOICEUID  \nwhen matched then update set \n\tt.invoiceuid = s.invoiceuid ,\n\tt.invoiceid = s.invoiceid ,\n\tt.status = s. status,\n\tt.invoicecontent = s.invoicecontent ,\n\tt.printinvoice = s.printinvoice ,\n\tt.invoiceorderkey = s.invoiceorderkey ,\n\tt.billbatchuid = s.billbatchuid ,\n\tt.billcustid = s.billcustid ,\n\tt.billsiteid = s.billsiteid ,\n\tt.billname = s.billname ,\n\tt.billcontact= s.billcontact ,\n\tt.billaddressuid = s.billaddressuid ,\n\tt.billphone = s.billphone ,\n\tt.billfax = s.billfax ,\n\tt.billemail = s.billemail ,\n\tt.siteaddressuid = s.siteaddressuid ,\n\tt.invoicedate = s.invoicedate ,\n\tt.lastinvoicedate = s.lastinvoicedate ,\n\tt.duedate = s.duedate ,\n\tt.financechargethrudate = s.financechargethrudate ,\n\tt.custclass = s.custclass ,\n\tt.balforward = s.balforward ,\n\tt.agingbal00 = s.agingbal00 ,\n\tt.agingbal01 = s.agingbal01 ,\n\tt.agingbal02 = s.agingbal02 ,\n\tt.agingbal03 = s.agingbal03 ,\n\tt.agingbal04 = s.agingbal04 ,\n\tt.newbalance = s.newbalance ,\n\tt.totsvconetime = s.totsvconetime ,\n\tt.totsvcrecurring = s.totsvcrecurring ,\n\tt.totsvconcall = s.totsvconcall ,\n\tt.totsvctaxes = s.totsvctaxes ,\n\tt.totfincharges = s.totfincharges ,\n\tt.totcharges = s.totcharges ,\n\tt.totchargetaxes = s.totchargetaxes ,\n\tt.totcredits = s.totcredits ,\n\tt.totcredittaxes = s.totcredittaxes ,\n\tt.totpayments = s.totpayments ,\n\tt.automaticpaymenttype = s.automaticpaymenttype ,\n\tt.companyid = s.companyid ,\n\tt.invoicemailingoption = s.invoicemailingoption ,\n\tt.invoiceinsert = s.invoiceinsert ,\n\tt.externalinvoicenbr = s.externalinvoicenbr ,\n\tt.invoicedetailformat = s.invoicedetailformat ,\n\tt.lineofbusiness =s.lineofbusiness \nwhen not matched then insert \n\t( \n\tt.invoiceuid ,\n\tt.invoiceid ,\n\tt.status ,\n\tt.invoicecontent ,\n\tt.printinvoice ,\n\tt.invoiceorderkey ,\n\tt.billbatchuid ,\n\tt.billcustid ,\n\tt.billsiteid ,\n\tt.billname ,\n\tt.billcontact,\n\tt.billaddressuid ,\n\tt.billphone ,\n\tt.billfax ,\n\tt.billemail ,\n\tt.siteaddressuid ,\n\tt.invoicedate ,\n\tt.lastinvoicedate ,\n\tt.duedate ,\n\tt.financechargethrudate ,\n\tt.custclass ,\n\tt.balforward ,\n\tt.agingbal00 ,\n\tt.agingbal01 ,\n\tt.agingbal02 ,\n\tt.agingbal03 ,\n\tt.agingbal04 ,\n\tt.newbalance ,\n\tt.totsvconetime ,\n\tt.totsvcrecurring ,\n\tt.totsvconcall ,\n\tt.totsvctaxes ,\n\tt.totfincharges ,\n\tt.totcharges ,\n\tt.totchargetaxes ,\n\tt.totcredits ,\n\tt.totcredittaxes ,\n\tt.totpayments ,\n\tt.automaticpaymenttype ,\n\tt.companyid ,\n\tt.invoicemailingoption ,\n\tt.invoiceinsert ,\n\tt.externalinvoicenbr ,\n\tt.invoicedetailformat ,\n\tt.lineofbusiness \n\t)\nvalues \n\t(\n\ts.invoiceuid ,\n\ts.invoiceid ,\n\ts.status ,\n\ts.invoicecontent ,\n\ts.printinvoice ,\n\ts.invoiceorderkey ,\n\ts.billbatchuid ,\n\ts.billcustid ,\n\ts.billsiteid ,\n\ts.billname ,\n\ts.billcontact,\n\ts.billaddressuid ,\n\ts.billphone ,\n\ts.billfax ,\n\ts.billemail ,\n\ts.siteaddressuid ,\n\ts.invoicedate ,\n\ts.lastinvoicedate ,\n\ts.duedate ,\n\ts.financechargethrudate ,\n\ts.custclass ,\n\ts.balforward ,\n\ts.agingbal00 ,\n\ts.agingbal01 ,\n\ts.agingbal02 ,\n\ts.agingbal03 ,\n\ts.agingbal04 ,\n\ts.newbalance ,\n\ts.totsvconetime ,\n\ts.totsvcrecurring ,\n\ts.totsvconcall ,\n\ts.totsvctaxes ,\n\ts.totfincharges ,\n\ts.totcharges ,\n\ts.totchargetaxes ,\n\ts.totcredits ,\n\ts.totcredittaxes ,\n\ts.totpayments ,\n\ts.automaticpaymenttype ,\n\ts.companyid ,\n\ts.invoicemailingoption ,\n\ts.invoiceinsert ,\n\ts.externalinvoicenbr ,\n\ts.invoicedetailformat ,\n\ts.lineofbusiness)'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for Invoice",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Invoice Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table LRS_RAW.TOWER_RAW.INVOICE_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Create staging for Service History",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table LRS_RAW.TOWER_RAW.SERVICEHISTORY_STAGING',\n    ' as select * from  \n    LRS_RAW.TOWER_RAW.SERVICEHISTORY where 1=0'\n    )\n    }",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Service History Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging for Service History",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from SERVICEHISTORY \n    where SERVICEDATE > (SELECT MAX(SERVICEDATE) FROM SERVICEHISTORY) -' , \n  pipeline().parameters.Incremental_Range3\n    )\n}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ServiceHistoryUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SERVICEHISTORYUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ServiceHistoryType",
														"type": "Int16"
													},
													"sink": {
														"name": "SERVICEHISTORYTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "WorkflowCode",
														"type": "String"
													},
													"sink": {
														"name": "WORKFLOWCODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ServiceQueue",
														"type": "String"
													},
													"sink": {
														"name": "SERVICEQUEUE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SourceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SOURCEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ServiceOrderID",
														"type": "String"
													},
													"sink": {
														"name": "SERVICEORDERID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ServiceInfoUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SERVICEINFOUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ServiceScheduleUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SERVICESCHEDULEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RescheduledHistoryUID",
														"type": "Guid"
													},
													"sink": {
														"name": "RESCHEDULEDHISTORYUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "Int16"
													},
													"sink": {
														"name": "STATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ReleasedToBilling",
														"type": "Int16"
													},
													"sink": {
														"name": "RELEASEDTOBILLING",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ReasonNote",
														"type": "String"
													},
													"sink": {
														"name": "REASONNOTE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Route",
														"type": "String"
													},
													"sink": {
														"name": "ROUTE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RouteSequence",
														"type": "Decimal"
													},
													"sink": {
														"name": "ROUTESEQUENCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ServiceDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "SERVICEDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "StartTime",
														"type": "DateTime"
													},
													"sink": {
														"name": "STARTTIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "FinishTime",
														"type": "DateTime"
													},
													"sink": {
														"name": "FINISHTIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "ServiceNote",
														"type": "String"
													},
													"sink": {
														"name": "SERVICENOTE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "WorkOrderID",
														"type": "String"
													},
													"sink": {
														"name": "WORKORDERID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Quantity",
														"type": "Decimal"
													},
													"sink": {
														"name": "QUANTITY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RequestedStartTime",
														"type": "Int16"
													},
													"sink": {
														"name": "REQUESTEDSTARTTIME",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RequestedEndTime",
														"type": "Int16"
													},
													"sink": {
														"name": "REQUESTEDENDTIME",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LaborCost",
														"type": "Decimal"
													},
													"sink": {
														"name": "LABORCOST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "NonLaborCost",
														"type": "Decimal"
													},
													"sink": {
														"name": "NONLABORCOST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "OriginalServiceDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "ORIGINALSERVICEDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "GPSVerified",
														"type": "Int16"
													},
													"sink": {
														"name": "GPSVERIFIED",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Latitude",
														"type": "Decimal"
													},
													"sink": {
														"name": "LATITUDE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LiftArmUsed",
														"type": "Int16"
													},
													"sink": {
														"name": "LIFTARMUSED",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Longitude",
														"type": "Decimal"
													},
													"sink": {
														"name": "LONGITUDE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AllocatedRevenue",
														"type": "Decimal"
													},
													"sink": {
														"name": "ALLOCATEDREVENUE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DriverNotified",
														"type": "Int16"
													},
													"sink": {
														"name": "DRIVERNOTIFIED",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DisposalTripUID",
														"type": "Guid"
													},
													"sink": {
														"name": "DISPOSALTRIPUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "OriginalWorkflowCode",
														"type": "String"
													},
													"sink": {
														"name": "ORIGINALWORKFLOWCODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "UpsRoadNetSyncNotificationStatus",
														"type": "Int16"
													},
													"sink": {
														"name": "UPSROADNETSYNCNOTIFICATIONSTATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "GeocodeDifference",
														"type": "Int32"
													},
													"sink": {
														"name": "GEOCODEDIFFERENCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "GeocodeUpdate",
														"type": "Int16"
													},
													"sink": {
														"name": "GEOCODEUPDATE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AllocatedRebate",
														"type": "Decimal"
													},
													"sink": {
														"name": "ALLOCATEDREBATE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "PercentFull",
														"type": "Decimal"
													},
													"sink": {
														"name": "PERCENTFULL",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CompletionSequence",
														"type": "Int32"
													},
													"sink": {
														"name": "COMPLETIONSEQUENCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Odometer",
														"type": "Decimal"
													},
													"sink": {
														"name": "ODOMETER",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RecurringRevenue",
														"type": "Decimal"
													},
													"sink": {
														"name": "RECURRINGREVENUE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Surcharges",
														"type": "Decimal"
													},
													"sink": {
														"name": "SURCHARGES",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "WorkorderRevenue",
														"type": "Decimal"
													},
													"sink": {
														"name": "WORKORDERREVENUE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ThirdPartyServiceCost",
														"type": "Decimal"
													},
													"sink": {
														"name": "THIRDPARTYSERVICECOST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ThirdPartyWorkorderCost",
														"type": "Decimal"
													},
													"sink": {
														"name": "THIRDPARTYWORKORDERCOST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "HolidayScheduleUID",
														"type": "Guid"
													},
													"sink": {
														"name": "HOLIDAYSCHEDULEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SerialNbr",
														"type": "String"
													},
													"sink": {
														"name": "SERIALNBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "syncRowVersion",
														"type": "Byte[]"
													},
													"sink": {
														"name": "SYNCROWVERSION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "WorkStartTime",
														"type": "DateTime"
													},
													"sink": {
														"name": "WORKSTARTTIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "WorkStopTime",
														"type": "DateTime"
													},
													"sink": {
														"name": "WORKSTOPTIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RouteSubsectionUID",
														"type": "Guid"
													},
													"sink": {
														"name": "ROUTESUBSECTIONUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ThirdPartyPONbr",
														"type": "String"
													},
													"sink": {
														"name": "THIRDPARTYPONBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ThirdPartyServiceProvider",
														"type": "String"
													},
													"sink": {
														"name": "THIRDPARTYSERVICEPROVIDER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CompletedByVehicle",
														"type": "String"
													},
													"sink": {
														"name": "COMPLETEDBYVEHICLE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PickupEquivalent",
														"type": "Int32"
													},
													"sink": {
														"name": "PICKUPEQUIVALENT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "PickupEquivalentAdjustment",
														"type": "Int32"
													},
													"sink": {
														"name": "PICKUPEQUIVALENTADJUSTMENT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "PickupEquivalentIsBilled",
														"type": "Boolean"
													},
													"sink": {
														"name": "PICKUPEQUIVALENTISBILLED",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "StatusSource",
														"type": "Int16"
													},
													"sink": {
														"name": "STATUSSOURCE",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "SERVICEHISTORY"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "SERVICEHISTORY_STAGING",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								},
								{
									"name": "Service History Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Service History Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into LRS_RAW.TOWER_RAW. SERVICEHISTORY t \nusing \n    TOWER_RAW.SERVICEHISTORY_STAGING s \non t.SERVICEHISTORYUID= s.SERVICEHISTORYUID \nwhen matched then update set\nt.ServiceHistoryUID= s.ServiceHistoryUID,\n      t.ServiceHistoryType= s.ServiceHistoryType,\n      t.WorkflowCode= s.WorkflowCode,\n      t.ServiceQueue= s.ServiceQueue,\n      t.SourceUID= s.SourceUID,\n      t.ServiceOrderID= s.ServiceOrderID,\n      t.ServiceInfoUID= s.ServiceInfoUID,\n      t.ServiceScheduleUID= s.ServiceScheduleUID,\n      t.RescheduledHistoryUID= s.RescheduledHistoryUID,\n      t.Status= s.Status,\n      t.ReleasedToBilling= s.ReleasedToBilling,\n      t.ReasonNote= s.ReasonNote,\n      t.Route= s.Route,\n      t.RouteSequence= s.RouteSequence,\n      t.ServiceDate= s.ServiceDate,\n      t.StartTime= s.StartTime,\n      t.FinishTime= s.FinishTime,\n      t.ServiceNote= s.ServiceNote,\n      t.WorkOrderID= s.WorkOrderID,\n      t.Quantity= s.Quantity,\n      t.RequestedStartTime= s.RequestedStartTime,\n      t.RequestedEndTime= s.RequestedEndTime,   \n      t.LaborCost= s. LaborCost,\n      t.NonLaborCost= s.NonLaborCost,\n      t.OriginalServiceDate= s.OriginalServiceDate,\n      t.GPSVerified= s.GPSVerified,\n      t.Latitude= s.Latitude,\n      t.LiftArmUsed= s.LiftArmUsed,\n      t.Longitude= s.Longitude,\n      t.AllocatedRevenue= s.AllocatedRevenue,\n      t.DriverNotified= s.DriverNotified,\n      t.DisposalTripUID= s.DisposalTripUID,\n      t.OriginalWorkflowCode= s.OriginalWorkflowCode,\n      t.UpsRoadNetSyncNotificationStatus= s.UpsRoadNetSyncNotificationStatus,\n      t.GeocodeDifference= s.GeocodeDifference,\n      t.GeocodeUpdate= s.GeocodeUpdate,\n      t.AllocatedRebate= s.AllocatedRebate,\n      t.PercentFull= s.PercentFull,\n      t.CompletionSequence= s.CompletionSequence,\n      t.Odometer= s.Odometer,\n      t.RecurringRevenue= s.RecurringRevenue,\n      t.Surcharges= s.Surcharges,\n      t.WorkorderRevenue= s.WorkorderRevenue,\n      t.ThirdPartyServiceCost= s.ThirdPartyServiceCost,\n      t.ThirdPartyWorkorderCost= s.ThirdPartyWorkorderCost,\n      t.HolidayScheduleUID= s.HolidayScheduleUID,\n      t.SerialNbr= s.SerialNbr,\n      t.syncRowVersion= s.syncRowVersion,\n      t.WorkStartTime= s.WorkStartTime,\n      t.WorkStopTime= s.WorkStopTime,\n      t.RouteSubsectionUID= s.RouteSubsectionUID,\n      t.ThirdPartyPONbr= s.ThirdPartyPONbr,\n      t.ThirdPartyServiceProvider= s.ThirdPartyServiceProvider,\n      t.CompletedByVehicle= s.CompletedByVehicle,\n      t.PickupEquivalent= s.PickupEquivalent,\n      t.PickupEquivalentAdjustment= s.PickupEquivalentAdjustment,\n      t.PickupEquivalentIsBilled= s.PickupEquivalentIsBilled,\n      t.StatusSource = s.StatusSource \nwhen not matched then insert \n    ( \nt.ServiceHistoryUID,\n      t.ServiceHistoryType,\n      t.WorkflowCode,\n      t.ServiceQueue,\n      t.SourceUID,\n      t.ServiceOrderID,\n      t.ServiceInfoUID,\n      t.ServiceScheduleUID,\n      t.RescheduledHistoryUID,\n      t.Status,\n      t.ReleasedToBilling,\n      t.ReasonNote,\n      t.Route,\n      t.RouteSequence,\n      t.ServiceDate,\n      t.StartTime,\n      t.FinishTime,\n      t.ServiceNote,\n      t.WorkOrderID,\n      t.Quantity,\n      t.RequestedStartTime,\n      t.RequestedEndTime,\n      t.LaborCost,\n      t.NonLaborCost,\n      t.OriginalServiceDate,\n      t.GPSVerified,\n      t.Latitude,\n      t.LiftArmUsed,\n      t.Longitude,\n      t.AllocatedRevenue,\n      t.DriverNotified,\n      t.DisposalTripUID,\n      t.OriginalWorkflowCode,\n      t.UpsRoadNetSyncNotificationStatus,\n      t.GeocodeDifference,\n      t.GeocodeUpdate,\n      t.AllocatedRebate,\n      t.PercentFull,\n      t.CompletionSequence,\n      t.Odometer,\n      t.RecurringRevenue,\n      t.Surcharges,\n      t.WorkorderRevenue,\n      t.ThirdPartyServiceCost,\n      t.ThirdPartyWorkorderCost,\n      t.HolidayScheduleUID,\n      t.SerialNbr,\n      t.syncRowVersion,\n      t.WorkStartTime,\n      t.WorkStopTime,\n      t.RouteSubsectionUID,\n      t.ThirdPartyPONbr,\n      t.ThirdPartyServiceProvider,\n      t.CompletedByVehicle,\n      t.PickupEquivalent,\n      t.PickupEquivalentAdjustment,\n      t.PickupEquivalentIsBilled,\n      t.StatusSource\n)\nValues\n(\ns.ServiceHistoryUID,\n      s.ServiceHistoryType,\n      s.WorkflowCode,\n      s.ServiceQueue,\n      s.SourceUID,\n      s.ServiceOrderID,\n      s.ServiceInfoUID,\n      s.ServiceScheduleUID,\n      s.RescheduledHistoryUID,\n      s.Status,\n      s.ReleasedToBilling,\n      s.ReasonNote,\n      s.Route,\n      s.RouteSequence,\n      s.ServiceDate,\n      s.StartTime,\n      s.FinishTime,\n      s.ServiceNote,\n      s.WorkOrderID,\n      s.Quantity,\n      s.RequestedStartTime,\n      s.RequestedEndTime,\n      s.LaborCost,\n      s.NonLaborCost,\n      s.OriginalServiceDate,\n      s.GPSVerified,\n      s.Latitude,\n      s.LiftArmUsed,\n      s.Longitude,\n      s.AllocatedRevenue,\n      s.DriverNotified,\n      s.DisposalTripUID,\n      s.OriginalWorkflowCode,\n      s.UpsRoadNetSyncNotificationStatus,\n      s.GeocodeDifference,\n      s.GeocodeUpdate,\n      s.AllocatedRebate,\n      s.PercentFull,\n      s.CompletionSequence,\n      s.Odometer,\n      s.RecurringRevenue,\n      s.Surcharges,\n      s.WorkorderRevenue,\n      s.ThirdPartyServiceCost,\n      s.ThirdPartyWorkorderCost,\n      s.HolidayScheduleUID,\n      s.SerialNbr,\n      s.syncRowVersion,\n      s.WorkStartTime,\n      s.WorkStopTime,\n      s.RouteSubsectionUID,\n      s.ThirdPartyPONbr,\n      s.ThirdPartyServiceProvider,\n      s.CompletedByVehicle,\n      s.PickupEquivalent,\n      s.PickupEquivalentAdjustment,\n      s.PickupEquivalentIsBilled,\n      s.StatusSource)'\n)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for Service History",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Service History Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table LRS_RAW.TOWER_RAW.SERVICEHISTORY_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "ID Incremental Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Tower Table Names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Tower Table Names').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "WorkOrder ID Delta Load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from Workorder \nwhere workorderid >  @{item().WORKORDER}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "WorkOrderID",
														"type": "String"
													},
													"sink": {
														"name": "WORKORDERID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "WorkOrderUID",
														"type": "Guid"
													},
													"sink": {
														"name": "WORKORDERUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "WorkPONbr",
														"type": "String"
													},
													"sink": {
														"name": "WORKPONBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DestCertificate",
														"type": "String"
													},
													"sink": {
														"name": "DESTCERTIFICATE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CODRequired",
														"type": "Int16"
													},
													"sink": {
														"name": "CODREQUIRED",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CustomerDataFileUID",
														"type": "Guid"
													},
													"sink": {
														"name": "CUSTOMERDATAFILEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceMessage",
														"type": "String"
													},
													"sink": {
														"name": "INVOICEMESSAGE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Printed",
														"type": "Int16"
													},
													"sink": {
														"name": "PRINTED",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "PrintDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "PRINTDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "PrintUser",
														"type": "String"
													},
													"sink": {
														"name": "PRINTUSER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Destination",
														"type": "String"
													},
													"sink": {
														"name": "DESTINATION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ServiceQuantity",
														"type": "Decimal"
													},
													"sink": {
														"name": "SERVICEQUANTITY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ServiceUOM",
														"type": "String"
													},
													"sink": {
														"name": "SERVICEUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ReferenceNumber",
														"type": "String"
													},
													"sink": {
														"name": "REFERENCENUMBER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TagNumber",
														"type": "String"
													},
													"sink": {
														"name": "TAGNUMBER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "FinalManifestDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "FINALMANIFESTDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "IsNoChargePickup",
														"type": "Boolean"
													},
													"sink": {
														"name": "ISNOCHARGEPICKUP",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "WORKORDER"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "WORKORDER",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Incremental_Range": {
						"type": "string",
						"defaultValue": "14"
					},
					"Incremental_Range2": {
						"type": "string",
						"defaultValue": "500"
					},
					"Incremental_Range3": {
						"type": "string",
						"defaultValue": "50"
					}
				},
				"folder": {
					"name": "Production/TOWER"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T18:09:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/MSAZ01_TOWER')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_IR_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/LRS_Snowflake_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TOWER_INCREMENTAL_LOAD_FACT_DC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Tower Table Names",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TOWER_WATERMARK_PVT",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DateTime Incremental Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Tower Table Names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Tower Table Names').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Ardetail Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging for ARDetail",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from ARdetail where createddatetime > DATEADD(day,-', \n    pipeline().parameters.Incremental_Range,\n    ', GETDATE())'\n    )\n}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ARDETAILUID",
														"type": "String"
													},
													"sink": {
														"name": "ARDETAILUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SOURCEUID",
														"type": "String"
													},
													"sink": {
														"name": "SOURCEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "STATUS",
														"type": "Int64"
													},
													"sink": {
														"name": "STATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CUSTID",
														"type": "String"
													},
													"sink": {
														"name": "CUSTID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SITEID",
														"type": "String"
													},
													"sink": {
														"name": "SITEID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "MATERIAL",
														"type": "String"
													},
													"sink": {
														"name": "MATERIAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DETAILTYPE",
														"type": "Int64"
													},
													"sink": {
														"name": "DETAILTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TAX",
														"type": "String"
													},
													"sink": {
														"name": "TAX",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DEBITACCT",
														"type": "String"
													},
													"sink": {
														"name": "DEBITACCT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CREDITACCT",
														"type": "String"
													},
													"sink": {
														"name": "CREDITACCT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PERIOD",
														"type": "String"
													},
													"sink": {
														"name": "PERIOD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "INVOICEUID",
														"type": "String"
													},
													"sink": {
														"name": "INVOICEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TRANSACTIONDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "TRANSACTIONDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DUEDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DUEDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "GLEXPORTBATCHUID",
														"type": "String"
													},
													"sink": {
														"name": "GLEXPORTBATCHUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "QUANTITY",
														"type": "Int64"
													},
													"sink": {
														"name": "QUANTITY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "UNITRATE",
														"type": "Int64"
													},
													"sink": {
														"name": "UNITRATE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ORIGINALAMOUNT",
														"type": "Int64"
													},
													"sink": {
														"name": "ORIGINALAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BALANCE",
														"type": "Int64"
													},
													"sink": {
														"name": "BALANCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BILLEDAPPLIEDAMOUNT",
														"type": "Int64"
													},
													"sink": {
														"name": "BILLEDAPPLIEDAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DISPLAYONINVOICE",
														"type": "Int64"
													},
													"sink": {
														"name": "DISPLAYONINVOICE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DETAILSOURCE",
														"type": "Int64"
													},
													"sink": {
														"name": "DETAILSOURCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "COMPANYID",
														"type": "String"
													},
													"sink": {
														"name": "COMPANYID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CREATEDDATETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "CREATEDDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CREDITACCTSEGTYPE",
														"type": "Int64"
													},
													"sink": {
														"name": "CREDITACCTSEGTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DEBITACCTSEGTYPE",
														"type": "Int64"
													},
													"sink": {
														"name": "DEBITACCTSEGTYPE",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "ARdetail"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "ARDETAIL_STAGING",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								},
								{
									"name": "ARDetail Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Ardetail Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into LRS_RAW.TOWER_RAW.ARDETAIL t \nusing \n    TOWER_RAW.ARDETAIL_STAGING s \non t.ardetailuid = s.ardetailuid  \nwhen matched then update set \n\tardetailuid = s.ardetailuid ,\n      t.sourceuid = s.sourceuid ,\n      t.status = s.status ,\n      t.custid = s.custid ,\n      t.siteid = s.siteid ,\n      t.material = s.material ,\n      t.detailtype = s.detailtype ,\n      t.tax = s.tax ,\n      t.debitacct = s.debitacct ,\n      t.creditacct = s.creditacct ,\n      t.period = s.period ,\n      t.invoiceuid = s.invoiceuid ,\n      t.transactiondate = s.transactiondate ,\n      t.duedate = s.duedate ,\n      t.glexportbatchuid = s.glexportbatchuid ,\n      t.quantity = s.quantity ,\n      t.unitrate = s.unitrate,\n      t.originalamount = s.originalamount ,\n      t.balance = s.balance ,\n      t.billedappliedamount = s.billedappliedamount ,\n      t.displayoninvoice = s.displayoninvoice ,\n      t.detailsource = s.detailsource ,\n      t.companyid = s. companyid ,\n      t.createddatetime = s.createddatetime ,\n      t.creditacctsegtype = s.creditacctsegtype ,\n      t.debitacctsegtype = s.debitacctsegtype \nwhen not matched then insert \n\t(\n\tardetailuid ,\n      t.sourceuid ,\n      t.status ,\n      t.custid ,\n      t.siteid ,\n      t.material ,\n      t.detailtype ,\n      t.tax ,\n      t.debitacct ,\n      t.creditacct ,\n      t.period ,\n      t.invoiceuid ,\n      t.transactiondate ,\n      t.duedate ,\n      t.glexportbatchuid ,\n      t.quantity ,\n      t.unitrate ,\n      t.originalamount ,\n      t.balance ,\n      t.billedappliedamount ,\n      t.displayoninvoice ,\n      t.detailsource ,\n      t.companyid ,\n      t.createddatetime ,\n      t.creditacctsegtype ,\n      t.debitacctsegtype \n\t)\nvalues \n\t(\n\t ardetailuid ,\n      s.sourceuid ,\n      s.status ,\n      s.custid ,\n      s.siteid ,\n      s.material ,\n      s.detailtype ,\n      s.tax ,\n      s.debitacct ,\n      s.creditacct ,\n      s.period ,\n      s.invoiceuid ,\n      s.transactiondate ,\n      s.duedate ,\n      s.glexportbatchuid ,\n      s.quantity ,\n      s.unitrate ,\n      s.originalamount ,\n      s.balance ,\n      s.billedappliedamount ,\n      s.displayoninvoice ,\n      s.detailsource ,\n      s.companyid ,\n      s.createddatetime ,\n      s.creditacctsegtype ,\n      s.debitacctsegtype)'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Create staging for ARDetail",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table LRS_RAW.TOWER_RAW.ARDETAIL_STAGING',\n    ' as select * from  \n    LRS_RAW.TOWER_RAW.ARDETAIL where 1=0'\n    )\n    }",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for AR Detail",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "ARDetail Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table LRS_RAW.TOWER_RAW.ARDETAIL_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "GLExportBatch Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging for GLExportBatch",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from GLEXPORTBATCH where exportdatetime > DATEADD(day,-', \n    pipeline().parameters.Incremental_Range,\n    ', GETDATE())'\n    )\n}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "GLExportBatchUID",
														"type": "Guid"
													},
													"sink": {
														"name": "GLEXPORTBATCHUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "GLExportBatchID",
														"type": "String"
													},
													"sink": {
														"name": "GLEXPORTBATCHID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ExportDateTime",
														"type": "DateTime"
													},
													"sink": {
														"name": "EXPORTDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "Int16"
													},
													"sink": {
														"name": "STATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CreditTotal",
														"type": "Decimal"
													},
													"sink": {
														"name": "CREDITTOTAL",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DebitTotal",
														"type": "Decimal"
													},
													"sink": {
														"name": "DEBITTOTAL",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Description",
														"type": "String"
													},
													"sink": {
														"name": "DESCRIPTION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "FileCount",
														"type": "Int32"
													},
													"sink": {
														"name": "FILECOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BatchType",
														"type": "Int16"
													},
													"sink": {
														"name": "BATCHTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CompanyID",
														"type": "String"
													},
													"sink": {
														"name": "COMPANYID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Period",
														"type": "String"
													},
													"sink": {
														"name": "PERIOD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CompanyList",
														"type": "String"
													},
													"sink": {
														"name": "COMPANYLIST",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PeriodList",
														"type": "String"
													},
													"sink": {
														"name": "PERIODLIST",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "GLEXPORTBATCH"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "GLEXPORTBATCH_STAGING",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								},
								{
									"name": "GLExportBatch Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "GLExportBatch Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into LRS_RAW.TOWER_RAW.GLEXPORTBATCH t \nusing \n    TOWER_RAW.GLEXPORTBATCH_STAGING s \non t.GLEXPORTBATCHUID = s.GLEXPORTBATCHUID  \nwhen matched then update set \n\tt.glexportbatchuid = s.glexportbatchuid ,\n\tt.glexportbatchid = s.glexportbatchid,\n\tt.exportdatetime= s.exportdatetime ,\n\tt.status = s.status ,\n\tt.credittotal = s.credittotal ,\n\tt.debittotal = s.debittotal ,\n\tt.description = s.description ,\n\tt.filecount = s.filecount,\n\tt.batchtype = s.batchtype,\n\tt.companyid = s.companyid,\n\tt.period = s.period ,\n\tt.companylist = s.companylist ,\n\tt.periodlist = s.periodlist \nwhen not matched then insert \n\t(\n\tt.glexportbatchuid,\n\tt.glexportbatchid ,\n\tt.exportdatetime,\n\tt.status ,\n\tt.credittotal ,\n\tt.debittotal ,\n\tt.description ,\n\tt.filecount ,\n\tt.batchtype ,\n\tt.companyid ,\n\tt.period ,\n\tt.companylist ,\n\tt.periodlist \n\t)\nvalues \n\t(\n\ts.glexportbatchuid ,\n\ts.glexportbatchid ,\n\ts.exportdatetime,\n\ts.status ,\n\ts.credittotal ,\n\ts.debittotal ,\n\ts.description ,\n\ts.filecount ,\n\ts.batchtype ,\n\ts.companyid ,\n\ts.period ,\n\ts.companylist,\n\ts.periodlist)'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Create staging for GLExportBatch",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table LRS_RAW.TOWER_RAW.GLEXPORTBATCH_STAGING',\n    ' as select * from  \n    LRS_RAW.TOWER_RAW.GLEXPORTBATCH where 1=0'\n    )\n    }",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for GLExportBatch",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "GLExportBatch Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table LRS_RAW.TOWER_RAW.GLEXPORTBATCH_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Payment Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging for Payment",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from PAYMENT where PAYMENTDATE > DATEADD(day,-', \n    pipeline().parameters.Incremental_Range,\n    ', GETDATE())'\n    )\n}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "PaymentUID",
														"type": "Guid"
													},
													"sink": {
														"name": "PAYMENTUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PaymentBatchUID",
														"type": "Guid"
													},
													"sink": {
														"name": "PAYMENTBATCHUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BatchSequence",
														"type": "Int32"
													},
													"sink": {
														"name": "BATCHSEQUENCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SourceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SOURCEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PaymentDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "PAYMENTDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "Int16"
													},
													"sink": {
														"name": "STATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ClearOrNSFDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "CLEARORNSFDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CustID",
														"type": "String"
													},
													"sink": {
														"name": "CUSTID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PaymentMethod",
														"type": "Int16"
													},
													"sink": {
														"name": "PAYMENTMETHOD",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CreditCardType",
														"type": "Int16"
													},
													"sink": {
														"name": "CREDITCARDTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "PaymentBankAcct",
														"type": "String"
													},
													"sink": {
														"name": "PAYMENTBANKACCT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PaymentIDNbr",
														"type": "String"
													},
													"sink": {
														"name": "PAYMENTIDNBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Amount",
														"type": "Decimal"
													},
													"sink": {
														"name": "AMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ApplicationMethod",
														"type": "Int16"
													},
													"sink": {
														"name": "APPLICATIONMETHOD",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RemoveCreditHold",
														"type": "Int16"
													},
													"sink": {
														"name": "REMOVECREDITHOLD",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CreditAmount",
														"type": "Decimal"
													},
													"sink": {
														"name": "CREDITAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CreditReason",
														"type": "String"
													},
													"sink": {
														"name": "CREDITREASON",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PaymentNote",
														"type": "String"
													},
													"sink": {
														"name": "PAYMENTNOTE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CustomerBalance",
														"type": "Decimal"
													},
													"sink": {
														"name": "CUSTOMERBALANCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BankAccountXRefUID",
														"type": "Guid"
													},
													"sink": {
														"name": "BANKACCOUNTXREFUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CollectionsNotified",
														"type": "Int16"
													},
													"sink": {
														"name": "COLLECTIONSNOTIFIED",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CustomerPaymentAccountUID",
														"type": "Guid"
													},
													"sink": {
														"name": "CUSTOMERPAYMENTACCOUNTUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ReversedByDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "REVERSEDBYDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "ReversedByUserID",
														"type": "String"
													},
													"sink": {
														"name": "REVERSEDBYUSERID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ReversalReasonNote",
														"type": "String"
													},
													"sink": {
														"name": "REVERSALREASONNOTE",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "Payment"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "PAYMENT_STAGING",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								},
								{
									"name": "Payment Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Payment Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into LRS_RAW.TOWER_RAW.PAYMENT t \nusing \n    TOWER_RAW.PAYMENT_STAGING s \non t.PAYMENTUID = s.PAYMENTUID  \nwhen matched then update set \n\tt.paymentuid =s.paymentuid , \n\tt.paymentbatchuid =s.paymentbatchuid , \n\tt.batchsequence =s.batchsequence , \n\tt.sourceuid =s.sourceuid, \n\tt.paymentdate =s.paymentdate , \n\tt.status =s.status, \n\tt.clearornsfdate =s.clearornsfdate, \n\tt.custid =s. custid , \n\tt.paymentmethod =s.paymentmethod , \n\tt.creditcardtype =s.creditcardtype, \n\tt.paymentbankacct =s.paymentbankacct, \n\tt.paymentidnbr =s.paymentidnbr, \n\tt.amount =s.amount , \n\tt.applicationmethod =s.applicationmethod , \n\tt.removecredithold =s.removecredithold , \n\tt.creditamount =s.creditamount , \n\tt.creditreason =s.creditreason, \n\tt.paymentnote=s.paymentnote ,  \n\tt.customerbalance =s.customerbalance, \n\tt.bankaccountxrefuid =s.bankaccountxrefuid , \n\tt.collectionsnotified =s.collectionsnotified, \n\tt.customerpaymentaccountuid =s.customerpaymentaccountuid, \n\tt.reversedbydate=s.reversedbydate , \n\tt.reversedbyuserid =s.reversedbyuserid , \n\tt.reversalreasonnote = s.reversalreasonnote  \nwhen not matched then insert \n\t(\n\tt.paymentuid ,\n\tt.paymentbatchuid ,\n\tt.batchsequence ,\n\tt.sourceuid ,\n\tt.paymentdate ,\n\tt.status ,\n\tt.clearornsfdate ,\n\tt.custid ,\n\tt.paymentmethod ,\n\tt.creditcardtype ,\n\tt.paymentbankacct ,\n\tt.paymentidnbr ,\n\tt.amount ,\n\tt.applicationmethod ,\n\tt.removecredithold ,\n\tt.creditamount ,\n\tt.creditreason ,\n\tt.paymentnote, \n\tt.customerbalance ,\n\tt.bankaccountxrefuid ,\n\tt.collectionsnotified ,\n\tt.customerpaymentaccountuid,\n\tt.reversedbydate,\n\tt.reversedbyuserid ,\n\tt.reversalreasonnote \n\t)\nvalues \n\t(\n\ts.paymentuid ,\n\ts.paymentbatchuid ,\n\ts.batchsequence ,\n\ts.sourceuid ,\n\ts.paymentdate ,\n\ts.status ,\n\ts.clearornsfdate ,\n\ts.custid ,\n\ts.paymentmethod ,\n\ts.creditcardtype ,\n\ts.paymentbankacct ,\n\ts.paymentidnbr ,\n\ts.amount ,\n\ts.applicationmethod ,\n\ts.removecredithold ,\n\ts.creditamount ,\n\ts.creditreason ,\n\ts.paymentnote, \n\ts.customerbalance ,\n\ts.bankaccountxrefuid ,\n\ts.collectionsnotified ,\n\ts.customerpaymentaccountuid ,\n\ts.reversedbydate,\n\ts.reversedbyuserid ,\n\ts.reversalreasonnote )'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Create staging for Payment",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table LRS_RAW.TOWER_RAW.PAYMENT_STAGING',\n    ' as select * from  \n    LRS_RAW.TOWER_RAW.PAYMENT where 1=0'\n    )\n    }",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for Payment",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Payment Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table LRS_RAW.TOWER_RAW.PAYMENT_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "InvoiceDetail Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging for InvoiceDetail",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from INVOICEDETAIL \n    where STARTDATE > (SELECT MAX(STARTDATE) FROM INVOICEDETAIL) -' , \n  pipeline().parameters.Incremental_Range2\n    )\n}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "InvoiceDetailUID",
														"type": "Guid"
													},
													"sink": {
														"name": "INVOICEDETAILUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "INVOICEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SiteID",
														"type": "String"
													},
													"sink": {
														"name": "SITEID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ServiceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SERVICEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SourceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SOURCEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SourceIDNbr",
														"type": "String"
													},
													"sink": {
														"name": "SOURCEIDNBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LineType",
														"type": "Int16"
													},
													"sink": {
														"name": "LINETYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LineSubType",
														"type": "Int16"
													},
													"sink": {
														"name": "LINESUBTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SvcCode",
														"type": "String"
													},
													"sink": {
														"name": "SVCCODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Description",
														"type": "String"
													},
													"sink": {
														"name": "DESCRIPTION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Salesperson",
														"type": "String"
													},
													"sink": {
														"name": "SALESPERSON",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SvcFrequency",
														"type": "String"
													},
													"sink": {
														"name": "SVCFREQUENCY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Quantity",
														"type": "Decimal"
													},
													"sink": {
														"name": "QUANTITY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Amount",
														"type": "Decimal"
													},
													"sink": {
														"name": "AMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "UnitPrice",
														"type": "Decimal"
													},
													"sink": {
														"name": "UNITPRICE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TaxAmount",
														"type": "Decimal"
													},
													"sink": {
														"name": "TAXAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "StartDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "STARTDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "EndDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "ENDDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "PrintRecord",
														"type": "Int16"
													},
													"sink": {
														"name": "PRINTRECORD",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LineOrderKey1",
														"type": "String"
													},
													"sink": {
														"name": "LINEORDERKEY1",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LineOrderKey2",
														"type": "String"
													},
													"sink": {
														"name": "LINEORDERKEY2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LineOrderKey3",
														"type": "String"
													},
													"sink": {
														"name": "LINEORDERKEY3",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LineOrderKey4",
														"type": "String"
													},
													"sink": {
														"name": "LINEORDERKEY4",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PONbr",
														"type": "String"
													},
													"sink": {
														"name": "PONBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "POSource",
														"type": "Int16"
													},
													"sink": {
														"name": "POSOURCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AssignedToCollections",
														"type": "Int16"
													},
													"sink": {
														"name": "ASSIGNEDTOCOLLECTIONS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AssignedToCollectionsDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "ASSIGNEDTOCOLLECTIONSDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DiscountAmount",
														"type": "Decimal"
													},
													"sink": {
														"name": "DISCOUNTAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "PriorARDStatus",
														"type": "Int16"
													},
													"sink": {
														"name": "PRIORARDSTATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LineLevel",
														"type": "Int16"
													},
													"sink": {
														"name": "LINELEVEL",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SiteAddressUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SITEADDRESSUID",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "INVOICEDETAIL"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "INVOICEDETAIL_STAGING",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								},
								{
									"name": "InvoiceDetail Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "InvoiceDetail Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into LRS_RAW.TOWER_RAW.INVOICEDETAIL t \nusing \n    TOWER_RAW.INVOICEDETAIL_STAGING s \non t.INVOICEDETAILUID= s.INVOICEDETAILUID  \nwhen matched then update set \nt.InvoiceDetailUID= s.InvoiceDetailUID,\n      t.InvoiceUID= s.InvoiceUID,\n      t.SiteID= s.SiteID,\n      t.ServiceUID= s.ServiceUID,\n      t.SourceUID= s.SourceUID,\n      t.SourceIDNbr= s.SourceIDNbr,\n      t.LineType= s.LineType,\n      t.LineSubType= s.LineSubType,\n      t.SvcCode= s.SvcCode,\n      t.Description= s.Description ,\n      t. Salesperson = s.Salesperson ,\n      t.SvcFrequency= s.SvcFrequency ,\n      t.Quantity= s.Quantity,\n      t.Amount= s.Amount ,\n      t.UnitPrice= s.UnitPrice,\n      t.TaxAmount= s.TaxAmount,\n      t.StartDate= s.StartDate,\n      t.EndDate= s.EndDate ,\n      t.PrintRecord= s.PrintRecord ,\n      t.LineOrderKey1= s.LineOrderKey1 ,\n      t.LineOrderKey2= s.LineOrderKey2 ,\n      t.LineOrderKey3= s.LineOrderKey3 ,\n      t.LineOrderKey4= s.LineOrderKey4 ,\n      t.PONbr= s.PONbr ,\n      t.POSource= s.POSource ,\n      t.AssignedToCollections= s.AssignedToCollections ,\n      t.AssignedToCollectionsDate= s.AssignedToCollectionsDate ,\n      t.DiscountAmount= s.DiscountAmount,\n      t.PriorARDStatus= s.PriorARDStatus ,\n      t.LineLevel= s.LineLevel,\n      t.SiteAddressUID= s.SiteAddressUID \nwhen not matched then insert \n\t(\n\tt.InvoiceDetailUID,\n      t.InvoiceUID,\n      t.SiteID,\n      t.ServiceUID,\n      t.SourceUID,\n      t.SourceIDNbr,\n      t.LineType,\n      t.LineSubType,\n      t.SvcCode,\n      t.Description,\n      t.Salesperson,\n      t.SvcFrequency,\n      t.Quantity,\n      t.Amount,\n      t.UnitPrice,\n      t.TaxAmount,\n      t.StartDate,\n      t.EndDate,\n      t.PrintRecord,\n      t.LineOrderKey1,\n      t.LineOrderKey2,\n      t.LineOrderKey3,\n      t.LineOrderKey4,\n      t.PONbr,\n      t.POSource,\n      t.AssignedToCollections,\n      t.AssignedToCollectionsDate,\n      t.DiscountAmount,\n      t.PriorARDStatus,\n      t.LineLevel,\n      t.SiteAddressUID\n\t)\nvalues \n\t(\n\ts.InvoiceDetailUID,\n      s.InvoiceUID,\n      s.SiteID,\n      s.ServiceUID,\n      s.SourceUID,\n      s.SourceIDNbr,\n      s.LineType,\n      s.LineSubType,\n      s.SvcCode,\n      s.Description,\n      s.Salesperson,\n      s.SvcFrequency,\n      s.Quantity,\n      s.Amount,\n      s.UnitPrice,\n      s.TaxAmount,\n      s.StartDate,\n      s.EndDate,\n      s.PrintRecord,\n      s.LineOrderKey1,\n      s.LineOrderKey2,\n      s.LineOrderKey3,\n      s.LineOrderKey4,\n      s.PONbr,\n      s.POSource,\n      s.AssignedToCollections,\n      s.AssignedToCollectionsDate,\n      s.DiscountAmount,\n      s.PriorARDStatus,\n      s.LineLevel,\n      s.SiteAddressUID)'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Create staging for InvoiceDetail",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table LRS_RAW.TOWER_RAW.INVOICEDETAIL_STAGING',\n    ' as select * from  \n    LRS_RAW.TOWER_RAW.INVOICEDETAIL where 1=0'\n    )\n    }",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for InvoiceDetail",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "InvoiceDetail Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table LRS_RAW.TOWER_RAW.INVOICEDETAIL_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Invoice Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging for Invoice",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from INVOICE \n    where DUEDATE > (SELECT MAX(DUEDATE) FROM INVOICE) -' , \n  pipeline().parameters.Incremental_Range3\n    )\n}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "InvoiceUID",
														"type": "Guid"
													},
													"sink": {
														"name": "INVOICEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceID",
														"type": "String"
													},
													"sink": {
														"name": "INVOICEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "Int16"
													},
													"sink": {
														"name": "STATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "InvoiceContent",
														"type": "Int16"
													},
													"sink": {
														"name": "INVOICECONTENT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "PrintInvoice",
														"type": "Int16"
													},
													"sink": {
														"name": "PRINTINVOICE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "InvoiceOrderKey",
														"type": "String"
													},
													"sink": {
														"name": "INVOICEORDERKEY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillBatchUID",
														"type": "Guid"
													},
													"sink": {
														"name": "BILLBATCHUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillCustID",
														"type": "String"
													},
													"sink": {
														"name": "BILLCUSTID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BillSiteID",
														"type": "String"
													},
													"sink": {
														"name": "BILLSITEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BillName",
														"type": "String"
													},
													"sink": {
														"name": "BILLNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillContact",
														"type": "String"
													},
													"sink": {
														"name": "BILLCONTACT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillAddressUID",
														"type": "Guid"
													},
													"sink": {
														"name": "BILLADDRESSUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillPhone",
														"type": "String"
													},
													"sink": {
														"name": "BILLPHONE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillFax",
														"type": "String"
													},
													"sink": {
														"name": "BILLFAX",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BillEmail",
														"type": "String"
													},
													"sink": {
														"name": "BILLEMAIL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SiteAddressUID",
														"type": "Guid"
													},
													"sink": {
														"name": "SITEADDRESSUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "INVOICEDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LastInvoiceDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "LASTINVOICEDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DueDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "DUEDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "FinanceChargeThruDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "FINANCECHARGETHRUDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CustClass",
														"type": "String"
													},
													"sink": {
														"name": "CUSTCLASS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BalForward",
														"type": "Decimal"
													},
													"sink": {
														"name": "BALFORWARD",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AgingBal00",
														"type": "Decimal"
													},
													"sink": {
														"name": "AGINGBAL00",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AgingBal01",
														"type": "Decimal"
													},
													"sink": {
														"name": "AGINGBAL01",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AgingBal02",
														"type": "Decimal"
													},
													"sink": {
														"name": "AGINGBAL02",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AgingBal03",
														"type": "Decimal"
													},
													"sink": {
														"name": "AGINGBAL03",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AgingBal04",
														"type": "Decimal"
													},
													"sink": {
														"name": "AGINGBAL04",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "NewBalance",
														"type": "Decimal"
													},
													"sink": {
														"name": "NEWBALANCE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotSvcOneTime",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTSVCONETIME",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotSvcRecurring",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTSVCRECURRING",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotSvcOnCall",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTSVCONCALL",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotSvcTaxes",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTSVCTAXES",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotFinCharges",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTFINCHARGES",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotCharges",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTCHARGES",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotChargeTaxes",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTCHARGETAXES",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotCredits",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTCREDITS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotCreditTaxes",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTCREDITTAXES",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TotPayments",
														"type": "Decimal"
													},
													"sink": {
														"name": "TOTPAYMENTS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "AutomaticPaymentType",
														"type": "Int16"
													},
													"sink": {
														"name": "AUTOMATICPAYMENTTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CompanyID",
														"type": "String"
													},
													"sink": {
														"name": "COMPANYID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceMailingOption",
														"type": "Int16"
													},
													"sink": {
														"name": "INVOICEMAILINGOPTION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceInsert",
														"type": "String"
													},
													"sink": {
														"name": "INVOICEINSERT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ExternalInvoiceNbr",
														"type": "String"
													},
													"sink": {
														"name": "EXTERNALINVOICENBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceDetailFormat",
														"type": "Int16"
													},
													"sink": {
														"name": "INVOICEDETAILFORMAT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LineOfBusiness",
														"type": "String"
													},
													"sink": {
														"name": "LINEOFBUSINESS",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "INVOICE"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "INVOICE_STAGING",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								},
								{
									"name": "Create staging for Invoice",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table LRS_RAW.TOWER_RAW.INVOICE_STAGING',\n    ' as select * from  \n    LRS_RAW.TOWER_RAW.INVOICE where 1=0'\n    )\n    }",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Invoice Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Invoice Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into LRS_RAW.TOWER_RAW.INVOICE t \nusing \n    TOWER_RAW.INVOICE_STAGING s \non t.INVOICEUID= s.INVOICEUID  \nwhen matched then update set \n\tt.invoiceuid = s.invoiceuid ,\n\tt.invoiceid = s.invoiceid ,\n\tt.status = s. status,\n\tt.invoicecontent = s.invoicecontent ,\n\tt.printinvoice = s.printinvoice ,\n\tt.invoiceorderkey = s.invoiceorderkey ,\n\tt.billbatchuid = s.billbatchuid ,\n\tt.billcustid = s.billcustid ,\n\tt.billsiteid = s.billsiteid ,\n\tt.billname = s.billname ,\n\tt.billcontact= s.billcontact ,\n\tt.billaddressuid = s.billaddressuid ,\n\tt.billphone = s.billphone ,\n\tt.billfax = s.billfax ,\n\tt.billemail = s.billemail ,\n\tt.siteaddressuid = s.siteaddressuid ,\n\tt.invoicedate = s.invoicedate ,\n\tt.lastinvoicedate = s.lastinvoicedate ,\n\tt.duedate = s.duedate ,\n\tt.financechargethrudate = s.financechargethrudate ,\n\tt.custclass = s.custclass ,\n\tt.balforward = s.balforward ,\n\tt.agingbal00 = s.agingbal00 ,\n\tt.agingbal01 = s.agingbal01 ,\n\tt.agingbal02 = s.agingbal02 ,\n\tt.agingbal03 = s.agingbal03 ,\n\tt.agingbal04 = s.agingbal04 ,\n\tt.newbalance = s.newbalance ,\n\tt.totsvconetime = s.totsvconetime ,\n\tt.totsvcrecurring = s.totsvcrecurring ,\n\tt.totsvconcall = s.totsvconcall ,\n\tt.totsvctaxes = s.totsvctaxes ,\n\tt.totfincharges = s.totfincharges ,\n\tt.totcharges = s.totcharges ,\n\tt.totchargetaxes = s.totchargetaxes ,\n\tt.totcredits = s.totcredits ,\n\tt.totcredittaxes = s.totcredittaxes ,\n\tt.totpayments = s.totpayments ,\n\tt.automaticpaymenttype = s.automaticpaymenttype ,\n\tt.companyid = s.companyid ,\n\tt.invoicemailingoption = s.invoicemailingoption ,\n\tt.invoiceinsert = s.invoiceinsert ,\n\tt.externalinvoicenbr = s.externalinvoicenbr ,\n\tt.invoicedetailformat = s.invoicedetailformat ,\n\tt.lineofbusiness =s.lineofbusiness \nwhen not matched then insert \n\t( \n\tt.invoiceuid ,\n\tt.invoiceid ,\n\tt.status ,\n\tt.invoicecontent ,\n\tt.printinvoice ,\n\tt.invoiceorderkey ,\n\tt.billbatchuid ,\n\tt.billcustid ,\n\tt.billsiteid ,\n\tt.billname ,\n\tt.billcontact,\n\tt.billaddressuid ,\n\tt.billphone ,\n\tt.billfax ,\n\tt.billemail ,\n\tt.siteaddressuid ,\n\tt.invoicedate ,\n\tt.lastinvoicedate ,\n\tt.duedate ,\n\tt.financechargethrudate ,\n\tt.custclass ,\n\tt.balforward ,\n\tt.agingbal00 ,\n\tt.agingbal01 ,\n\tt.agingbal02 ,\n\tt.agingbal03 ,\n\tt.agingbal04 ,\n\tt.newbalance ,\n\tt.totsvconetime ,\n\tt.totsvcrecurring ,\n\tt.totsvconcall ,\n\tt.totsvctaxes ,\n\tt.totfincharges ,\n\tt.totcharges ,\n\tt.totchargetaxes ,\n\tt.totcredits ,\n\tt.totcredittaxes ,\n\tt.totpayments ,\n\tt.automaticpaymenttype ,\n\tt.companyid ,\n\tt.invoicemailingoption ,\n\tt.invoiceinsert ,\n\tt.externalinvoicenbr ,\n\tt.invoicedetailformat ,\n\tt.lineofbusiness \n\t)\nvalues \n\t(\n\ts.invoiceuid ,\n\ts.invoiceid ,\n\ts.status ,\n\ts.invoicecontent ,\n\ts.printinvoice ,\n\ts.invoiceorderkey ,\n\ts.billbatchuid ,\n\ts.billcustid ,\n\ts.billsiteid ,\n\ts.billname ,\n\ts.billcontact,\n\ts.billaddressuid ,\n\ts.billphone ,\n\ts.billfax ,\n\ts.billemail ,\n\ts.siteaddressuid ,\n\ts.invoicedate ,\n\ts.lastinvoicedate ,\n\ts.duedate ,\n\ts.financechargethrudate ,\n\ts.custclass ,\n\ts.balforward ,\n\ts.agingbal00 ,\n\ts.agingbal01 ,\n\ts.agingbal02 ,\n\ts.agingbal03 ,\n\ts.agingbal04 ,\n\ts.newbalance ,\n\ts.totsvconetime ,\n\ts.totsvcrecurring ,\n\ts.totsvconcall ,\n\ts.totsvctaxes ,\n\ts.totfincharges ,\n\ts.totcharges ,\n\ts.totchargetaxes ,\n\ts.totcredits ,\n\ts.totcredittaxes ,\n\ts.totpayments ,\n\ts.automaticpaymenttype ,\n\ts.companyid ,\n\ts.invoicemailingoption ,\n\ts.invoiceinsert ,\n\ts.externalinvoicenbr ,\n\ts.invoicedetailformat ,\n\ts.lineofbusiness)'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for Invoice",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Invoice Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table LRS_RAW.TOWER_RAW.INVOICE_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "ID Incremental Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Tower Table Names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Tower Table Names').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "WorkOrder ID Delta Load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "WorkOrderID",
														"type": "String"
													},
													"sink": {
														"name": "WORKORDERID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "WorkOrderUID",
														"type": "Guid"
													},
													"sink": {
														"name": "WORKORDERUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "WorkPONbr",
														"type": "String"
													},
													"sink": {
														"name": "WORKPONBR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DestCertificate",
														"type": "String"
													},
													"sink": {
														"name": "DESTCERTIFICATE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CODRequired",
														"type": "Int16"
													},
													"sink": {
														"name": "CODREQUIRED",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CustomerDataFileUID",
														"type": "Guid"
													},
													"sink": {
														"name": "CUSTOMERDATAFILEUID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "InvoiceMessage",
														"type": "String"
													},
													"sink": {
														"name": "INVOICEMESSAGE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Printed",
														"type": "Int16"
													},
													"sink": {
														"name": "PRINTED",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "PrintDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "PRINTDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "PrintUser",
														"type": "String"
													},
													"sink": {
														"name": "PRINTUSER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Destination",
														"type": "String"
													},
													"sink": {
														"name": "DESTINATION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ServiceQuantity",
														"type": "Decimal"
													},
													"sink": {
														"name": "SERVICEQUANTITY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ServiceUOM",
														"type": "String"
													},
													"sink": {
														"name": "SERVICEUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ReferenceNumber",
														"type": "String"
													},
													"sink": {
														"name": "REFERENCENUMBER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TagNumber",
														"type": "String"
													},
													"sink": {
														"name": "TAGNUMBER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "FinalManifestDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "FINALMANIFESTDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "IsNoChargePickup",
														"type": "Boolean"
													},
													"sink": {
														"name": "ISNOCHARGEPICKUP",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": "WORKORDER"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "WORKORDER",
												"Snowflake_Schema": "TOWER_RAW"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Incremental_Range": {
						"type": "string",
						"defaultValue": "14"
					},
					"Incremental_Range2": {
						"type": "string",
						"defaultValue": "500"
					},
					"Incremental_Range3": {
						"type": "string",
						"defaultValue": "50"
					}
				},
				"folder": {
					"name": "Test/Tower_DC"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-27T21:47:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/MSAZ01_TOWER')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_IR_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/LRS_Snowflake_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_DAILY_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline Legacy Full Load Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Master Data Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TRUX_LEGACY_FULL_LOAD_FACT_NEW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Maximum_DIU": 16,
								"Degree_Copy_Parallelism": 32
							}
						}
					},
					{
						"name": "Execute Pipeline Midwest Full Load Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Master Data Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TRUX_MIDWEST_FULL_LOAD_FACT_NEW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Maximum_DIU": 16,
								"Degree_Copy_Parallelism": 32
							}
						}
					},
					{
						"name": "Master Data Load",
						"description": "Reloading TRUX master metadata.",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TRUX_MASTER_DATA_FULL_LOAD",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline Legacy Full Load Dim",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline Legacy Full Load Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TRUX_LEGACY_DATA_LOAD",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline Midwest Full Load Dim",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline Midwest Full Load Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TRUX_MIDWEST_DATA_LOAD",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Production/Orchestration"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-14T15:28:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TRUX_LEGACY_FULL_LOAD_FACT_NEW')]",
				"[concat(variables('factoryId'), '/pipelines/TRUX_MIDWEST_FULL_LOAD_FACT_NEW')]",
				"[concat(variables('factoryId'), '/pipelines/TRUX_MASTER_DATA_FULL_LOAD')]",
				"[concat(variables('factoryId'), '/pipelines/TRUX_LEGACY_DATA_LOAD')]",
				"[concat(variables('factoryId'), '/pipelines/TRUX_MIDWEST_DATA_LOAD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_DAILY_LOAD_OLD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Run TRUX LEGACY DIM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Run TRUX LEGACY Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TRUX_LEGACY_FULL_LOAD_DIM",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Maximum_DIU": 16,
								"Degree_Copy_Parallelism": 32
							}
						}
					},
					{
						"name": "Run TRUX MIDWEST DIM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Run TRUX MIDWEST Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TRUX_MIDWEST_FULL_LOAD_DIM",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Maximum_DIU": 16,
								"Degree_Copy_Parallelism": 32
							}
						}
					},
					{
						"name": "Run TRUX LEGACY Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Master Data Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TRUX_LEGACY_FULL_LOAD_FACT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Maximum_DIU": 16,
								"Degree_Copy_Parallelism": 32
							}
						}
					},
					{
						"name": "Run TRUX MIDWEST Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Master Data Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TRUX_MIDWEST_FULL_LOAD_FACT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Maximum_DIU": 16,
								"Degree_Copy_Parallelism": 32
							}
						}
					},
					{
						"name": "Master Data Load",
						"description": "Reloading TRUX master metadata.",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TRUX_MASTER_DATA_FULL_LOAD",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Production/TRUX_OLD"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-16T19:01:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TRUX_LEGACY_FULL_LOAD_DIM')]",
				"[concat(variables('factoryId'), '/pipelines/TRUX_MIDWEST_FULL_LOAD_DIM')]",
				"[concat(variables('factoryId'), '/pipelines/TRUX_LEGACY_FULL_LOAD_FACT')]",
				"[concat(variables('factoryId'), '/pipelines/TRUX_MIDWEST_FULL_LOAD_FACT')]",
				"[concat(variables('factoryId'), '/pipelines/TRUX_MASTER_DATA_FULL_LOAD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_INCREMENTAL_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Run TRUX LEGACY Incremental",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TRUX_LEGACY_INCREMENTAL_LOAD_FACT_NEW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Maximum_DIU": 16,
								"Degree_Copy_Parallelism": 32,
								"Incremental_Range": "14"
							}
						}
					},
					{
						"name": "Run TRUX MIDWEST Incremental",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TRUX_MIDWEST_INCREMENTAL_LOAD_FACT_NEW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Maximum_DIU": 16,
								"Degree_Copy_Parallelism": 32,
								"Incremental_Range": "14"
							}
						}
					},
					{
						"name": "Run TRUX LEGACY LOGGING Incremental",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TRUX_LEGACY_LOGGING_INCREMENTAL_LOAD",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Maximum_DIU": 16,
								"Degree_Copy_Parallelism": 32,
								"Incremental_Range": 14
							}
						}
					},
					{
						"name": "Run TRUX MIDWEST LOGGING Incremental",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TRUX_MIDWEST_LOGGING_INCREMENTAL_LOAD",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Maximum_DIU": 16,
								"Degree_Copy_Parallelism": 32,
								"Incremental_Range": 14
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Production/Orchestration"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-13T23:45:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TRUX_LEGACY_INCREMENTAL_LOAD_FACT_NEW')]",
				"[concat(variables('factoryId'), '/pipelines/TRUX_MIDWEST_INCREMENTAL_LOAD_FACT_NEW')]",
				"[concat(variables('factoryId'), '/pipelines/TRUX_LEGACY_LOGGING_INCREMENTAL_LOAD')]",
				"[concat(variables('factoryId'), '/pipelines/TRUX_MIDWEST_LOGGING_INCREMENTAL_LOAD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_DATA_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Database Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Database Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy SL01",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.SL01')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SL01_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "SL01_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SL01_NAME",
														"type": "String"
													},
													"sink": {
														"name": "SL01_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_ADDS",
														"type": "String"
													},
													"sink": {
														"name": "SL01_ADDS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_CITY",
														"type": "String"
													},
													"sink": {
														"name": "SL01_CITY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_STAT",
														"type": "String"
													},
													"sink": {
														"name": "SL01_STAT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_PZIP",
														"type": "String"
													},
													"sink": {
														"name": "SL01_PZIP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_LATT",
														"type": "Decimal"
													},
													"sink": {
														"name": "SL01_LATT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SL01_LONG",
														"type": "Decimal"
													},
													"sink": {
														"name": "SL01_LONG",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SL01_ACTIVE",
														"type": "Boolean"
													},
													"sink": {
														"name": "SL01_ACTIVE",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "SL01",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "SL01",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								},
								{
									"name": "Copy SP03",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy SL01",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.SP03')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SP03_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SP03_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SP03_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SP03_REFE",
														"type": "String"
													},
													"sink": {
														"name": "SP03_REFE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SP03_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_SITE",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "SP03",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "SP03",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								},
								{
									"name": "Copy CC02",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy SP03",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT [CC02_CUST]\n, [CC02_SITE]\n, [CC02_TYPE]\n, NULL AS [CC02_NUMBER]\n, [CC02_EXPMO]\n, [CC02_EXPYE]\n, NULL AS [CC02_CVV2]\n, [CC02_HFNAME]\n, [CC02_HLNAME]\n, [CC02_HADD]\n, [CC02_HCITY]\n, [CC02_HSTAT]\n, [CC02_HZIP]\n, [CC02_HCOUN]\n, [CC02_HPHON]\n, [CC02_HEMAIL]\n, [CC02_ACTIVE]\n, [CC02_CHRGTYPE]\n, [CC02_ID]\n, NULL AS [CC02_ROUTNUM]\n, [CC02_ACCTYPE]\n, [CC02_BANKN]\n, NULL AS [CC02_LICNUM]\n, [CC02_LICSTAT]\n, [CC02_DOB]\n, [CC02_ACCNAME]\n, [CC02_TOKEN]\n, [CC02_ACCOUNTTYPE]\n, [CC02_POS]\nFROM dbo.CC02",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.CC02')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "CC02_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CC02_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CC02_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_NUMBER",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_NUMBER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_EXPMO",
														"type": "String"
													},
													"sink": {
														"name": "CC02_EXPMO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_EXPYE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_EXPYE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_CVV2",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_CVV2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HFNAME",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HFNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HLNAME",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HLNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HADD",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HADD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HCITY",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HCITY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HSTAT",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HSTAT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HZIP",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HZIP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HCOUN",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HCOUN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HPHON",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HPHON",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HEMAIL",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HEMAIL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_ACTIVE",
														"type": "Boolean"
													},
													"sink": {
														"name": "CC02_ACTIVE",
														"type": "Boolean"
													}
												},
												{
													"source": {
														"name": "CC02_CHRGTYPE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_CHRGTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CC02_ROUTNUM",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_ROUTNUM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_ACCTYPE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_ACCTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_BANKN",
														"type": "String"
													},
													"sink": {
														"name": "CC02_BANKN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_LICNUM",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_LICNUM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_LICSTAT",
														"type": "String"
													},
													"sink": {
														"name": "CC02_LICSTAT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_DOB",
														"type": "DateTime"
													},
													"sink": {
														"name": "CC02_DOB",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CC02_ACCNAME",
														"type": "String"
													},
													"sink": {
														"name": "CC02_ACCNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_TOKEN",
														"type": "String"
													},
													"sink": {
														"name": "CC02_TOKEN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_ACCOUNTTYPE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_ACCOUNTTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_POS",
														"type": "Boolean"
													},
													"sink": {
														"name": "CC02_POS",
														"type": "Boolean"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "CC02",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "CC02",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								},
								{
									"name": "Copy LF05O",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy CC02",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.LF05O')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "LF05O_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LF05O_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LF05O_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "LF05O_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LF05O_ORIG",
														"type": "String"
													},
													"sink": {
														"name": "LF05O_ORIG",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LF05O_PERC",
														"type": "Decimal"
													},
													"sink": {
														"name": "LF05O_PERC",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "LF05O",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "LF05O",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Database Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "SELECT * FROM LRS_RAW.MASTER_DATA.DATABASE_LOOKUP_TRUX_COMBINED\nWHERE SERVERNAME = 'LEGACY';",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LOOKUP_TRUX_COMBINED",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					}
				},
				"folder": {
					"name": "Production/TRUX"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-04T23:18:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/TRUX_LEGACY01')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_DATA_LOAD_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Database Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Database Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy SL01",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.SL01')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SL01_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "SL01_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SL01_NAME",
														"type": "String"
													},
													"sink": {
														"name": "SL01_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_ADDS",
														"type": "String"
													},
													"sink": {
														"name": "SL01_ADDS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_CITY",
														"type": "String"
													},
													"sink": {
														"name": "SL01_CITY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_STAT",
														"type": "String"
													},
													"sink": {
														"name": "SL01_STAT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_PZIP",
														"type": "String"
													},
													"sink": {
														"name": "SL01_PZIP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_LATT",
														"type": "Decimal"
													},
													"sink": {
														"name": "SL01_LATT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SL01_LONG",
														"type": "Decimal"
													},
													"sink": {
														"name": "SL01_LONG",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SL01_ACTIVE",
														"type": "Boolean"
													},
													"sink": {
														"name": "SL01_ACTIVE",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "SL01",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "SL01",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								},
								{
									"name": "Copy SP03",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy SL01",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.SP03')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SP03_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SP03_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SP03_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SP03_REFE",
														"type": "String"
													},
													"sink": {
														"name": "SP03_REFE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SP03_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_SITE",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "SP03",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "SP03",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								},
								{
									"name": "Copy CC02",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy SP03",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT \n      [CC02_CUST]\n      ,[CC02_SITE]\n      ,[CC02_TYPE]\n      , NULL AS [CC02_NUMBER]\n      ,[CC02_EXPMO]\n      ,[CC02_EXPYE]\n      , NULL AS [CC02_CVV2]\n      ,[CC02_HFNAME]\n      ,[CC02_HLNAME]\n      ,[CC02_HADD]\n      ,[CC02_HCITY]\n      ,[CC02_HSTAT]\n      ,[CC02_HZIP]\n      ,[CC02_HCOUN]\n      ,[CC02_HPHON]\n      ,[CC02_HEMAIL]\n      ,[CC02_ACTIVE]\n      ,[CC02_CHRGTYPE]\n      ,[CC02_ID]\n      , NULL AS [CC02_ROUTNUM]\n      ,[CC02_ACCTYPE]\n      ,[CC02_BANKN]\n      ,[CC02_LICNUM]\n      ,[CC02_LICSTAT]\n      ,[CC02_DOB]\n      ,[CC02_ACCNAME]\n      ,[CC02_TOKEN]\n      ,[CC02_ACCOUNTTYPE]\nFROM \n      dbo.CC02",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.CC02')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "CC02_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CC02_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CC02_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_NUMBER",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_NUMBER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_EXPMO",
														"type": "String"
													},
													"sink": {
														"name": "CC02_EXPMO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_EXPYE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_EXPYE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_CVV2",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_CVV2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HFNAME",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HFNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HLNAME",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HLNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HADD",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HADD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HCITY",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HCITY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HSTAT",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HSTAT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HZIP",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HZIP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HCOUN",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HCOUN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HPHON",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HPHON",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HEMAIL",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HEMAIL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_ACTIVE",
														"type": "Boolean"
													},
													"sink": {
														"name": "CC02_ACTIVE",
														"type": "Boolean"
													}
												},
												{
													"source": {
														"name": "CC02_CHRGTYPE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_CHRGTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CC02_ROUTNUM",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_ROUTNUM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_ACCTYPE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_ACCTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_BANKN",
														"type": "String"
													},
													"sink": {
														"name": "CC02_BANKN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_LICNUM",
														"type": "String"
													},
													"sink": {
														"name": "CC02_LICNUM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_LICSTAT",
														"type": "String"
													},
													"sink": {
														"name": "CC02_LICSTAT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_DOB",
														"type": "DateTime"
													},
													"sink": {
														"name": "CC02_DOB",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CC02_ACCNAME",
														"type": "String"
													},
													"sink": {
														"name": "CC02_ACCNAME",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "CC02",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "CC02",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								},
								{
									"name": "Copy LF05O",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy CC02",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.LF05O')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "LF05O_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LF05O_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LF05O_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "LF05O_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LF05O_ORIG",
														"type": "String"
													},
													"sink": {
														"name": "LF05O_ORIG",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LF05O_PERC",
														"type": "Decimal"
													},
													"sink": {
														"name": "LF05O_PERC",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "LF05O",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "LF05O",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Database Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "SELECT * FROM LRS_RAW.MASTER_DATA.DATABASE_LOOKUP_TRUX_COMBINED\nWHERE SERVERNAME = 'LEGACY';",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LOOKUP_TRUX_COMBINED",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-27T13:51:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/TRUX_LEGACY01')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_FULL_LOAD_DIM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Database Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Database Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "LM03 Copy",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name,'.LM03')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											}
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "LM03_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "LM03_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM03_SIZE",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM03_SIZE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM03_COMP",
														"type": "Boolean"
													},
													"sink": {
														"name": "LM03_COMP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM03_WTYP",
														"type": "String"
													},
													"sink": {
														"name": "LM03_WTYP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM03_CAP",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM03_CAP",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM03_MATL",
														"type": "String"
													},
													"sink": {
														"name": "LM03_MATL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM03_PRICE",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM03_PRICE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM03_UOM",
														"type": "String"
													},
													"sink": {
														"name": "LM03_UOM",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "LM03",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "LM03",
												"Snowflake_Schema": "@item().Snowflake_Name"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Database Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "STG_LEGACY_SY03",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 16
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 32
					}
				},
				"folder": {
					"name": "Production/TRUX_OLD"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/TRUX_LEGACY01')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_FULL_LOAD_FACT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Database Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Database Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DM01p Copy",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name,'.DM01P')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM01P_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM01P_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_BATCH",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_BATCH",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GLNU",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_GLNU",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINKID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GROUP",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_GROUP",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM01P",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01P",
												"Snowflake_Schema": "@item().Snowflake_Name"
											}
										}
									]
								},
								{
									"name": "DM05B Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05A Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name,'.DM05B')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05B_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ARATEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ARATEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05B",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05B",
												"Snowflake_Schema": "@item().Snowflake_Name"
											}
										}
									]
								},
								{
									"name": "DM05Z Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05B Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name,'.DM05Z')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05Z_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05Z",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05Z",
												"Snowflake_Schema": "@item().Snowflake_Name"
											}
										}
									]
								},
								{
									"name": "DM05A Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM01p Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name,'.DM05A')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05A_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05A",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05A",
												"Snowflake_Schema": "@item().Snowflake_Name"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Database Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LOOKUP_TRUX_LEGACY",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					}
				},
				"folder": {
					"name": "Production/TRUX_OLD"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/TRUX_LEGACY01')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_FULL_LOAD_FACT_NEW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Database Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Database Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DM01p Copy",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.DM01P')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM01P_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM01P_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_BATCH",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_BATCH",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GLNU",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_GLNU",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINKID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GROUP",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_GROUP",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM01P",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01P",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05A Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM01p Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.DM05A')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05A_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05A",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05A",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05B Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05A Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.DM05B')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05B_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ARATEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ARATEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05B",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05B",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05Z Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05B Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.DM05Z')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05Z_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05Z",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05Z",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "RM07 Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05Z Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.RM07')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "RM07_RDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM07_RDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM07_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_REASON",
														"type": "String"
													},
													"sink": {
														"name": "RM07_REASON",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM07_TIME",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_TIME",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_TRUK",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_TRUK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_ODOM",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_ODOM",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_STIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM07_STIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM07_ETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM07_ETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM07_DRIV",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_DRIV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "RM07",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM07",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05L Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "RM07 Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.DM05L')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05L_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05L_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05L_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05L_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05L_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05L_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05L_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05L_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05L_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05L_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05L_DSTE",
														"type": "String"
													},
													"sink": {
														"name": "DM05L_DSTE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05L_TICK",
														"type": "String"
													},
													"sink": {
														"name": "DM05L_TICK",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05L_DTID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05L_DTID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05L_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05L_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05L_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05L_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05L_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05L_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05L_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05L_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05L_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05L_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05L_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05L_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05L_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05L_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05l",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05L",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "CCLOG Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05L Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.CCLOG')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "CCLOG_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "CCLOG_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CCLOG_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "CCLOG_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CCLOG_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "CCLOG_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CCLOG_TDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "CCLOG_TDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CCLOG_PDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "CCLOG_PDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CCLOG_USER",
														"type": "String"
													},
													"sink": {
														"name": "CCLOG_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CCLOG_INVC",
														"type": "String"
													},
													"sink": {
														"name": "CCLOG_INVC",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CCLOG_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "CCLOG_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CCLOG_APPV",
														"type": "Boolean"
													},
													"sink": {
														"name": "CCLOG_APPV",
														"type": "Boolean"
													}
												},
												{
													"source": {
														"name": "CCLOG_TRANID",
														"type": "String"
													},
													"sink": {
														"name": "CCLOG_TRANID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CCLOG_ACODE",
														"type": "String"
													},
													"sink": {
														"name": "CCLOG_ACODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CCLOG_RCODE",
														"type": "String"
													},
													"sink": {
														"name": "CCLOG_RCODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CCLOG_RTEXT",
														"type": "String"
													},
													"sink": {
														"name": "CCLOG_RTEXT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CCLOG_RTRANID",
														"type": "String"
													},
													"sink": {
														"name": "CCLOG_RTRANID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CCLOG_CC02ID",
														"type": "Int32"
													},
													"sink": {
														"name": "CCLOG_CC02ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "CCLOG",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "CCLOG",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "EA01 Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CCLOG Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": "-- SELECT [EA01_ID]\n--      , [EA01_DM01ID]\n--      , [EA01_EMAILTO]\n--      , [EA01_USER]\n--      , CAST ([EA01_SDTE ] AS DATE) AS [EA01_SDTE]\n--      , [EA01_STATUS]\n--      , [EA01_MESSAGE]\n--   FROM [dbo].[EA01]\n\nSELECT [EA01_ID]\n     , [EA01_DM01ID]\n     , [EA01_EMAILTO]\n     , [EA01_USER]\n     , CAST ([EA01_SDTE ] AS smalldatetime) AS [EA01_SDTE]\n     , [EA01_STATUS]\n     , [EA01_MESSAGE]\n  FROM [dbo].[EA01]",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.EA01')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "EA01_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "EA01_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "EA01_DM01ID",
														"type": "Int32"
													},
													"sink": {
														"name": "EA01_DM01ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "EA01_EMAILTO",
														"type": "String"
													},
													"sink": {
														"name": "EA01_EMAILTO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "EA01_USER",
														"type": "String"
													},
													"sink": {
														"name": "EA01_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "EA01_SDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "EA01_SDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "EA01_STATUS",
														"type": "Boolean"
													},
													"sink": {
														"name": "EA01_STATUS",
														"type": "Boolean"
													}
												},
												{
													"source": {
														"name": "EA01_MESSAGE",
														"type": "String"
													},
													"sink": {
														"name": "EA01_MESSAGE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "EA01",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "EA01",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Database Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TRUX_LEGACY_WATERMARK_PVT",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					}
				},
				"folder": {
					"name": "Production/TRUX"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/TRUX_LEGACY01')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_INCREMENTAL_LOAD_FACT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Trux Legacy ID Watermark Lookup",
						"description": "look up schema, database and table names from sqlsever and snowflake",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TRUX_LEGACY_WATERMARK_PVT",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Incremental Loop Over ID Watermark Tables",
						"description": "Activity to loop over tables that have primary keys with incremental IDs. This loops looks at our Watermark table in Snowflake and appends any IDs found in SQL server that are greater than the latest watermark in Snowflake.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Trux Legacy ID Watermark Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Trux Legacy ID Watermark Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DM01 Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM01\nwhere DM01_ID > @{item().DM01}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM01_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_INVC",
														"type": "String"
													},
													"sink": {
														"name": "DM01_INVC",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01_SSIT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_SSIT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_PBLE",
														"type": "String"
													},
													"sink": {
														"name": "DM01_PBLE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01_BILLINDV",
														"type": "String"
													},
													"sink": {
														"name": "DM01_BILLINDV",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01_CONTRACT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_CONTRACT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_AMOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM01_AMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_ORIGINVID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_ORIGINVID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_FCTY",
														"type": "String"
													},
													"sink": {
														"name": "DM01_FCTY",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM01",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM01p Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM01 Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM01P\nwhere DM01P_ID > @{item().DM01P}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM01P_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM01P_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_BATCH",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_BATCH",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GLNU",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_GLNU",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINKID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GROUP",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_GROUP",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM01P",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01P",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05A Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM01p Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05A\nwhere DM05A_ID > @{item().DM05A}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05A_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05A",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05A",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05B Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05A Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05B\nwhere DM05B_ID > @{item().DM05B}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05B_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ARATEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ARATEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05B",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05B",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05FT Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05B Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05FT\nwhere DM05FT_ID > @{item().DM05FT}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05FT_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05FT_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05FT_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05FT_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05FT_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_SSIT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_SSIT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_SERV",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_SERV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05FT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05FT_DESC",
														"type": "String"
													},
													"sink": {
														"name": "DM05FT_DESC",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05FT_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05FT_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05FT_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05FT_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05FT_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05FT_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05FT_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05FT_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05FT_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05FT",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05FT",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05Z Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05FT Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05Z\nwhere DM05Z_ID > @{item().DM05Z}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05Z_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05Z",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05Z",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "LM02 Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05Z Incremental Delta Load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from LM02\nwhere LM02_ID > @{item().LM02}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "LM02_DSTE",
														"type": "String"
													},
													"sink": {
														"name": "LM02_DSTE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_NUMB",
														"type": "String"
													},
													"sink": {
														"name": "LM02_NUMB",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_INOT",
														"type": "Boolean"
													},
													"sink": {
														"name": "LM02_INOT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_DQTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_DQTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_DUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_DUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_DAMT",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_DAMT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_SERV",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_SERV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_BQTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_BQTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_BUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_BUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_BAMT",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_BAMT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_MATL",
														"type": "String"
													},
													"sink": {
														"name": "LM02_MATL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_BLAD",
														"type": "String"
													},
													"sink": {
														"name": "LM02_BLAD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_PORD",
														"type": "String"
													},
													"sink": {
														"name": "LM02_PORD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_CARR",
														"type": "String"
													},
													"sink": {
														"name": "LM02_CARR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_NOT1",
														"type": "String"
													},
													"sink": {
														"name": "LM02_NOT1",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_NOT2",
														"type": "String"
													},
													"sink": {
														"name": "LM02_NOT2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_IDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_IDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_UCHG",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_UCHG",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_MIN",
														"type": "String"
													},
													"sink": {
														"name": "LM02_MIN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_SEQ1",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_SEQ1",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_SEQ2",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_SEQ2",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_FQTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_FQTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_FUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_FUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_DRATE",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_DRATE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_OWN",
														"type": "String"
													},
													"sink": {
														"name": "LM02_OWN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_LF05ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_LF05ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_UCHGUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_UCHGUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_DRATEUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_DRATEUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_FINV",
														"type": "String"
													},
													"sink": {
														"name": "LM02_FINV",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_FDAT",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_FDAT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_FUSE",
														"type": "String"
													},
													"sink": {
														"name": "LM02_FUSE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_FRDT",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_FRDT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_CDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_CDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_TIN",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_TIN",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_TOUT",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_TOUT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_CM09ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_CM09ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_LM05ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_LM05ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_LEED",
														"type": "Boolean"
													},
													"sink": {
														"name": "LM02_LEED",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_LEEDWEIGHT",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_LEEDWEIGHT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_LEEDWEIGHTUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_LEEDWEIGHTUOM",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "LM02",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "LM02",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "RM03U Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LM02 Incremental Delta Load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from RM03U\nwhere RM03U_ID > @{item().RM03U}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "RM03U_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM03U_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM03U_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_SERV",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_SERV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "RM03U_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_ACTV",
														"type": "String"
													},
													"sink": {
														"name": "RM03U_ACTV",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM03U_REFN",
														"type": "String"
													},
													"sink": {
														"name": "RM03U_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM03U_TIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM03U_TIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM03U_WONU",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_WONU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_DATA",
														"type": "String"
													},
													"sink": {
														"name": "RM03U_DATA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM03U_TTKN",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM03U_TTKN",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM03U_UTKN",
														"type": "String"
													},
													"sink": {
														"name": "RM03U_UTKN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM03U_LOGID",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_LOGID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_CHG",
														"type": "Decimal"
													},
													"sink": {
														"name": "RM03U_CHG",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_TIM2",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM03U_TIM2",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM03U_CALLID",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_CALLID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_STORIG",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_STORIG",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_STPREV",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_STPREV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_STNEXT",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_STNEXT",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "RM03U",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM03U",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Incremental Loop Over Date Watermark Tables",
						"description": "Incremental Loop Over Date Watermark Tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Trux Legacy ID Watermark Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Trux Legacy ID Watermark Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "RM05 Incremental Delta Load to Staging",
									"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging table for RM05",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from RM05 where RM05_DATE >DATEADD(day,-', \n    pipeline().parameters.Incremental_Range,\n    ', GETDATE())'\n    )\n}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "rm05",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM05_STAGING",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "RM05 Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "RM05 Incremental Delta Load to Staging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into ', item().Snowflake_schema,'.','RM05 t \nusing ', \n    item().Snowflake_schema,'.','RM05_STAGING s \non concat(t.rm05_rout, t.rm05_seq1,t.rm05_seq2,t.rm05_date) = concat(s.rm05_rout, s.rm05_seq1,s.rm05_seq2,s.rm05_date) \nwhen matched then update set \n    t.rm05_date = s.rm05_date,\n\tt.rm05_rout = s.rm05_rout,\n\tt.rm05_seq1 = s.rm05_seq1, \n\tt.rm05_seq2 = s.rm05_seq2, \n\tt.rm05_truk = s.rm05_truk,\n\tt.rm05_driv = s.rm05_driv,\n\tt.rm05_help = s.rm05_help,\n\tt.rm05_fuel = s.rm05_fuel,\n\tt.rm05_fuom = s.rm05_fuom,\n\tt.rm05_tim1 = s.rm05_tim1,\n\tt.rm05_tim2 = s.rm05_tim2,\n\tt.rm05_odm1 = s.rm05_odm1,\n\tt.rm05_odm2 = s.rm05_odm2,\n\tt.rm05_ouom = s.rm05_ouom,\n\tt.rm05_note = s.rm05_note,\n\tt.rm05_starthour = s.rm05_starthour,\n\tt.rm05_endhour = s.rm05_endhour,\n\tt.rm05_oil = s.rm05_oil,\n\tt.rm05_oil_uom = s.rm05_oil_uom,\n\tt.rm05_deptime = s.rm05_deptime,\n\tt.rm05_rettime = s.rm05_rettime,\n\tt.rm05_starttime= s.rm05_starttime \nwhen not matched then insert \n\t(\n\tt.rm05_date,\n\tt.rm05_rout,\n\tt.rm05_seq1,\n\tt.rm05_seq2,\n\tt.rm05_truk,\n\tt.rm05_driv,\n\tt.rm05_help,\n\tt.rm05_fuel,\n\tt.rm05_fuom,\n\tt.rm05_tim1,\n\tt.rm05_tim2,\n\tt.rm05_odm1,\n\tt.rm05_odm2,\n\tt.rm05_ouom,\n\tt.rm05_note,\n\tt.rm05_starthour,\n\tt.rm05_endhour,\n\tt.rm05_oil,\n\tt.rm05_oil_uom,\n\tt.rm05_deptime,\n\tt.rm05_rettime,\n\tt.rm05_starttime \n\t)\nvalues \n\t(\n\ts.rm05_date,\n\ts.rm05_rout,\n\ts.rm05_seq1, \n\ts.rm05_seq2, \n\ts.rm05_truk,\n\ts.rm05_driv,\n\ts.rm05_help,\n\ts.rm05_fuel,\n\ts.rm05_fuom,\n\ts.rm05_tim1,\n\ts.rm05_tim2,\n\ts.rm05_odm1,\n\ts.rm05_odm2,\n\ts.rm05_ouom,\n\ts.rm05_note,\n\ts.rm05_starthour,\n\ts.rm05_endhour,\n\ts.rm05_oil,\n\ts.rm05_oil_uom,\n\ts.rm05_deptime,\n\ts.rm05_rettime,\n\ts.rm05_starttime)'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "SM01 Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "SM01 Incremental Delta Load to Staging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into ', item().snowflake_schema,'.','SM01 t \nusing ', \n    item().snowflake_schema,'.','sm01_staging s \non concat(t.sm01_rout, t.sm01_sequ, t.sm01_date) = concat(s.sm01_rout, s.sm01_sequ, s.sm01_date) \nwhen matched then update set \n\tt.sm01_date= s.sm01_date ,\n\tt.sm01_rout= s.sm01_rout ,\n\tt.sm01_sequ= s.sm01_sequ ,\n\tt.sm01_cust= s.sm01_cust ,\n\tt.sm01_site= s.sm01_site ,\n\tt.sm01_serv= s.sm01_serv ,\n\tt.sm01_qty= s.sm01_qty ,\n\tt.sm01_actv= s.sm01_actv ,\n\tt.sm01_amnt= s.sm01_amnt ,\n\tt.sm01_idte= s.sm01_idte ,\n\tt.sm01_refn= s.sm01_refn ,\n\tt.sm01_time= s.sm01_time ,\n\tt.sm01_wonu = s.sm01_wonu,\n\tt.sm01_data= s.sm01_data ,\n\tt.sm01_logid = s.sm01_logid,\n\tt.sm01_arateid = s.sm01_arateid,\n\tt.sm01_callid = s.sm01_callid,\n\tt.sm01_user= s.sm01_user ,\n\tt.sm01_cdte= s.sm01_cdte ,\n\tt.sm01_tim2= s.sm01_tim2 ,\n\tt.sm01_callnumber= s.sm01_callnumber ,\n\tt.sm01_storig = s.sm01_storig,\n\tt.sm01_stprev =s.sm01_stprev,\n\tt.sm01_stnext = s.sm01_stnext ,\n\tt.sm01_pchg= s.sm01_pchg ,\n\tt.sm01_orig_sequ = s.sm01_orig_sequ \n\nwhen not matched then insert \n\t(\n\tt.sm01_date ,\n\tt.sm01_rout ,\n\tt.sm01_sequ ,\n\tt.sm01_cust ,\n\tt.sm01_site ,\n\tt.sm01_serv ,\n\tt.sm01_qty ,\n\tt.sm01_actv ,\n\tt.sm01_amnt ,\n\tt.sm01_idte ,\n\tt.sm01_refn ,\n\tt.sm01_time ,\n\tt.sm01_wonu,\n\tt.sm01_data ,\n\tt.sm01_logid ,\n\tt.sm01_arateid ,\n\tt.sm01_callid ,\n\tt.sm01_user ,\n\tt.sm01_cdte ,\n\tt.sm01_tim2 ,\n\tt.sm01_callnumber ,\n\tt.sm01_storig, \n\tt.sm01_stprev ,\n\tt.sm01_stnext ,\n\tt.sm01_pchg ,\n\tt.sm01_orig_sequ \n\t)\nvalues \n\t(\n\ts.sm01_date ,\n\ts.sm01_rout ,\n\ts.sm01_sequ ,\n\ts.sm01_cust ,\n\ts.sm01_site ,\n\ts.sm01_serv ,\n\ts.sm01_qty ,\n\ts.sm01_actv ,\n\ts.sm01_amnt ,\n\ts.sm01_idte ,\n\ts.sm01_refn ,\n\ts.sm01_time ,\n\ts.sm01_wonu, \n\ts.sm01_data ,\n\ts.sm01_logid ,\n\ts.sm01_arateid ,\n\ts.sm01_callid ,\n\ts.sm01_user ,\n\ts.sm01_cdte ,\n\ts.sm01_tim2 ,\n\ts.sm01_callnumber ,\n\ts.sm01_storig ,\n\ts.sm01_stprev, \n\ts.sm01_stnext ,\n\ts.sm01_pchg ,\n\ts.sm01_orig_sequ)'\n\t)}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "MT02 Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "MT02 Incremental Delta Load to Staging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into ', item().snowflake_schema,'.','mt02 t \nusing ', \n    item().snowflake_schema,'.','mt02_staging s \non concat(t.mt02_refr, t.mt02_lmdate) = concat(s.mt02_refr, s.mt02_lmdate) \nwhen matched then update set \n\tt.mt02_refr= s.mt02_refr ,\n\tt.mt02_cust= s.mt02_cust ,\n\tt.mt02_site= s.mt02_site ,\n\tt.mt02_serv= s.mt02_serv ,\n\tt.mt02_date =s.mt02_date ,\n\tt.mt02_code= s.mt02_code ,\n\tt.mt02_amnt= s.mt02_amnt ,\n\tt.mt02_desc= s.mt02_desc ,\n\tt.mt02_qty= s.mt02_qty ,\n\tt.mt02_idte= s.mt02_idte ,\n\tt.mt02_rout= s.mt02_rout ,\n\tt.mt02_sequ= s.mt02_sequ ,\n\tt.mt02_rate= s.mt02_rate ,\n\tt.mt02_lmuser= s.mt02_lmuser ,\n\tt.mt02_lmdate= s.mt02_lmdate ,\n\tt.mt02_desc0= s.mt02_desc0 ,\n\tt.mt02_desc1= s.mt02_desc1 ,\n\tt.mt02_desc2= s.mt02_desc2 ,\n\tt.mt02_desc3= s.mt02_desc3 ,\n\tt.mt02_lf05id= s.mt02_lf05id ,\n\tt.mt02_own= s.mt02_own ,\n\tt.mt02_schid= s.mt02_schid,\n\tt.mt02_schidw= s.mt02_schidw ,\n\tt.mt02_fcty= s.mt02_fcty \n\nwhen not matched then insert \n\t(\n\tt.mt02_refr ,\n\tt.mt02_cust ,\n\tt.mt02_site ,\n\tt.mt02_serv ,\n\tt.mt02_date ,\n\tt.mt02_code ,\n\tt.mt02_amnt ,\n\tt.mt02_desc ,\n\tt.mt02_qty ,\n\tt.mt02_idte ,\n\tt.mt02_rout ,\n\tt.mt02_sequ ,\n\tt.mt02_rate ,\n\tt.mt02_lmuser ,\n\tt.mt02_lmdate ,\n\tt.mt02_desc0 ,\n\tt.mt02_desc1 ,\n\tt.mt02_desc2 ,\n\tt.mt02_desc3 ,\n\tt.mt02_lf05id ,\n\tt.mt02_own ,\n\tt.mt02_schid ,\n\tt.mt02_schidw ,\n\tt.mt02_fcty \n\t)\nvalues \n\t(\ns.mt02_refr ,\n\ts.mt02_cust ,\n\ts.mt02_site ,\n\ts.mt02_serv ,\n\ts.mt02_date ,\n\ts.mt02_code ,\n\ts.mt02_amnt ,\n\ts.mt02_desc ,\n\ts.mt02_qty ,\n\ts.mt02_idte ,\n\ts.mt02_rout ,\n\ts.mt02_sequ ,\n\ts.mt02_rate ,\n\ts.mt02_lmuser ,\n\ts.mt02_lmdate ,\n\ts.mt02_desc0 ,\n\ts.mt02_desc1 ,\n\ts.mt02_desc2 ,\n\ts.mt02_desc3 ,\n\ts.mt02_lf05id ,\n\ts.mt02_own ,\n\ts.mt02_schid ,\n\ts.mt02_schidw ,\n\ts.mt02_fcty )'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "SM01 Incremental Delta Load to Staging",
									"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging table for SM01",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from SM01 where SM01_DATE >DATEADD(day,-', \n    pipeline().parameters.Incremental_Range,\n    ', GETDATE())'\n    )\n}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "sm01",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "SM01_STAGING",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "MT02 Incremental Delta Load to Staging",
									"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging table for MT02",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from MT02 where MT02_DATE >DATEADD(day,-', \n    pipeline().parameters.Incremental_Range,\n    ', GETDATE())'\n    )\n}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "mt02",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "MT02_STAGING",
												"Snowflake_Schema": {
													"value": "@item().snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Create staging table for RM05",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table ', \n    item().Snowflake_schema,\n    '.RM05_STAGING',\n    ' as select * from ', \n    item().Snowflake_schema,\n    '.RM05 where 1=0'\n    )\n    }",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Create staging table for SM01",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table ', \n    item().Snowflake_schema,\n    '.SM01_STAGING',\n    ' as select * from ', \n    item().Snowflake_schema,\n    '.SM01 where 1=0'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Create staging table for MT02",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table ', \n    item().Snowflake_schema,\n    '.MT02_STAGING',\n    ' as select * from ', \n    item().Snowflake_schema,\n    '.MT02 where 1=0'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for RM05",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "RM05 Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table ', \n    item().Snowflake_schema,\n    '.RM05_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for SM01",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "SM01 Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table ', \n    item().Snowflake_schema,\n    '.SM01_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for MT02",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "MT02 Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table ', \n    item().Snowflake_schema,\n    '.MT02_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"Incremental_Range": {
						"type": "string",
						"defaultValue": "14"
					}
				},
				"variables": {
					"tempArray": {
						"type": "Array"
					},
					"TempResult": {
						"type": "Array"
					},
					"ResultsArray": {
						"type": "Array"
					},
					"OutputArray": {
						"type": "Array"
					},
					"append": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Production/TRUX_OLD"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-27T20:13:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/TRUX_LEGACY01')]",
				"[concat(variables('factoryId'), '/linkedServices/LRS_Snowflake_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_INCREMENTAL_LOAD_FACT_BKUP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Trux Legacy Watermark Lookup",
						"description": "look up schema, database and table names from sqlsever and snowflake",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "//RM05\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.rm05\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.rm05\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.rm05\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.rm05\r\n-------------------------------------------------------------------------------------------\r\n\r\n  union all\r\n\r\n//sm01\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.sm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.sm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.sm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.sm01\r\nsm01\r\n------------------------------------------------------------\r\n//DM01\r\nunion all\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.dm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.dm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.dm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.dm01\r\n\r\n------------------------------------------------------------------\r\nunion all\r\n\r\n//DM01P\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.dm01p\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.dm01p\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.dm01p\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.dm01p\r\n\r\n---------------------------------------\r\nunion all\r\n//DM05A\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.dm05a\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.dm05a\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.dm05a\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.dm05a\r\n--------------------------------------------------\r\nunion all\r\n\r\n//DM05B\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.DM05b\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.DM05b\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.DM05b\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.DM05b\r\n---------------------------------------------------------------------\r\nunion all\r\n//DM05FT\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.DM05ft\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.DM05ft\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.DM05ft\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.DM05ft\r\n---------------------------------------------------------\r\nunion all\r\n//DM05Z\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.Dm05z\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.Dm05z\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.Dm05z\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.Dm05z\r\n\r\n--------------------------------------------------------\r\nunion all\r\n//LM02\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.Lm02\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.Lm02\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.Lm02\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.Lm02\r\n  \r\n------------------------------------------------------------\r\nunion all\r\n\r\n//MT02\r\n\r\nselect \r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar)as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar)  as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.MT02\r\nunion all\r\n\r\nselect \r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.MT02\r\n\r\n\r\n-----------------------------------------------------------------------------\r\nunion all\r\n\r\n//RM03U\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.Rm03u\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.Rm03u\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.Rm03u\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.Rm03u\r\n\r\n---------------------------------------------------------",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LKPWATERMARK_TRUX_LEGACY",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Loop Over Tables",
						"description": "activity to loop over our array of results which are the tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Trux Legacy Watermark Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Trux Legacy Watermark Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "RM05 Incremental Delta Load to Staging",
									"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Snowflake Create Staging Tables",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from RM05\nwhere RM05_DATE > DATEADD(day, -7, GETDATE())",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "rm05",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": {
													"value": "@concat(item().table_name,'_STAGING')",
													"type": "Expression"
												},
												"Snowflake_Schema": {
													"value": "@item().snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Snowflake Create Staging Tables",
									"description": "create staging table used to store the delta incremental load. In this staging table, we perform a merge to the main raw table.",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('Create or replace table ', item().Snowflake_schema,'.',item().table_name,'_staging\n    as \n    select * from ', item().Snowflake_schema,'.',item().table_name,\n    ' where 1=0')}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "RM05 Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "RM05 Incremental Delta Load to Staging",
											"dependencyConditions": [
												"Succeeded",
												"Skipped"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into ', item().Snowflake_schema,'.','RM05 t \nusing ', \n    item().Snowflake_schema,'.','RM05_STAGING s \non concat(t.rm05_rout, t.rm05_seq1,t.rm05_seq2,t.rm05_date) = concat(s.rm05_rout, s.rm05_seq1,s.rm05_seq2,s.rm05_date) \nwhen matched then update set \n    t.rm05_date = s.rm05_date,\n\tt.rm05_rout = s.rm05_rout,\n\tt.rm05_seq1 = s.rm05_seq1, \n\tt.rm05_seq2 = s.rm05_seq2, \n\tt.rm05_truk = s.rm05_truk,\n\tt.rm05_driv = s.rm05_driv,\n\tt.rm05_help = s.rm05_help,\n\tt.rm05_fuel = s.rm05_fuel,\n\tt.rm05_fuom = s.rm05_fuom,\n\tt.rm05_tim1 = s.rm05_tim1,\n\tt.rm05_tim2 = s.rm05_tim2,\n\tt.rm05_odm1 = s.rm05_odm1,\n\tt.rm05_odm2 = s.rm05_odm2,\n\tt.rm05_ouom = s.rm05_ouom,\n\tt.rm05_note = s.rm05_note,\n\tt.rm05_starthour = s.rm05_starthour,\n\tt.rm05_endhour = s.rm05_endhour,\n\tt.rm05_oil = s.rm05_oil,\n\tt.rm05_oil_uom = s.rm05_oil_uom,\n\tt.rm05_deptime = s.rm05_deptime,\n\tt.rm05_rettime = s.rm05_rettime,\n\tt.rm05_starttime= s.rm05_starttime \nwhen not matched then insert \n\t(\n\tt.rm05_date,\n\tt.rm05_rout,\n\tt.rm05_seq1,\n\tt.rm05_seq2,\n\tt.rm05_truk,\n\tt.rm05_driv,\n\tt.rm05_help,\n\tt.rm05_fuel,\n\tt.rm05_fuom,\n\tt.rm05_tim1,\n\tt.rm05_tim2,\n\tt.rm05_odm1,\n\tt.rm05_odm2,\n\tt.rm05_ouom,\n\tt.rm05_note,\n\tt.rm05_starthour,\n\tt.rm05_endhour,\n\tt.rm05_oil,\n\tt.rm05_oil_uom,\n\tt.rm05_deptime,\n\tt.rm05_rettime,\n\tt.rm05_starttime \n\t)\nvalues \n\t(\n\ts.rm05_date,\n\ts.rm05_rout,\n\ts.rm05_seq1, \n\ts.rm05_seq2, \n\ts.rm05_truk,\n\ts.rm05_driv,\n\ts.rm05_help,\n\ts.rm05_fuel,\n\ts.rm05_fuom,\n\ts.rm05_tim1,\n\ts.rm05_tim2,\n\ts.rm05_odm1,\n\ts.rm05_odm2,\n\ts.rm05_ouom,\n\ts.rm05_note,\n\ts.rm05_starthour,\n\ts.rm05_endhour,\n\ts.rm05_oil,\n\ts.rm05_oil_uom,\n\ts.rm05_deptime,\n\ts.rm05_rettime,\n\ts.rm05_starttime)'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Snowflake Drop Staging Tables",
									"description": "after all activities are completed, we perform the drop operation to clean up the snowflake environment",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "RM05 Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "SM01 Snowflake Merge Operation_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "MT02 Snowflake Merge Operation_copy1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('drop table if exists ', item().Snowflake_schema,'.',item().table_name,'_STAGING')}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "DM01 Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM01\nwhere DM01_ID > cast('@{item().LATEST_WATERMARK}' as int)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												},
												"path": "trux"
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM01_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_INVC",
														"type": "String"
													},
													"sink": {
														"name": "DM01_INVC",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01_SSIT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_SSIT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_PBLE",
														"type": "String"
													},
													"sink": {
														"name": "DM01_PBLE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01_BILLINDV",
														"type": "String"
													},
													"sink": {
														"name": "DM01_BILLINDV",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01_CONTRACT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_CONTRACT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_AMOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM01_AMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_ORIGINVID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_ORIGINVID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_FCTY",
														"type": "String"
													},
													"sink": {
														"name": "DM01_FCTY",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "dm01",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM01p Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM01 Incremental Delta Load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM01P\nwhere DM01P_ID > cast('@{item().LATEST_WATERMARK}' as int)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												},
												"path": "trux"
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM01P_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM01P_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_BATCH",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_BATCH",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GLNU",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_GLNU",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINKID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GROUP",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_GROUP",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "dm01p",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01P",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05A Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM01p Incremental Delta Load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05A\nwhere DM05A_ID > cast('@{item().LATEST_WATERMARK}' as int)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												},
												"path": "trux"
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05A_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dm05a",
												"table": "dbo",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05A",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05B Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05A Incremental Delta Load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												},
												"path": "trux"
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05B_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ARATEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ARATEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05B",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05B",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05FT Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05B Incremental Delta Load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05FT\nwhere DM05FT_ID > cast('@{item().LATEST_WATERMARK}' as int)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												},
												"path": "trux"
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05FT_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05FT_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05FT_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05FT_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05FT_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_SSIT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_SSIT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_SERV",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_SERV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05FT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05FT_DESC",
														"type": "String"
													},
													"sink": {
														"name": "DM05FT_DESC",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05FT_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05FT_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05FT_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05FT_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05FT_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05FT_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05FT_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05FT_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05FT_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "dm05ft",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05FT",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05Z Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05FT Incremental Delta Load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05Z\nwhere DM05Z_ID > cast('@{item().LATEST_WATERMARK}' as int)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												},
												"path": "trux"
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05Z_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "dm05z",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05Z",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "LM02 Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05Z Incremental Delta Load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from LM02\nwhere LM02_ID > cast('@{item().LATEST_WATERMARK}' as int)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												},
												"path": "trux"
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "LM02_DSTE",
														"type": "String"
													},
													"sink": {
														"name": "LM02_DSTE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_NUMB",
														"type": "String"
													},
													"sink": {
														"name": "LM02_NUMB",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_INOT",
														"type": "Boolean"
													},
													"sink": {
														"name": "LM02_INOT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_DQTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_DQTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_DUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_DUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_DAMT",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_DAMT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_SERV",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_SERV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_BQTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_BQTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_BUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_BUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_BAMT",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_BAMT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_MATL",
														"type": "String"
													},
													"sink": {
														"name": "LM02_MATL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_BLAD",
														"type": "String"
													},
													"sink": {
														"name": "LM02_BLAD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_PORD",
														"type": "String"
													},
													"sink": {
														"name": "LM02_PORD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_CARR",
														"type": "String"
													},
													"sink": {
														"name": "LM02_CARR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_NOT1",
														"type": "String"
													},
													"sink": {
														"name": "LM02_NOT1",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_NOT2",
														"type": "String"
													},
													"sink": {
														"name": "LM02_NOT2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_IDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_IDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_UCHG",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_UCHG",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_MIN",
														"type": "String"
													},
													"sink": {
														"name": "LM02_MIN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_SEQ1",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_SEQ1",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_SEQ2",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_SEQ2",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_FQTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_FQTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_FUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_FUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_DRATE",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_DRATE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_OWN",
														"type": "String"
													},
													"sink": {
														"name": "LM02_OWN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_LF05ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_LF05ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_UCHGUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_UCHGUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_DRATEUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_DRATEUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_FINV",
														"type": "String"
													},
													"sink": {
														"name": "LM02_FINV",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_FDAT",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_FDAT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_FUSE",
														"type": "String"
													},
													"sink": {
														"name": "LM02_FUSE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_FRDT",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_FRDT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_CDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_CDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_TIN",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_TIN",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_TOUT",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_TOUT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_CM09ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_CM09ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_LM05ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_LM05ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_LEED",
														"type": "Boolean"
													},
													"sink": {
														"name": "LM02_LEED",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_LEEDWEIGHT",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_LEEDWEIGHT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_LEEDWEIGHTUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_LEEDWEIGHTUOM",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "lm02",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "LM02",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "RM03U Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LM02 Incremental Delta Load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from RM03U\nwhere RM03U_ID > cast('@{item().LATEST_WATERMARK}' as int)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												},
												"path": "trux"
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "RM03U_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM03U_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM03U_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_SERV",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_SERV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "RM03U_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_ACTV",
														"type": "String"
													},
													"sink": {
														"name": "RM03U_ACTV",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM03U_REFN",
														"type": "String"
													},
													"sink": {
														"name": "RM03U_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM03U_TIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM03U_TIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM03U_WONU",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_WONU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_DATA",
														"type": "String"
													},
													"sink": {
														"name": "RM03U_DATA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM03U_TTKN",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM03U_TTKN",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM03U_UTKN",
														"type": "String"
													},
													"sink": {
														"name": "RM03U_UTKN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM03U_LOGID",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_LOGID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_CHG",
														"type": "Decimal"
													},
													"sink": {
														"name": "RM03U_CHG",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_TIM2",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM03U_TIM2",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM03U_CALLID",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_CALLID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_STORIG",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_STORIG",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_STPREV",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_STPREV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_STNEXT",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_STNEXT",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "rm03u",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM03U",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SM01 Snowflake Merge Operation_copy1",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "SM01 Incremental Delta Load to Staging",
											"dependencyConditions": [
												"Succeeded",
												"Skipped"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into ', item().snowflake_schema,'.','SM01 t \nusing ', \n    item().snowflake_schema,'.','sm01_staging s \non concat(t.sm01_rout, t.sm01_sequ, t.sm01_date) = concat(s.sm01_rout, s.sm01_sequ, s.sm01_date) \nwhen matched then update set \n\tt.sm01_date= s.sm01_date ,\n\tt.sm01_rout= s.sm01_rout ,\n\tt.sm01_sequ= s.sm01_sequ ,\n\tt.sm01_cust= s.sm01_cust ,\n\tt.sm01_site= s.sm01_site ,\n\tt.sm01_serv= s.sm01_serv ,\n\tt.sm01_qty= s.sm01_qty ,\n\tt.sm01_actv= s.sm01_actv ,\n\tt.sm01_amnt= s.sm01_amnt ,\n\tt.sm01_idte= s.sm01_idte ,\n\tt.sm01_refn= s.sm01_refn ,\n\tt.sm01_time= s.sm01_time ,\n\tt.sm01_wonu = s.sm01_wonu,\n\tt.sm01_data= s.sm01_data ,\n\tt.sm01_logid = s.sm01_logid,\n\tt.sm01_arateid = s.sm01_arateid,\n\tt.sm01_callid = s.sm01_callid,\n\tt.sm01_user= s.sm01_user ,\n\tt.sm01_cdte= s.sm01_cdte ,\n\tt.sm01_tim2= s.sm01_tim2 ,\n\tt.sm01_callnumber= s.sm01_callnumber ,\n\tt.sm01_storig = s.sm01_storig,\n\tt.sm01_stprev =s.sm01_stprev,\n\tt.sm01_stnext = s.sm01_stnext ,\n\tt.sm01_pchg= s.sm01_pchg ,\n\tt.sm01_orig_sequ = s.sm01_orig_sequ \n\nwhen not matched then insert \n\t(\n\tt.sm01_date ,\n\tt.sm01_rout ,\n\tt.sm01_sequ ,\n\tt.sm01_cust ,\n\tt.sm01_site ,\n\tt.sm01_serv ,\n\tt.sm01_qty ,\n\tt.sm01_actv ,\n\tt.sm01_amnt ,\n\tt.sm01_idte ,\n\tt.sm01_refn ,\n\tt.sm01_time ,\n\tt.sm01_wonu,\n\tt.sm01_data ,\n\tt.sm01_logid ,\n\tt.sm01_arateid ,\n\tt.sm01_callid ,\n\tt.sm01_user ,\n\tt.sm01_cdte ,\n\tt.sm01_tim2 ,\n\tt.sm01_callnumber ,\n\tt.sm01_storig, \n\tt.sm01_stprev ,\n\tt.sm01_stnext ,\n\tt.sm01_pchg ,\n\tt.sm01_orig_sequ \n\t)\nvalues \n\t(\n\ts.sm01_date ,\n\ts.sm01_rout ,\n\ts.sm01_sequ ,\n\ts.sm01_cust ,\n\ts.sm01_site ,\n\ts.sm01_serv ,\n\ts.sm01_qty ,\n\ts.sm01_actv ,\n\ts.sm01_amnt ,\n\ts.sm01_idte ,\n\ts.sm01_refn ,\n\ts.sm01_time ,\n\ts.sm01_wonu, \n\ts.sm01_data ,\n\ts.sm01_logid ,\n\ts.sm01_arateid ,\n\ts.sm01_callid ,\n\ts.sm01_user ,\n\ts.sm01_cdte ,\n\ts.sm01_tim2 ,\n\ts.sm01_callnumber ,\n\ts.sm01_storig ,\n\ts.sm01_stprev, \n\ts.sm01_stnext ,\n\ts.sm01_pchg ,\n\ts.sm01_orig_sequ)'\n\t)}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "MT02 Snowflake Merge Operation_copy1_copy1",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "MT02 Incremental Delta Load to Staging",
											"dependencyConditions": [
												"Succeeded",
												"Skipped"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into ', item().snowflake_schema,'.','mt02 t \nusing ', \n    item().snowflake_schema,'.','mt02_staging s \non concat(t.mt02_refr, t.mt02_lmdate) = concat(s.mt02_refr, s.mt02_lmdate) \nwhen matched then update set \n\tt.mt02_refr= s.mt02_refr ,\n\tt.mt02_cust= s.mt02_cust ,\n\tt.mt02_site= s.mt02_site ,\n\tt.mt02_serv= s.mt02_serv ,\n\tt.mt02_date =s.mt02_date ,\n\tt.mt02_code= s.mt02_code ,\n\tt.mt02_amnt= s.mt02_amnt ,\n\tt.mt02_desc= s.mt02_desc ,\n\tt.mt02_qty= s.mt02_qty ,\n\tt.mt02_idte= s.mt02_idte ,\n\tt.mt02_rout= s.mt02_rout ,\n\tt.mt02_sequ= s.mt02_sequ ,\n\tt.mt02_rate= s.mt02_rate ,\n\tt.mt02_lmuser= s.mt02_lmuser ,\n\tt.mt02_lmdate= s.mt02_lmdate ,\n\tt.mt02_desc0= s.mt02_desc0 ,\n\tt.mt02_desc1= s.mt02_desc1 ,\n\tt.mt02_desc2= s.mt02_desc2 ,\n\tt.mt02_desc3= s.mt02_desc3 ,\n\tt.mt02_lf05id= s.mt02_lf05id ,\n\tt.mt02_own= s.mt02_own ,\n\tt.mt02_schid= s.mt02_schid,\n\tt.mt02_schidw= s.mt02_schidw ,\n\tt.mt02_fcty= s.mt02_fcty \n\nwhen not matched then insert \n\t(\n\tt.mt02_refr ,\n\tt.mt02_cust ,\n\tt.mt02_site ,\n\tt.mt02_serv ,\n\tt.mt02_date ,\n\tt.mt02_code ,\n\tt.mt02_amnt ,\n\tt.mt02_desc ,\n\tt.mt02_qty ,\n\tt.mt02_idte ,\n\tt.mt02_rout ,\n\tt.mt02_sequ ,\n\tt.mt02_rate ,\n\tt.mt02_lmuser ,\n\tt.mt02_lmdate ,\n\tt.mt02_desc0 ,\n\tt.mt02_desc1 ,\n\tt.mt02_desc2 ,\n\tt.mt02_desc3 ,\n\tt.mt02_lf05id ,\n\tt.mt02_own ,\n\tt.mt02_schid ,\n\tt.mt02_schidw ,\n\tt.mt02_fcty \n\t)\nvalues \n\t(\ns.mt02_refr ,\n\ts.mt02_cust ,\n\ts.mt02_site ,\n\ts.mt02_serv ,\n\ts.mt02_date ,\n\ts.mt02_code ,\n\ts.mt02_amnt ,\n\ts.mt02_desc ,\n\ts.mt02_qty ,\n\ts.mt02_idte ,\n\ts.mt02_rout ,\n\ts.mt02_sequ ,\n\ts.mt02_rate ,\n\ts.mt02_lmuser ,\n\ts.mt02_lmdate ,\n\ts.mt02_desc0 ,\n\ts.mt02_desc1 ,\n\ts.mt02_desc2 ,\n\ts.mt02_desc3 ,\n\ts.mt02_lf05id ,\n\ts.mt02_own ,\n\ts.mt02_schid ,\n\ts.mt02_schidw ,\n\ts.mt02_fcty )'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "SM01 Incremental Delta Load to Staging",
									"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Snowflake Create Staging Tables",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from SM01\nwhere SM01_DATE > DATEADD(day, -7, GETDATE())",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "rm05",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "@concat(item().table_name,'_STAGING')",
												"Snowflake_Schema": {
													"value": "@item().snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "MT02 Incremental Delta Load to Staging",
									"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Snowflake Create Staging Tables",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from MT02\nwhere MT02_DATE > DATEADD(day, -7, GETDATE())",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "mt02",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "@concat(item().table_name,'_STAGING')",
												"Snowflake_Schema": {
													"value": "@item().snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 8
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"LastProcessedId": {
						"type": "string"
					},
					"CurrentDate": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"variables": {
					"tempArray": {
						"type": "Array"
					},
					"TempResult": {
						"type": "Array"
					},
					"ResultsArray": {
						"type": "Array"
					},
					"OutputArray": {
						"type": "Array"
					},
					"append": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-27T21:17:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/MSAZ01')]",
				"[concat(variables('factoryId'), '/linkedServices/LRS_Snowflake_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_INCREMENTAL_LOAD_FACT_NEW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Trux Legacy ID Watermark Lookup",
						"description": "look up schema, database and table names from sqlsever and snowflake",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TRUX_LEGACY_WATERMARK_PVT",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Incremental Loop Over ID Watermark Tables",
						"description": "Activity to loop over tables that have primary keys with incremental IDs. This loops looks at our Watermark table in Snowflake and appends any IDs found in SQL server that are greater than the latest watermark in Snowflake.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Trux Legacy ID Watermark Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Trux Legacy ID Watermark Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DM01p Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select * from DM01P\nwhere DM01P_ID > @{item().DM01P}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM01P_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM01P_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_BATCH",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_BATCH",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GLNU",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_GLNU",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINKID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GROUP",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_GROUP",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM01P",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01P",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05A Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM01p Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select * from DM05A\nwhere DM05A_ID > @{item().DM05A}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05A_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05A",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05A",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05B Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05A Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select * from DM05B\nwhere DM05B_ID > @{item().DM05B}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05B_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ARATEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ARATEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05B",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05B",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05Z Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05B Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select * from DM05Z\nwhere DM05Z_ID > @{item().DM05Z}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05Z_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05Z",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05Z",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "RM07 Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05Z Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select * from RM07\nwhere format(RM07_RDTE,'yyyyMMdd') > @{item().RM07}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "RM07_RDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM07_RDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM07_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_REASON",
														"type": "String"
													},
													"sink": {
														"name": "RM07_REASON",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM07_TIME",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_TIME",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_TRUK",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_TRUK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_ODOM",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_ODOM",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_STIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM07_STIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM07_ETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM07_ETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM07_DRIV",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_DRIV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "RM07",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM07",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"Incremental_Range": {
						"type": "string",
						"defaultValue": "14"
					}
				},
				"variables": {
					"tempArray": {
						"type": "Array"
					},
					"TempResult": {
						"type": "Array"
					},
					"ResultsArray": {
						"type": "Array"
					},
					"OutputArray": {
						"type": "Array"
					},
					"append": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Production/TRUX"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/TRUX_LEGACY01')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_INCREMENTAL_LOAD_FACT_VM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Trux Legacy ID Watermark Lookup",
						"description": "look up schema, database and table names from sqlsever and snowflake",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TRUX_LEGACY_WATERMARK_PVT",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Incremental Loop Over ID Watermark Tables",
						"description": "Activity to loop over tables that have primary keys with incremental IDs. This loops looks at our Watermark table in Snowflake and appends any IDs found in SQL server that are greater than the latest watermark in Snowflake.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Trux Legacy ID Watermark Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Trux Legacy ID Watermark Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DM01p Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM01P\nwhere DM01P_ID > @{item().DM01P}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												},
												"path": "trux"
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM01P_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM01P_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_BATCH",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_BATCH",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GLNU",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_GLNU",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINKID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GROUP",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_GROUP",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM01P",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01P",
												"Snowflake_Schema": "@item().Snowflake_schema"
											}
										}
									]
								},
								{
									"name": "DM05A Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM01p Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05A\nwhere DM05A_ID > @{item().DM05A}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												},
												"path": "trux"
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05A_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05A",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05A",
												"Snowflake_Schema": "@item().Snowflake_schema"
											}
										}
									]
								},
								{
									"name": "DM05B Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05A Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05B\nwhere DM05B_ID > @{item().DM05B}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												},
												"path": "trux"
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05B_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ARATEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ARATEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05B",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05B",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05Z Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05B Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05Z\nwhere DM05Z_ID > @{item().DM05Z}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												},
												"path": "trux"
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05Z_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05Z",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05Z",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Incremental Loop Over Date Watermark Tables",
						"description": "Activity to loop over tables that have no primary keys with incremental IDs, but instead use dates. This loop pulls in the latest N days worth of fact data from these tables and merges them into the source Snowflake fact tables.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Trux Legacy DT Watermark Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Trux Legacy DT Watermark Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Incremental Delta Load to Staging",
									"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Snowflake Create Staging Tables",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'Select * from ',\n    item().sql_db_name,\n    '.dbo.', \n    item().table_name,\n    ' where ',\n    item().table_name,\n    '_date > DATEADD(day, -7, GETDATE())'\n)\n}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "@concat(item().table_name,'_STAGING')",
												"Snowflake_Schema": "@item().snowflake_schema"
											}
										}
									]
								},
								{
									"name": "Snowflake Create Staging Tables",
									"description": "create staging table used to store the delta incremental load. In this staging table, we perform a merge to the main raw table.",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('Create or replace table ', item().Snowflake_schema,'.',item().table_name,'_staging\n    as \n    select * from ', item().Snowflake_schema,'.',item().table_name,\n    ' where 1=0')}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "RM05 Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Incremental Delta Load to Staging",
											"dependencyConditions": [
												"Succeeded",
												"Skipped"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into ', item().Snowflake_schema,'.','RM05 t \nusing ', \n    item().Snowflake_schema,'.','RM05_STAGING s \non concat(t.rm05_rout, t.rm05_seq1,t.rm05_seq2,t.rm05_date) = concat(s.rm05_rout, s.rm05_seq1,s.rm05_seq2,s.rm05_date) \nwhen matched then update set \n    t.rm05_date = s.rm05_date,\n\tt.rm05_rout = s.rm05_rout,\n\tt.rm05_seq1 = s.rm05_seq1, \n\tt.rm05_seq2 = s.rm05_seq2, \n\tt.rm05_truk = s.rm05_truk,\n\tt.rm05_driv = s.rm05_driv,\n\tt.rm05_help = s.rm05_help,\n\tt.rm05_fuel = s.rm05_fuel,\n\tt.rm05_fuom = s.rm05_fuom,\n\tt.rm05_tim1 = s.rm05_tim1,\n\tt.rm05_tim2 = s.rm05_tim2,\n\tt.rm05_odm1 = s.rm05_odm1,\n\tt.rm05_odm2 = s.rm05_odm2,\n\tt.rm05_ouom = s.rm05_ouom,\n\tt.rm05_note = s.rm05_note,\n\tt.rm05_starthour = s.rm05_starthour,\n\tt.rm05_endhour = s.rm05_endhour,\n\tt.rm05_oil = s.rm05_oil,\n\tt.rm05_oil_uom = s.rm05_oil_uom,\n\tt.rm05_deptime = s.rm05_deptime,\n\tt.rm05_rettime = s.rm05_rettime,\n\tt.rm05_starttime= s.rm05_starttime \nwhen not matched then insert \n\t(\n\tt.rm05_date,\n\tt.rm05_rout,\n\tt.rm05_seq1,\n\tt.rm05_seq2,\n\tt.rm05_truk,\n\tt.rm05_driv,\n\tt.rm05_help,\n\tt.rm05_fuel,\n\tt.rm05_fuom,\n\tt.rm05_tim1,\n\tt.rm05_tim2,\n\tt.rm05_odm1,\n\tt.rm05_odm2,\n\tt.rm05_ouom,\n\tt.rm05_note,\n\tt.rm05_starthour,\n\tt.rm05_endhour,\n\tt.rm05_oil,\n\tt.rm05_oil_uom,\n\tt.rm05_deptime,\n\tt.rm05_rettime,\n\tt.rm05_starttime \n\t)\nvalues \n\t(\n\ts.rm05_date,\n\ts.rm05_rout,\n\ts.rm05_seq1, \n\ts.rm05_seq2, \n\ts.rm05_truk,\n\ts.rm05_driv,\n\ts.rm05_help,\n\ts.rm05_fuel,\n\ts.rm05_fuom,\n\ts.rm05_tim1,\n\ts.rm05_tim2,\n\ts.rm05_odm1,\n\ts.rm05_odm2,\n\ts.rm05_ouom,\n\ts.rm05_note,\n\ts.rm05_starthour,\n\ts.rm05_endhour,\n\ts.rm05_oil,\n\ts.rm05_oil_uom,\n\ts.rm05_deptime,\n\ts.rm05_rettime,\n\ts.rm05_starttime)'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Snowflake Drop Staging Tables",
									"description": "after all activities are completed, we perform the drop operation to clean up the snowflake environment",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "RM05 Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('drop table if exists ', item().Snowflake_schema,'.',item().table_name,'_STAGING')}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "Trux Legacy DT Watermark Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "select\n*\nfrom\n  lrs_raw.master_data.vw_trux_legacy_watermark\nwhere\n  watermark_type = 'DT'\n  and\n  latest_watermark is not null",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "Destination",
									"Snowflake_Schema": "Tower_Raw"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 8
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"LastProcessedId": {
						"type": "string"
					},
					"CurrentDate": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"variables": {
					"tempArray": {
						"type": "Array"
					},
					"TempResult": {
						"type": "Array"
					},
					"ResultsArray": {
						"type": "Array"
					},
					"OutputArray": {
						"type": "Array"
					},
					"append": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/TRUX_LEGACY01')]",
				"[concat(variables('factoryId'), '/linkedServices/LRS_Snowflake_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_INCREMENTAL_WKND_LOAD_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Database Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Database Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "RM05 Last ID",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(RM05_ROUT) AS LASTPROCESSEDID FROM @{item().SchemaName}.RM05;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM05",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "SM01 Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "RM05 Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(SM01_LOGID) AS LASTPROCESSEDID FROM @{item().SchemaName}.SM01;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "SM01",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM01 Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "SM01 Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM01_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM01;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM01P Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM01 Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM01P_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM01P;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01P",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM05A_ID Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM01P Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM05A_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM05A;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05A",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM05B Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM05A_ID Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM05B_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM05B;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05B",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM05FT Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM05B Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM05FT_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM05FT;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05FT",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM05Z Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM05FT Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM05Z_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM05Z;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05Z",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "LM02 Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM05Z Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(LM02_NUMB) AS LASTPROCESSEDID FROM @{item().SchemaName}.LM02;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "LM02",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "MT02 Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "LM02 Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(MT02_REFR) AS LASTPROCESSEDID FROM @{item().SchemaName}.MT02;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "MT02",
												"Snowflake_Schema": {
													"value": "@item().SchemaName",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "RM03U Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "MT02 Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(RM03U_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.RM03U;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM03U",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								}
							]
						}
					},
					{
						"name": "Database Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "SELECT 'LRS_RAW' as DatabaseName, TABLE_NAME as TableName,TABLE_SCHEMA as SchemaName\r\nFROM INFORMATION_SCHEMA.TABLES INS\r\nWHERE TABLE_SCHEMA in ('TRUX_CD_COMP_RAW','TRUX_DC_COMP_RAW','TRUX_ES_COMP_RAW','TRUX_HR_COMP_RAW','TRUX_LR_COMP_RAW','TRUX_MC_COMP_RAW','TRUX_MH_COMP_RAW',\r\n    'TRUX_MO_COMP_RAW','TRUX_MP_COMP_RAW','TRUX_MW_COMP_RAW','TRUX_NI_COMP_RAW','TRUX_PS_COMP_RAW','TRUX_RS_COMP_RAW','TRUX_RT_COMP_RAW',\r\n    'TRUX_RZ_COMP_RAW','TRUX_SH_COMP_RAW','TRUX_SW_COMP_RAW','TRUX_TP_COMP_RAW','TRUX_WA_COMP_RAW')\r\n    AND TABLENAME IN ('RM05','SM01','DM01','DM01p','DM05A','DM05B','DM05FT','DM05Z','LM02','MT02','RM03U')\r\norder by table_name;",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LKPWATERMARK_TRUX_LEGACY",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 8
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"LastProcessedId": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_LOGGING_FULL_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Look up LEGACY Logging Tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "SELECT * \r\n  FROM LRS_RAW.MASTER_DATA.LOGGING_LOOKUP_TRUX_COMBINED\r\n WHERE SQL_SERVER_NAME = 'LEGACY';",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "LOGGING_LOOKUP_TRUX_COMBINED",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Loop over LEGACY logging tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Look up LEGACY Logging Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Look up LEGACY Logging Tables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy LEGACY logs",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "SQL_TABLE_NAME",
													"value": {
														"value": "@item().sql_table_name",
														"type": "Expression"
													}
												},
												{
													"name": "SOURCE",
													"value": {
														"value": "@item().snowflake_name",
														"type": "Expression"
													}
												},
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "LOG_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_TYPE",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_TYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LOG_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LOG_USER",
														"type": "String"
													},
													"sink": {
														"name": "LOG_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_TERMID",
														"type": "String"
													},
													"sink": {
														"name": "LOG_TERMID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_NOTES",
														"type": "String"
													},
													"sink": {
														"name": "LOG_NOTES",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_SERV",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_SERV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "LOG_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_FNUM",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_FNUM",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_REAS",
														"type": "String"
													},
													"sink": {
														"name": "LOG_REAS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_AUTH",
														"type": "String"
													},
													"sink": {
														"name": "LOG_AUTH",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "LOG_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LOG_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LOG_CALLID",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_CALLID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_BVAL",
														"type": "String"
													},
													"sink": {
														"name": "LOG_BVAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_AVAL",
														"type": "String"
													},
													"sink": {
														"name": "LOG_AVAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_TASKID",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_TASKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SQL_TABLE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "SQL_TABLE_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SOURCE",
														"type": "String"
													},
													"sink": {
														"name": "SOURCE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": {
													"value": "@item().sql_table_name",
													"type": "Expression"
												},
												"database": "TRUX_LOGGING"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "LEGACY_LOG",
												"Snowflake_Schema": "TRUX_LOGGING_RAW"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					}
				},
				"folder": {
					"name": "Production/TRUX"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/TRUX_LEGACY01')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_LOGGING_INCREMENTAL_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Watermark Lookup for Legacy Logging",
						"description": "Look up schema, database and table names from SQL Server and Snowflake",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TRUX_LEGACY_LOGGING_WATERMARK",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Incremental Loop Over Legacy Watermark Table",
						"description": "Activity to loop over tables that have primary keys with incremental IDs. This loop looks at our Legacy Logging Watermark table in Snowflake and appends any IDs found in SQL Server that are greater than the latest watermark in Snowflake.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Watermark Lookup for Legacy Logging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Watermark Lookup for Legacy Logging').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Legacy Logging Incremental Delta Load",
									"description": "",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "SQL_TABLE_NAME",
													"value": {
														"value": "@item().sql_table_name",
														"type": "Expression"
													}
												},
												{
													"name": "SOURCE",
													"value": {
														"value": "@item().source",
														"type": "Expression"
													}
												},
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "SELECT * \n  FROM @{item().sql_table_name}\n WHERE LOG_ID > @{item().latest_watermark}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "LOG_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_TYPE",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_TYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LOG_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LOG_USER",
														"type": "String"
													},
													"sink": {
														"name": "LOG_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_TERMID",
														"type": "String"
													},
													"sink": {
														"name": "LOG_TERMID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_NOTES",
														"type": "String"
													},
													"sink": {
														"name": "LOG_NOTES",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_SERV",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_SERV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "LOG_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_FNUM",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_FNUM",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_REAS",
														"type": "String"
													},
													"sink": {
														"name": "LOG_REAS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_AUTH",
														"type": "String"
													},
													"sink": {
														"name": "LOG_AUTH",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "LOG_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LOG_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LOG_CALLID",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_CALLID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_BVAL",
														"type": "String"
													},
													"sink": {
														"name": "LOG_BVAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_AVAL",
														"type": "String"
													},
													"sink": {
														"name": "LOG_AVAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_TASKID",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_TASKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SQL_TABLE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "SQL_TABLE_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SOURCE",
														"type": "String"
													},
													"sink": {
														"name": "SOURCE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": {
													"value": "@item().sql_table_name",
													"type": "Expression"
												},
												"database": "TRUX_LOGGING"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "LEGACY_LOG",
												"Snowflake_Schema": "TRUX_LOGGING_RAW"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"Incremental_Range": {
						"type": "int",
						"defaultValue": 14
					}
				},
				"folder": {
					"name": "Production/TRUX"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/TRUX_LEGACY01')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_Test4_9_3_2023')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop Over Tables",
						"description": "activity to loop over array of results which are the tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Trux Legacy table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Trux Legacy table').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Trux Legacy Watermark Lookup",
									"description": "look up schema, database and table names from sqlsever and snowflake",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "select latest_watermark \nfrom MASTER_DATA.VW_TRUX_LEGACY_WATERMARK\nwhere snowflake_schema =  '@{item().snowflake_schema}' \nand table_name =  '@{item().table_name}' ",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "VW_TRUX_LEGACY_WATERMARK",
												"Snowflake_Schema": "MASTER_DATA"
											}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "RM05 Incremental Delta Load to Staging",
									"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Snowflake Create Staging Tables",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * \nfrom RM05\nwhere RM05_DATE > cast('@{activity('Trux Legacy Watermark Lookup').output.firstRow.latest_watermark}' as datetime)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "rm05",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": {
													"value": "@concat(item().table_name,'_STAGING')",
													"type": "Expression"
												},
												"Snowflake_Schema": {
													"value": "@item().snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Snowflake Create Staging Tables",
									"description": "create staging table used to store the delta incremental load. In this staging table, we perform a merge to the main raw table.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Trux Legacy Watermark Lookup",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('Create or replace table ', item().Snowflake_schema,'.',item().table_name,'_staging\n    as \n    select * from ', item().Snowflake_schema,'.',item().table_name,\n    ' where 1=0')}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "RM05 Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "RM05 Incremental Delta Load to Staging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into ', item().Snowflake_schema,'.','RM05_1 t \nusing ', \n    item().Snowflake_schema,'.','RM05_STAGING s \non concat(t.rm05_rout, t.rm05_seq1,t.rm05_seq2,t.rm05_date) = concat(s.rm05_rout, s.rm05_seq1,s.rm05_seq2,s.rm05_date) \nwhen matched then update set \n    t.rm05_date = s.rm05_date,\n\tt.rm05_rout = s.rm05_rout,\n\tt.rm05_seq1 = s.rm05_seq1, \n\tt.rm05_seq2 = s.rm05_seq2, \n\tt.rm05_truk = s.rm05_truk,\n\tt.rm05_driv = s.rm05_driv,\n\tt.rm05_help = s.rm05_help,\n\tt.rm05_fuel = s.rm05_fuel,\n\tt.rm05_fuom = s.rm05_fuom,\n\tt.rm05_tim1 = s.rm05_tim1,\n\tt.rm05_tim2 = s.rm05_tim2,\n\tt.rm05_odm1 = s.rm05_odm1,\n\tt.rm05_odm2 = s.rm05_odm2,\n\tt.rm05_ouom = s.rm05_ouom,\n\tt.rm05_note = s.rm05_note,\n\tt.rm05_starthour = s.rm05_starthour,\n\tt.rm05_endhour = s.rm05_endhour,\n\tt.rm05_oil = s.rm05_oil,\n\tt.rm05_oil_uom = s.rm05_oil_uom,\n\tt.rm05_deptime = s.rm05_deptime,\n\tt.rm05_rettime = s.rm05_rettime,\n\tt.rm05_starttime= s.rm05_starttime \nwhen not matched then insert \n\t(\n\tt.rm05_date,\n\tt.rm05_rout,\n\tt.rm05_seq1,\n\tt.rm05_seq2,\n\tt.rm05_truk,\n\tt.rm05_driv,\n\tt.rm05_help,\n\tt.rm05_fuel,\n\tt.rm05_fuom,\n\tt.rm05_tim1,\n\tt.rm05_tim2,\n\tt.rm05_odm1,\n\tt.rm05_odm2,\n\tt.rm05_ouom,\n\tt.rm05_note,\n\tt.rm05_starthour,\n\tt.rm05_endhour,\n\tt.rm05_oil,\n\tt.rm05_oil_uom,\n\tt.rm05_deptime,\n\tt.rm05_rettime,\n\tt.rm05_starttime \n\t)\nvalues \n\t(\n\ts.rm05_date,\n\ts.rm05_rout,\n\ts.rm05_seq1, \n\ts.rm05_seq2, \n\ts.rm05_truk,\n\ts.rm05_driv,\n\ts.rm05_help,\n\ts.rm05_fuel,\n\ts.rm05_fuom,\n\ts.rm05_tim1,\n\ts.rm05_tim2,\n\ts.rm05_odm1,\n\ts.rm05_odm2,\n\ts.rm05_ouom,\n\ts.rm05_note,\n\ts.rm05_starthour,\n\ts.rm05_endhour,\n\ts.rm05_oil,\n\ts.rm05_oil_uom,\n\ts.rm05_deptime,\n\ts.rm05_rettime,\n\ts.rm05_starttime)'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Snowflake Drop Staging Tables",
									"description": "after all activities are completed, we perform the drop operation to clean up the snowflake environment",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "RM05 Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded",
												"Skipped"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('drop table if exists ', item().Snowflake_schema,'.',item().table_name,'_STAGING')}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "Trux Legacy table",
						"description": "look up schema, database and table names from sqlsever and snowflake",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "select distinct snowflake_schema, sql_db_name, table_name\r\nfrom MASTER_DATA.VW_TRUX_LEGACY_WATERMARK",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TRUX_LEGACY_WATERMARK",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 8
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-27T20:50:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/TRUX_LEGACY01')]",
				"[concat(variables('factoryId'), '/linkedServices/LRS_Snowflake_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_test1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL New Watermark Lkp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "declare @dbname nvarchar(MAX);\ndeclare @filtertable nvarchar(MAX);\ndeclare @sql nvarchar(max);\n\nset @dbname = 'TRUX_CD_COMP,TRUX_DC_COMP,TRUX_ES_COMP,TRUX_HR_COMP,TRUX_LR_COMP,TRUX_MC_COMP,TRUX_MH_COMP,TRUX_MO_COMP,TRUX_MP_COMP,TRUX_MW_COMP,TRUX_NI_COMP,TRUX_PS_COMP,TRUX_RS_COMP,TRUX_RT_COMP,TRUX_RZ_COMP,TRUX_SH_COMP,TRUX_SW_COMP,TRUX_TP_COMP,TRUX_WA_COMP'\nset @filtertable = 'RM05,SM01,DM01,DM01p,DM05A,DM05B,DM05FT,DM05Z,LM02,MT02,RM03U'\n\ncreate table #ConsolidatedTable\n( Dbname nvarchar(max),\nSchemaName nvarchar(max),\nTableName nvarchar(max),\nCreatedDate datetime,\nLastUpdatedDatetime datetime\n);\n\ndeclare @temptable table (DatabaseName nvarchar(128));\n\ninsert into @temptable\nselect value from string_split(@dbname, ',');\n\ndeclare @CurrentDatabase nvarchar(128);\n\ndeclare db_cursor cursor for\nselect DatabaseName\nfrom @temptable\n\n\nopen db_cursor\n\nfetch next from db_cursor into @CurrentDatabase;\n\n\nwhile @@FETCH_STATUS = 0\nbegin\n\tset @sql = N'USE ' + QUOTENAME(@CurrentDatabase) + ';\n\tinsert into #ConsolidatedTable\n\tselect\n\t\t''' + @CurrentDatabase + ''' as DBname,\n\t\tSCHEMA_NAME(schema_id) as SchemaName,\n\t\tname as TableName,\n\t\tCREATE_DATE as CreatedDate,\n\t\tMODIFY_DATE as LastUpdatedDatetime\n\tfrom sys.tables\n\twhere name in (''' + replace(@filtertable, ',',''',''') + ''')\n\torder by name;';\n\n\n\texec sp_executesql @sql;\n\n\tfetch next from db_cursor into @CurrentDatabase;\nEND\n\nclose db_cursor;\ndeallocate db_cursor;\n\nselect * from #ConsolidatedTable",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TRUX_LEGACY01",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "dm01",
									"database": "TRUX_CD_COMP"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Blob Sink New Watermark",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SQL New Watermark Lkp",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Snowflake Old Watermark Lkp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "declare @dbname nvarchar(MAX);\ndeclare @filtertable nvarchar(MAX);\ndeclare @sql nvarchar(max);\n\nset @dbname = 'TRUX_CD_COMP,TRUX_DC_COMP,TRUX_ES_COMP,TRUX_HR_COMP,TRUX_LR_COMP,TRUX_MC_COMP,TRUX_MH_COMP,TRUX_MO_COMP,TRUX_MP_COMP,TRUX_MW_COMP,TRUX_NI_COMP,TRUX_PS_COMP,TRUX_RS_COMP,TRUX_RT_COMP,TRUX_RZ_COMP,TRUX_SH_COMP,TRUX_SW_COMP,TRUX_TP_COMP,TRUX_WA_COMP'\nset @filtertable = 'RM05,SM01,DM01,DM01p,DM05A,DM05B,DM05FT,DM05Z,LM02,MT02,RM03U'\n\ncreate table #ConsolidatedTable\n( Dbname nvarchar(max),\nSchemaName nvarchar(max),\nTableName nvarchar(max),\nCreatedDate datetime,\nLastUpdatedDatetime datetime\n);\n\ndeclare @temptable table (DatabaseName nvarchar(128));\n\ninsert into @temptable\nselect value from string_split(@dbname, ',');\n\ndeclare @CurrentDatabase nvarchar(128);\n\ndeclare db_cursor cursor for\nselect DatabaseName\nfrom @temptable\n\n\nopen db_cursor\n\nfetch next from db_cursor into @CurrentDatabase;\n\n\nwhile @@FETCH_STATUS = 0\nbegin\n\tset @sql = N'USE ' + QUOTENAME(@CurrentDatabase) + ';\n\tinsert into #ConsolidatedTable\n\tselect\n\t\t''' + @CurrentDatabase + ''' as DBname,\n\t\tSCHEMA_NAME(schema_id) as SchemaName,\n\t\tname as TableName,\n\t\tCREATE_DATE as CreatedDate,\n\t\tMODIFY_DATE as LastUpdatedDatetime\n\tfrom sys.tables\n\twhere name in (''' + replace(@filtertable, ',',''',''') + ''')\n\torder by name;';\n\n\n\texec sp_executesql @sql;\n\n\tfetch next from db_cursor into @CurrentDatabase;\nEND\n\nclose db_cursor;\ndeallocate db_cursor;\n\nselect * from #ConsolidatedTable",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							}
						},
						"inputs": [
							{
								"referenceName": "TRUX_LEGACY01",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "dm01",
									"database": "TRUX_CD_COMP"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DESTINATION",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Snowflake Old Watermark Lkp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "SELECT 'LRS_RAW' as DatabaseName, TABLE_NAME as TableName,TABLE_SCHEMA as SchemaName, CREATED as CreatedDate, LAST_ALTERED as LastUpdatedDate\r\nFROM INFORMATION_SCHEMA.TABLES INS\r\nWHERE TABLE_SCHEMA in ('TRUX_CD_COMP_RAW','TRUX_DC_COMP_RAW','TRUX_ES_COMP_RAW','TRUX_HR_COMP_RAW','TRUX_LR_COMP_RAW','TRUX_MC_COMP_RAW','TRUX_MH_COMP_RAW',\r\n    'TRUX_MO_COMP_RAW','TRUX_MP_COMP_RAW','TRUX_MW_COMP_RAW','TRUX_NI_COMP_RAW','TRUX_PS_COMP_RAW','TRUX_RS_COMP_RAW','TRUX_RT_COMP_RAW',\r\n    'TRUX_RZ_COMP_RAW','TRUX_SH_COMP_RAW','TRUX_SW_COMP_RAW','TRUX_TP_COMP_RAW','TRUX_WA_COMP_RAW')\r\nAND TABLENAME IN ('RM05','SM01','DM01','DM01p','DM05A','DM05B','DM05FT','DM05Z','LM02','MT02','RM03U');",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DESTINATION",
									"Snowflake_Schema": "TOWER_RAW"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Replace Old Watermark",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Blob Sink New Watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "SELECT 'LRS_RAW' as DatabaseName, TABLE_NAME as TableName,TABLE_SCHEMA as SchemaName, CREATED as CreatedDate, LAST_ALTERED as LastUpdatedDate\nFROM INFORMATION_SCHEMA.TABLES INS\nWHERE TABLE_SCHEMA in ('TRUX_CD_COMP_RAW','TRUX_DC_COMP_RAW','TRUX_ES_COMP_RAW','TRUX_HR_COMP_RAW','TRUX_LR_COMP_RAW','TRUX_MC_COMP_RAW','TRUX_MH_COMP_RAW',\n    'TRUX_MO_COMP_RAW','TRUX_MP_COMP_RAW','TRUX_MW_COMP_RAW','TRUX_NI_COMP_RAW','TRUX_PS_COMP_RAW','TRUX_RS_COMP_RAW','TRUX_RT_COMP_RAW',\n    'TRUX_RZ_COMP_RAW','TRUX_SH_COMP_RAW','TRUX_SW_COMP_RAW','TRUX_TP_COMP_RAW','TRUX_WA_COMP_RAW')\nAND TABLENAME IN ('RM05','SM01','DM01','DM01p','DM05A','DM05B','DM05FT','DM05Z','LM02','MT02','RM03U');",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							}
						},
						"inputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DESTINATION",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LKPWATERMARK_TRUX_LEGACY",
									"Snowflake_Schema": "MASTER_DATA"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 8
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"DBname": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					},
					"CreatedDate": {
						"type": "string"
					},
					"LastUpdatedDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TRUX_LEGACY01')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_test2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Variable Array Path",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('RM05 LastProcessedID Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "RM05",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(RM05_ROUT) AS LASTPROCESSEDID FROM @{item().SchemaName}.RM05;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM05",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "SetOutputArray",
									"description": "",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "RM05",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "OutputArray",
										"value": {
											"value": "@union(array(concat('[{\"SchemaName\": \"', item().SchemaName, '\", \"TableName\":\"', item().TableName, '\", \"LastProcessedID\": \"', activity('RM05').output.value,'\"}]'))\n, array(concat('[{\"SchemaName\": \"', item().SchemaName, '\", \"TableName\":\"', item().TableName, '\", \"LastProcessedID\": \"', activity('RM05').output.value,'\"}]')))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "AppendArray",
									"description": "",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SetOutputArray",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "append",
										"value": {
											"value": "@union(variables('OutputArray'), array(concat('[{\"SchemaName\": \"', item().SchemaName, '\", \"TableName\":\"', item().TableName, '\", \"LastProcessedID\": \"', activity('RM05').output.value,'\"}]')))",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "RM05 LastProcessedID Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "SELECT  'LRS_RAW' AS DATABASENAME, TABLE_NAME as TableName,TABLE_SCHEMA as SchemaName\r\nFROM INFORMATION_SCHEMA.TABLES INS\r\nWHERE TABLE_SCHEMA in ('TRUX_CD_COMP_RAW','TRUX_DC_COMP_RAW','TRUX_ES_COMP_RAW','TRUX_HR_COMP_RAW','TRUX_LR_COMP_RAW','TRUX_MC_COMP_RAW','TRUX_MH_COMP_RAW',\r\n    'TRUX_MO_COMP_RAW','TRUX_MP_COMP_RAW','TRUX_MW_COMP_RAW','TRUX_NI_COMP_RAW','TRUX_PS_COMP_RAW','TRUX_RS_COMP_RAW','TRUX_RT_COMP_RAW',\r\n    'TRUX_RZ_COMP_RAW','TRUX_SH_COMP_RAW','TRUX_SW_COMP_RAW','TRUX_TP_COMP_RAW','TRUX_WA_COMP_RAW')\r\n    AND TABLENAME IN ('RM05','SM01','DM01','DM01p','DM05A','DM05B','DM05FT','DM05Z','LM02','MT02','RM03U')\r\norder by table_name;",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LKPWATERMARK_TRUX_LEGACY",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set Variable Array Path",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "RM05 LastProcessedID Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ResultsArray",
							"value": []
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 8
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"LastProcessedId": {
						"type": "string"
					},
					"CurrentDate": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"variables": {
					"tempArray": {
						"type": "Array"
					},
					"TempResult": {
						"type": "Array"
					},
					"ResultsArray": {
						"type": "Array"
					},
					"OutputArray": {
						"type": "Array"
					},
					"append": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_test3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Database Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Database Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "RM05 Last ID",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(RM05_ROUT) AS LASTPROCESSEDID FROM @{item().SchemaName}.RM05;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM05",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "SM01 Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "RM05 Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(SM01_LOGID) AS LASTPROCESSEDID FROM @{item().SchemaName}.SM01;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "SM01",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM01 Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "SM01 Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM01_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM01;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM01P Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM01 Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM01P_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM01P;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01P",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM05A_ID Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM01P Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM05A_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM05A;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05A",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM05B Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM05A_ID Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM05B_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM05B;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05B",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM05FT Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM05B Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM05FT_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM05FT;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05FT",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM05Z Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM05FT Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM05Z_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM05Z;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05Z",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "LM02 Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM05Z Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(LM02_NUMB) AS LASTPROCESSEDID FROM @{item().SchemaName}.LM02;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "LM02",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "MT02 Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "LM02 Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(MT02_REFR) AS LASTPROCESSEDID FROM @{item().SchemaName}.MT02;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "MT02",
												"Snowflake_Schema": {
													"value": "@item().SchemaName",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "RM03U Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "MT02 Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(RM03U_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.RM03U;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM03U",
												"Snowflake_Schema": {
													"value": "@item().SchemaName",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								}
							]
						}
					},
					{
						"name": "Database Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "SELECT 'LRS_RAW' as DatabaseName, TABLE_NAME as TableName,TABLE_SCHEMA as SchemaName\r\nFROM INFORMATION_SCHEMA.TABLES INS\r\nWHERE TABLE_SCHEMA in ('TRUX_CD_COMP_RAW','TRUX_DC_COMP_RAW','TRUX_ES_COMP_RAW','TRUX_HR_COMP_RAW','TRUX_LR_COMP_RAW','TRUX_MC_COMP_RAW','TRUX_MH_COMP_RAW',\r\n    'TRUX_MO_COMP_RAW','TRUX_MP_COMP_RAW','TRUX_MW_COMP_RAW','TRUX_NI_COMP_RAW','TRUX_PS_COMP_RAW','TRUX_RS_COMP_RAW','TRUX_RT_COMP_RAW',\r\n    'TRUX_RZ_COMP_RAW','TRUX_SH_COMP_RAW','TRUX_SW_COMP_RAW','TRUX_TP_COMP_RAW','TRUX_WA_COMP_RAW')\r\n    AND TABLENAME IN ('RM05','SM01','DM01','DM01p','DM05A','DM05B','DM05FT','DM05Z','LM02','MT02','RM03U')\r\norder by table_name;",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LKPWATERMARK_TRUX_LEGACY",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 8
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"LastProcessedId": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_test_DM01_IdWM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DM01 Watermark Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "select\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.dm01;",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LKPWATERMARK_TRUX_LEGACY",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "DM01 Watermark Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('DM01 Watermark Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from @{item().table_name}\nwhere dm01_id > '@{item().LATEST_WATERMARK}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"database": {
													"value": "@item().Sql_db_name",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from @{item().table_name}\nwhere dm01_id > '@{item().LATEST_WATERMARK}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"database": {
													"value": "@item().Sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "@concat(item().table_name,'_1')",
												"Snowflake_Schema": "@item().snowflake_schema"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 8
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"LastProcessedId": {
						"type": "string"
					},
					"CurrentDate": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"variables": {
					"tempArray": {
						"type": "Array"
					},
					"TempResult": {
						"type": "Array"
					},
					"ResultsArray": {
						"type": "Array"
					},
					"OutputArray": {
						"type": "Array"
					},
					"append": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/TRUX_LEGACY01')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_test_RM05_DateWM_FirstRun')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RM05 Watermark Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "select\r\n'TRUX_DC_COMP' as SQL_DB_Name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_Schema,\r\n'RM05' as table_name,\r\ncast(max(RM05_DATE)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as SQL_DB_Name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_Schema,\r\n'RM05' as table_name,\r\ncast(max(RM05_DATE)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.rm05;",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LKPWATERMARK_TRUX_LEGACY",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "RM05 Watermark Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('RM05 Watermark Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "RM05 Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from @{item().table_name}\nwhere RM05_DATE > cast('@{item().LATEST_WATERMARK}' as datetime)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"database": {
													"value": "@item().Sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "@concat(item().table_name,'_1')",
												"Snowflake_Schema": "@item().snowflake_schema"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 8
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"LastProcessedId": {
						"type": "string"
					},
					"CurrentDate": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"variables": {
					"tempArray": {
						"type": "Array"
					},
					"TempResult": {
						"type": "Array"
					},
					"ResultsArray": {
						"type": "Array"
					},
					"OutputArray": {
						"type": "Array"
					},
					"append": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/TRUX_LEGACY01')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_MASTER_DATA_FULL_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy LEGACY SY03 table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.MASTER_DATA.LEGACY_SY03;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SY03_CODE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_NAME",
											"type": "String"
										},
										"sink": {
											"name": "SY03_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ADD1",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ADD1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ADD2",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ADD2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CITY",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CITY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_STAT",
											"type": "String"
										},
										"sink": {
											"name": "SY03_STAT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PZIP",
											"type": "String"
										},
										"sink": {
											"name": "SY03_PZIP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_COUN",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_COUN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_PHON",
											"type": "String"
										},
										"sink": {
											"name": "SY03_PHON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_FAX",
											"type": "String"
										},
										"sink": {
											"name": "SY03_FAX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_EMAIL",
											"type": "String"
										},
										"sink": {
											"name": "SY03_EMAIL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_WEBSITE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_WEBSITE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DB",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DB",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFC",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DEFC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFS",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DEFS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF1",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF2",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF3",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF3",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF4",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF4",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PRTNAME",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_PRTNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PRTSTATCAP",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_PRTSTATCAP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CHGINTEREST",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CHGINTEREST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CURR",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CURR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CREDITLIMIT",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CREDITLIMIT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PARSED",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_PARSED",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_AUTOSITE",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_AUTOSITE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_INVSEQ1",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_INVSEQ1",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_INVSEQ2",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_INVSEQ2",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_BALO",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_BALO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_BILLTO",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_BILLTO",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_GTWCFGID",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_GTWCFGID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_MERCHID",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_MERCHID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_DBVERSION",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DBVERSION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ACCTAPP",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ACCTAPP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ACCTFILE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ACCTFILE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_HWR",
											"type": "String"
										},
										"sink": {
											"name": "SY03_HWR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_AUTOLOADFILE",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_AUTOLOADFILE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REFN",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REFN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_VUOM",
											"type": "String"
										},
										"sink": {
											"name": "SY03_VUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SITETYPE",
											"type": "Byte"
										},
										"sink": {
											"name": "SY03_SITETYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_WOCOPIES",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_WOCOPIES",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_ENCVER",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_ENCVER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_NAT",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_NAT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_MOBID",
											"type": "String"
										},
										"sink": {
											"name": "SY03_MOBID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REINSCHECKDTE",
											"type": "DateTime"
										},
										"sink": {
											"name": "SY03_REINSCHECKDTE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "SY03_AUTOHMPAGE",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_AUTOHMPAGE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SNDFLDR",
											"type": "String"
										},
										"sink": {
											"name": "SY03_SNDFLDR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_RECFLDR",
											"type": "String"
										},
										"sink": {
											"name": "SY03_RECFLDR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_FMMASTER",
											"type": "String"
										},
										"sink": {
											"name": "SY03_FMMASTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_GPSFOLDER",
											"type": "String"
										},
										"sink": {
											"name": "SY03_GPSFOLDER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFPA",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DEFPA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF5",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF5",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_LOCK",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_LOCK",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_WOSHOWMSG",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_WOSHOWMSG",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CASH",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_CASH",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CASHT",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CASHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_OverdueLetter",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_OVERDUELETTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_AttachOverdueLetter",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ATTACHOVERDUELETTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_AttachFolderOverdueLetter",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ATTACHFOLDEROVERDUELETTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_INVOICEORDER",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_INVOICEORDER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_LEED",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_LEED",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_TUOM",
											"type": "String"
										},
										"sink": {
											"name": "SY03_TUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_WARRONTRUK",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_WARRONTRUK",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_LABELPRINTER",
											"type": "String"
										},
										"sink": {
											"name": "SY03_LABELPRINTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_LABELHEIGHT",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_LABELHEIGHT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_LABELWIDTH",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_LABELWIDTH",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_ATTACHINDB",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ATTACHINDB",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_FILESIZE",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_FILESIZE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_NOTE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_NOTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CHGCODE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CHGCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CHGRATE",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_CHGRATE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_GLNU",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_GLNU",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_LANDFILL",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_LANDFILL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_TRANSFER",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_TRANSFER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_MRF",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_MRF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_COMPOST",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_COMPOST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_VEGAS",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_VEGAS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_RSI",
											"type": "String"
										},
										"sink": {
											"name": "SY03_RSI",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REASON",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REASON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CLASS",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CLASS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SITE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_SITE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REINSTATEREASON",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REINSTATEREASON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REPRINTREASON",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_REPRINTREASON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_RRNMAP",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_RRNMAP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_VALC",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_VALC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_LANGUAGE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_LANGUAGE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF6",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF6",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sy03_lmargin",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_LMARGIN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_DefaultAttachFolder",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEFAULTATTACHFOLDER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PRINTBILLPARAM",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_PRINTBILLPARAM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CONTYPE",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_CONTYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CONAMT",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_CONAMT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CONUSE",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CONUSE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DOWNTIMESTARTEND",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DOWNTIMESTARTEND",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ROLABORTIMESPAN",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ROLABORTIMESPAN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_USEGMAP",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_USEGMAP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SHOWPARTSUBSYSTEM",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_SHOWPARTSUBSYSTEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_QTDWARN",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_QTDWARN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_QTDSTOP",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_QTDSTOP",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CREDITMEMO",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CREDITMEMO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ADJAPPV",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ADJAPPV",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_NOTIFYUSER",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_NOTIFYUSER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SHOWRATE",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_SHOWRATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ASSETTRANSFER",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ASSETTRANSFER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_TEST",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_TEST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SchedCallsToRouteFromSC",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_SCHEDCALLSTOROUTEFROMSC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_EmailRSToDriver",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_EMAILRSTODRIVER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFCUSTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEFCUSTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_NO0MINIWARNINGFORINTERC",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_NO0MINIWARNINGFORINTERC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PRINTPRICES",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_PRINTPRICES",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_MAXODOMETER",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_MAXODOMETER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_MAXENGINEHOURS",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_MAXENGINEHOURS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_ADDCALLTOEND",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ADDCALLTOEND",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ALLOWCHGHELDTKT",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ALLOWCHGHELDTKT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMADD1",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMADD1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMADD2",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMADD2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMCITY",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMCITY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMSTAT",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMSTAT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMPZIP",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMPZIP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMCOUN",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_REMCOUN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_REMPHON",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMPHON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMFAX",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMFAX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMEMAIL",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMEMAIL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ADJTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ADJTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ADVDAYS",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_ADVDAYS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_RMINTERFACE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_RMINTERFACE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_EXPORTPATH",
											"type": "String"
										},
										"sink": {
											"name": "SY03_EXPORTPATH",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_IMPORTPATH",
											"type": "String"
										},
										"sink": {
											"name": "SY03_IMPORTPATH",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_RMURL",
											"type": "String"
										},
										"sink": {
											"name": "SY03_RMURL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_USERNAME",
											"type": "String"
										},
										"sink": {
											"name": "SY03_USERNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PASSWORD",
											"type": "String"
										},
										"sink": {
											"name": "SY03_PASSWORD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_RMAPIKEY",
											"type": "String"
										},
										"sink": {
											"name": "SY03_RMAPIKEY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_MANINVSURCHG",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_MANINVSURCHG",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_QUICKSEARCHAUTOFILL",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_QUICKSEARCHAUTOFILL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_USDOT",
											"type": "String"
										},
										"sink": {
											"name": "SY03_USDOT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_TENDERAMNTREQUIRED",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_TENDERAMNTREQUIRED",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_STORECVV2",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_STORECVV2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFAULTPAYTERMS",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_DEFAULTPAYTERMS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_NOJOBAFTER",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_NOJOBAFTER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CONTDREADONLY",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CONTDREADONLY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CONTRATETYPE",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_CONTRATETYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_FORCEFACILITYSELECTION",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_FORCEFACILITYSELECTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_AttachImageToInvoiceDefault",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ATTACHIMAGETOINVOICEDEFAULT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CCPROCFEEDEFAULTNEWCUST",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CCPROCFEEDEFAULTNEWCUST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CCPROCFEEADJREASON",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CCPROCFEEADJREASON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CCPROCFEEGLACCOUNT",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CCPROCFEEGLACCOUNT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CCPROCFEERATE",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_CCPROCFEERATE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CCPROCFEEDESC",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CCPROCFEEDESC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFTAX",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DEFTAX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SYNCINTERVAL",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_SYNCINTERVAL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_GLINVFAC",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_GLINVFAC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_APPLCUSTORIG",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_APPLCUSTORIG",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEMNONWORK",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DEMNONWORK",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sy03_tokenmerchant",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_TOKENMERCHANT",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "TRUX_LEGACY01",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "SY03",
									"database": "TRUX_DATA"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "LEGACY_SY03",
									"Snowflake_Schema": "MASTER_DATA"
								}
							}
						]
					},
					{
						"name": "Copy MIDWEST SY03 table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.MASTER_DATA.MIDWEST_SY03;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SY03_CODE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_NAME",
											"type": "String"
										},
										"sink": {
											"name": "SY03_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ADD1",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ADD1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ADD2",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ADD2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CITY",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CITY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_STAT",
											"type": "String"
										},
										"sink": {
											"name": "SY03_STAT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PZIP",
											"type": "String"
										},
										"sink": {
											"name": "SY03_PZIP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_COUN",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_COUN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_PHON",
											"type": "String"
										},
										"sink": {
											"name": "SY03_PHON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_FAX",
											"type": "String"
										},
										"sink": {
											"name": "SY03_FAX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_EMAIL",
											"type": "String"
										},
										"sink": {
											"name": "SY03_EMAIL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_WEBSITE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_WEBSITE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DB",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DB",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFC",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DEFC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFS",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DEFS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF1",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF2",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF3",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF3",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF4",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF4",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PRTNAME",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_PRTNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PRTSTATCAP",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_PRTSTATCAP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CHGINTEREST",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CHGINTEREST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CURR",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CURR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CREDITLIMIT",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CREDITLIMIT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PARSED",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_PARSED",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_AUTOSITE",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_AUTOSITE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_INVSEQ1",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_INVSEQ1",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_INVSEQ2",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_INVSEQ2",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_BALO",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_BALO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_BILLTO",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_BILLTO",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_GTWCFGID",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_GTWCFGID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_MERCHID",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_MERCHID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_DBVERSION",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DBVERSION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ACCTAPP",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ACCTAPP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ACCTFILE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ACCTFILE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_HWR",
											"type": "String"
										},
										"sink": {
											"name": "SY03_HWR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_AUTOLOADFILE",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_AUTOLOADFILE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REFN",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REFN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_VUOM",
											"type": "String"
										},
										"sink": {
											"name": "SY03_VUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SITETYPE",
											"type": "Byte"
										},
										"sink": {
											"name": "SY03_SITETYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_WOCOPIES",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_WOCOPIES",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_ENCVER",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_ENCVER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_NAT",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_NAT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_MOBID",
											"type": "String"
										},
										"sink": {
											"name": "SY03_MOBID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REINSCHECKDTE",
											"type": "DateTime"
										},
										"sink": {
											"name": "SY03_REINSCHECKDTE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "SY03_AUTOHMPAGE",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_AUTOHMPAGE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SNDFLDR",
											"type": "String"
										},
										"sink": {
											"name": "SY03_SNDFLDR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_RECFLDR",
											"type": "String"
										},
										"sink": {
											"name": "SY03_RECFLDR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_FMMASTER",
											"type": "String"
										},
										"sink": {
											"name": "SY03_FMMASTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_GPSFOLDER",
											"type": "String"
										},
										"sink": {
											"name": "SY03_GPSFOLDER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFPA",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DEFPA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF5",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF5",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_LOCK",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_LOCK",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_WOSHOWMSG",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_WOSHOWMSG",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CASH",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_CASH",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CASHT",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CASHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_OverdueLetter",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_OVERDUELETTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_AttachOverdueLetter",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ATTACHOVERDUELETTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_AttachFolderOverdueLetter",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ATTACHFOLDEROVERDUELETTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_INVOICEORDER",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_INVOICEORDER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_LEED",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_LEED",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_TUOM",
											"type": "String"
										},
										"sink": {
											"name": "SY03_TUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_WARRONTRUK",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_WARRONTRUK",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_LABELPRINTER",
											"type": "String"
										},
										"sink": {
											"name": "SY03_LABELPRINTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_LABELHEIGHT",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_LABELHEIGHT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_LABELWIDTH",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_LABELWIDTH",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_ATTACHINDB",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ATTACHINDB",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_FILESIZE",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_FILESIZE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_NOTE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_NOTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CHGCODE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CHGCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CHGRATE",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_CHGRATE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_GLNU",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_GLNU",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_LANDFILL",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_LANDFILL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_TRANSFER",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_TRANSFER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_MRF",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_MRF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_COMPOST",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_COMPOST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_VEGAS",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_VEGAS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_RSI",
											"type": "String"
										},
										"sink": {
											"name": "SY03_RSI",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REASON",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REASON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CLASS",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CLASS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SITE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_SITE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REINSTATEREASON",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REINSTATEREASON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REPRINTREASON",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_REPRINTREASON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_RRNMAP",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_RRNMAP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_VALC",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_VALC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_LANGUAGE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_LANGUAGE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF6",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF6",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sy03_lmargin",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_LMARGIN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_DefaultAttachFolder",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEFAULTATTACHFOLDER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PRINTBILLPARAM",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_PRINTBILLPARAM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CONTYPE",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_CONTYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CONAMT",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_CONAMT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CONUSE",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CONUSE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DOWNTIMESTARTEND",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DOWNTIMESTARTEND",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ROLABORTIMESPAN",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ROLABORTIMESPAN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_USEGMAP",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_USEGMAP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SHOWPARTSUBSYSTEM",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_SHOWPARTSUBSYSTEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_QTDWARN",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_QTDWARN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_QTDSTOP",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_QTDSTOP",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CREDITMEMO",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CREDITMEMO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ADJAPPV",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ADJAPPV",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_NOTIFYUSER",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_NOTIFYUSER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SHOWRATE",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_SHOWRATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ASSETTRANSFER",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ASSETTRANSFER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_TEST",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_TEST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SchedCallsToRouteFromSC",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_SCHEDCALLSTOROUTEFROMSC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_EmailRSToDriver",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_EMAILRSTODRIVER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFCUSTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEFCUSTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_NO0MINIWARNINGFORINTERC",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_NO0MINIWARNINGFORINTERC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PRINTPRICES",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_PRINTPRICES",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_MAXODOMETER",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_MAXODOMETER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_MAXENGINEHOURS",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_MAXENGINEHOURS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_ADDCALLTOEND",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ADDCALLTOEND",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ALLOWCHGHELDTKT",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ALLOWCHGHELDTKT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMADD1",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMADD1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMADD2",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMADD2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMCITY",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMCITY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMSTAT",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMSTAT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMPZIP",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMPZIP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMCOUN",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_REMCOUN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_REMPHON",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMPHON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMFAX",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMFAX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMEMAIL",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMEMAIL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ADJTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ADJTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ADVDAYS",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_ADVDAYS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_RMINTERFACE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_RMINTERFACE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_EXPORTPATH",
											"type": "String"
										},
										"sink": {
											"name": "SY03_EXPORTPATH",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_IMPORTPATH",
											"type": "String"
										},
										"sink": {
											"name": "SY03_IMPORTPATH",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_RMURL",
											"type": "String"
										},
										"sink": {
											"name": "SY03_RMURL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_USERNAME",
											"type": "String"
										},
										"sink": {
											"name": "SY03_USERNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PASSWORD",
											"type": "String"
										},
										"sink": {
											"name": "SY03_PASSWORD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_RMAPIKEY",
											"type": "String"
										},
										"sink": {
											"name": "SY03_RMAPIKEY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_MANINVSURCHG",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_MANINVSURCHG",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_QUICKSEARCHAUTOFILL",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_QUICKSEARCHAUTOFILL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_USDOT",
											"type": "String"
										},
										"sink": {
											"name": "SY03_USDOT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_TENDERAMNTREQUIRED",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_TENDERAMNTREQUIRED",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_STORECVV2",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_STORECVV2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFAULTPAYTERMS",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_DEFAULTPAYTERMS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_NOJOBAFTER",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_NOJOBAFTER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CONTDREADONLY",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CONTDREADONLY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CONTRATETYPE",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_CONTRATETYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_FORCEFACILITYSELECTION",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_FORCEFACILITYSELECTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_AttachImageToInvoiceDefault",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ATTACHIMAGETOINVOICEDEFAULT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CCPROCFEEDEFAULTNEWCUST",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CCPROCFEEDEFAULTNEWCUST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CCPROCFEEADJREASON",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CCPROCFEEADJREASON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CCPROCFEEGLACCOUNT",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CCPROCFEEGLACCOUNT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CCPROCFEERATE",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_CCPROCFEERATE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CCPROCFEEDESC",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CCPROCFEEDESC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFTAX",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DEFTAX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SYNCINTERVAL",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_SYNCINTERVAL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_GLINVFAC",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_GLINVFAC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_APPLCUSTORIG",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_APPLCUSTORIG",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEMNONWORK",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DEMNONWORK",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sy03_tokenmerchant",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_TOKENMERCHANT",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "SY03",
									"database": "TRUX_DATA"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "MIDWEST_SY03",
									"Snowflake_Schema": "MASTER_DATA"
								}
							}
						]
					},
					{
						"name": "Copy MIDWEST USER table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.MASTER_DATA.MIDWEST_USER;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "USER_CODE",
											"type": "String"
										},
										"sink": {
											"name": "USER_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "USER_FNAME",
											"type": "String"
										},
										"sink": {
											"name": "USER_FNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "USER_LNAME",
											"type": "String"
										},
										"sink": {
											"name": "USER_LNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "USER_EMAIL",
											"type": "String"
										},
										"sink": {
											"name": "USER_EMAIL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "USER_DISABLED",
											"type": "Boolean"
										},
										"sink": {
											"name": "USER_DISABLED",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "USER_EMPLOYEEID",
											"type": "String"
										},
										"sink": {
											"name": "USER_EMPLOYEEID",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "USER",
									"database": "TRUX_DATA"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "MIDWEST_USER",
									"Snowflake_Schema": "MASTER_DATA"
								}
							}
						]
					},
					{
						"name": "Copy LEGACY USER table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.MASTER_DATA.LEGACY_USER;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "USER_CODE",
											"type": "String"
										},
										"sink": {
											"name": "USER_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "USER_FNAME",
											"type": "String"
										},
										"sink": {
											"name": "USER_FNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "USER_LNAME",
											"type": "String"
										},
										"sink": {
											"name": "USER_LNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "USER_EMAIL",
											"type": "String"
										},
										"sink": {
											"name": "USER_EMAIL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "USER_DISABLED",
											"type": "Boolean"
										},
										"sink": {
											"name": "USER_DISABLED",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "USER_EMPLOYEEID",
											"type": "String"
										},
										"sink": {
											"name": "USER_EMPLOYEEID",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "TRUX_LEGACY01",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "USER",
									"database": "TRUX_DATA"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "LEGACY_USER",
									"Snowflake_Schema": "MASTER_DATA"
								}
							}
						]
					},
					{
						"name": "Copy MIDWEST ONLINE ACCT table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT [OPACCOUNT_ID]\n, [OPACCOUNT_EMAIL]\n, [OPACCOUNT_REGISDTE]\n, os.[OPACCESS_ID]\n, [OPACCESS_COMP]\n, [OPACCESS_CUST]\n, [OPACCESS_SITE]\n, [OPACCESS_ACTIVEDTE]\n, [OPACCESS_DEACTIVEDTE]\nFROM [OPACCOUNT] ot\nINNER JOIN [OPACCESS] os\nON [OPACCOUNT_ID] = [OPACCESS_LINK]\nINNER JOIN (SELECT MAX([OPACCESS_ID]) AS [OPACCESS_ID]\n\t\t      FROM [OPACCESS]\n\t\t\t GROUP BY OPACCESS_LINK) AS latest\nON os.[OPACCESS_ID] = latest.[OPACCESS_ID];",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.MASTER_DATA.MIDWEST_ONLINE_ACCT;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "OPACCOUNT_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "OPACCOUNT_ID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OPACCOUNT_EMAIL",
											"type": "String"
										},
										"sink": {
											"name": "OPACCOUNT_EMAIL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OPACCOUNT_REGISDTE",
											"type": "DateTime"
										},
										"sink": {
											"name": "OPACCOUNT_REGISDTE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "OPACCESS_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "OPACCESS_ID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OPACCESS_COMP",
											"type": "String"
										},
										"sink": {
											"name": "OPACCESS_COMP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OPACCESS_CUST",
											"type": "Int32"
										},
										"sink": {
											"name": "OPACCESS_CUST",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OPACCESS_SITE",
											"type": "Int32"
										},
										"sink": {
											"name": "OPACCESS_SITE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OPACCESS_ACTIVEDTE",
											"type": "DateTime"
										},
										"sink": {
											"name": "OPACCESS_ACTIVEDTE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "OPACCESS_DEACTIVEDTE",
											"type": "DateTime"
										},
										"sink": {
											"name": "OPACCESS_DEACTIVEDTE",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "OPACCOUNT",
									"database": "TRUX_DATA"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "MIDWEST_ONLINE_ACCT",
									"Snowflake_Schema": "MASTER_DATA"
								}
							}
						]
					},
					{
						"name": "Copy LEGACY ONLINE ACCT table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT [OPACCOUNT_ID]\n, [OPACCOUNT_EMAIL]\n, [OPACCOUNT_REGISDTE]\n, os.[OPACCESS_ID]\n, [OPACCESS_COMP]\n, [OPACCESS_CUST]\n, [OPACCESS_SITE]\n, [OPACCESS_ACTIVEDTE]\n, [OPACCESS_DEACTIVEDTE]\nFROM [OPACCOUNT] ot\nINNER JOIN [OPACCESS] os\nON [OPACCOUNT_ID] = [OPACCESS_LINK]\nINNER JOIN (SELECT MAX([OPACCESS_ID]) AS [OPACCESS_ID]\n\t\t      FROM [OPACCESS]\n\t\t\t GROUP BY OPACCESS_LINK) AS latest\nON os.[OPACCESS_ID] = latest.[OPACCESS_ID];",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.MASTER_DATA.LEGACY_ONLINE_ACCT;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "OPACCOUNT_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "OPACCOUNT_ID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OPACCOUNT_EMAIL",
											"type": "String"
										},
										"sink": {
											"name": "OPACCOUNT_EMAIL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OPACCOUNT_REGISDTE",
											"type": "DateTime"
										},
										"sink": {
											"name": "OPACCOUNT_REGISDTE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "OPACCESS_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "OPACCESS_ID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OPACCESS_COMP",
											"type": "String"
										},
										"sink": {
											"name": "OPACCESS_COMP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OPACCESS_CUST",
											"type": "Int32"
										},
										"sink": {
											"name": "OPACCESS_CUST",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OPACCESS_SITE",
											"type": "Int32"
										},
										"sink": {
											"name": "OPACCESS_SITE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OPACCESS_ACTIVEDTE",
											"type": "DateTime"
										},
										"sink": {
											"name": "OPACCESS_ACTIVEDTE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "OPACCESS_DEACTIVEDTE",
											"type": "DateTime"
										},
										"sink": {
											"name": "OPACCESS_DEACTIVEDTE",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "TRUX_LEGACY01",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "OPACCOUNT",
									"database": "TRUX_DATA"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "LEGACY_ONLINE_ACCT",
									"Snowflake_Schema": "MASTER_DATA"
								}
							}
						]
					},
					{
						"name": "Copy LEGACY AN_ROUTE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.MASTER_DATA.LEGACY_AN_ROUTE;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AN_ROUTE_ROUTE",
											"type": "String"
										},
										"sink": {
											"name": "AN_ROUTE_ROUTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AN_ROUTE_COMPANY",
											"type": "String"
										},
										"sink": {
											"name": "AN_ROUTE_COMPANY",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "TRUX_LEGACY01",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "AN_ROUTE",
									"database": "TRUX_DATA"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "LEGACY_AN_ROUTE",
									"Snowflake_Schema": "MASTER_DATA"
								}
							}
						]
					},
					{
						"name": "Copy MIDWEST AN_ROUTE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.MASTER_DATA.MIDWEST_AN_ROUTE;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AN_ROUTE_ROUTE",
											"type": "String"
										},
										"sink": {
											"name": "AN_ROUTE_ROUTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AN_ROUTE_COMPANY",
											"type": "String"
										},
										"sink": {
											"name": "AN_ROUTE_COMPANY",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "AN_ROUTE",
									"database": "TRUX_DATA"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "MIDWEST_AN_ROUTE",
									"Snowflake_Schema": "MASTER_DATA"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Production/TRUX"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TRUX_LEGACY01')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/MSAZ01')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_MIDWEST_DATA_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Database Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Database Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy SL01",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.SL01')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SL01_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "SL01_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SL01_NAME",
														"type": "String"
													},
													"sink": {
														"name": "SL01_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_ADDS",
														"type": "String"
													},
													"sink": {
														"name": "SL01_ADDS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_CITY",
														"type": "String"
													},
													"sink": {
														"name": "SL01_CITY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_STAT",
														"type": "String"
													},
													"sink": {
														"name": "SL01_STAT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_PZIP",
														"type": "String"
													},
													"sink": {
														"name": "SL01_PZIP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_LATT",
														"type": "Decimal"
													},
													"sink": {
														"name": "SL01_LATT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SL01_LONG",
														"type": "Decimal"
													},
													"sink": {
														"name": "SL01_LONG",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SL01_ACTIVE",
														"type": "Boolean"
													},
													"sink": {
														"name": "SL01_ACTIVE",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "SL01",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "SL01",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								},
								{
									"name": "Copy SP03",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy SL01",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.SP03')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SP03_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SP03_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SP03_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SP03_REFE",
														"type": "String"
													},
													"sink": {
														"name": "SP03_REFE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SP03_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_SITE",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "SP03",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "SP03",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								},
								{
									"name": "Copy CC02",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy SP03",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT \r\n      [CC02_CUST]\r\n      ,[CC02_SITE]\r\n      ,[CC02_TYPE]\r\n      , NULL AS [CC02_NUMBER]\r\n      ,[CC02_EXPMO]\r\n      ,[CC02_EXPYE]\r\n      , NULL AS [CC02_CVV2]\r\n      ,[CC02_HFNAME]\r\n      ,[CC02_HLNAME]\r\n      ,[CC02_HADD]\r\n      ,[CC02_HCITY]\r\n      ,[CC02_HSTAT]\r\n      ,[CC02_HZIP]\r\n      ,[CC02_HCOUN]\r\n      ,[CC02_HPHON]\r\n      ,[CC02_HEMAIL]\r\n      ,[CC02_ACTIVE]\r\n      ,[CC02_CHRGTYPE]\r\n      ,[CC02_ID]\r\n      , NULL AS [CC02_ROUTNUM]\r\n      ,[CC02_ACCTYPE]\r\n      ,[CC02_BANKN]\r\n      ,[CC02_LICNUM]\r\n      ,[CC02_LICSTAT]\r\n      ,[CC02_DOB]\r\n      ,[CC02_ACCNAME]\r\n      ,[CC02_TOKEN]\r\n      ,[CC02_ACCOUNTTYPE]\r\nFROM \r\n      dbo.CC02",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.CC02')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "CC02_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CC02_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CC02_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_NUMBER",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_NUMBER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_EXPMO",
														"type": "String"
													},
													"sink": {
														"name": "CC02_EXPMO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_EXPYE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_EXPYE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_CVV2",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_CVV2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HFNAME",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HFNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HLNAME",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HLNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HADD",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HADD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HCITY",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HCITY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HSTAT",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HSTAT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HZIP",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HZIP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HCOUN",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HCOUN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HPHON",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HPHON",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HEMAIL",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HEMAIL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_ACTIVE",
														"type": "Boolean"
													},
													"sink": {
														"name": "CC02_ACTIVE",
														"type": "Boolean"
													}
												},
												{
													"source": {
														"name": "CC02_CHRGTYPE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_CHRGTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CC02_ROUTNUM",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_ROUTNUM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_ACCTYPE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_ACCTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_BANKN",
														"type": "String"
													},
													"sink": {
														"name": "CC02_BANKN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_LICNUM",
														"type": "String"
													},
													"sink": {
														"name": "CC02_LICNUM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_LICSTAT",
														"type": "String"
													},
													"sink": {
														"name": "CC02_LICSTAT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_DOB",
														"type": "DateTime"
													},
													"sink": {
														"name": "CC02_DOB",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CC02_ACCNAME",
														"type": "String"
													},
													"sink": {
														"name": "CC02_ACCNAME",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "CC02",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "CC02",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								},
								{
									"name": "Copy LF05O",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy CC02",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.LF05O')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "LF05O_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LF05O_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LF05O_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "LF05O_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LF05O_ORIG",
														"type": "String"
													},
													"sink": {
														"name": "LF05O_ORIG",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LF05O_PERC",
														"type": "Decimal"
													},
													"sink": {
														"name": "LF05O_PERC",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "LF05O",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "LF05O",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Database Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "SELECT * FROM LRS_RAW.MASTER_DATA.DATABASE_LOOKUP_TRUX_COMBINED\nWHERE SERVERNAME = 'MIDWEST';",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LOOKUP_TRUX_COMBINED",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					}
				},
				"folder": {
					"name": "Production/TRUX"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-27T13:50:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/MSAZ01')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_MIDWEST_DATA_LOAD_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Database Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Database Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy SL01",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.SL01')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SL01_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "SL01_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SL01_NAME",
														"type": "String"
													},
													"sink": {
														"name": "SL01_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_ADDS",
														"type": "String"
													},
													"sink": {
														"name": "SL01_ADDS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_CITY",
														"type": "String"
													},
													"sink": {
														"name": "SL01_CITY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_STAT",
														"type": "String"
													},
													"sink": {
														"name": "SL01_STAT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_PZIP",
														"type": "String"
													},
													"sink": {
														"name": "SL01_PZIP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_LATT",
														"type": "Decimal"
													},
													"sink": {
														"name": "SL01_LATT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SL01_LONG",
														"type": "Decimal"
													},
													"sink": {
														"name": "SL01_LONG",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SL01_ACTIVE",
														"type": "Boolean"
													},
													"sink": {
														"name": "SL01_ACTIVE",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "SL01",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "SL01",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								},
								{
									"name": "Copy SP03",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy SL01",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.SP03')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SP03_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SP03_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SP03_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SP03_REFE",
														"type": "String"
													},
													"sink": {
														"name": "SP03_REFE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SP03_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_SITE",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "SP03",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "SP03",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								},
								{
									"name": "Copy CC02",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy SP03",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT \r\n      [CC02_CUST]\r\n      ,[CC02_SITE]\r\n      ,[CC02_TYPE]\r\n      , NULL AS [CC02_NUMBER]\r\n      ,[CC02_EXPMO]\r\n      ,[CC02_EXPYE]\r\n      , NULL AS [CC02_CVV2]\r\n      ,[CC02_HFNAME]\r\n      ,[CC02_HLNAME]\r\n      ,[CC02_HADD]\r\n      ,[CC02_HCITY]\r\n      ,[CC02_HSTAT]\r\n      ,[CC02_HZIP]\r\n      ,[CC02_HCOUN]\r\n      ,[CC02_HPHON]\r\n      ,[CC02_HEMAIL]\r\n      ,[CC02_ACTIVE]\r\n      ,[CC02_CHRGTYPE]\r\n      ,[CC02_ID]\r\n      , NULL AS [CC02_ROUTNUM]\r\n      ,[CC02_ACCTYPE]\r\n      ,[CC02_BANKN]\r\n      ,[CC02_LICNUM]\r\n      ,[CC02_LICSTAT]\r\n      ,[CC02_DOB]\r\n      ,[CC02_ACCNAME]\r\n      ,[CC02_TOKEN]\r\n      ,[CC02_ACCOUNTTYPE]\r\nFROM \r\n      dbo.CC02",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.CC02')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "CC02_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CC02_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CC02_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_NUMBER",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_NUMBER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_EXPMO",
														"type": "String"
													},
													"sink": {
														"name": "CC02_EXPMO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_EXPYE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_EXPYE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_CVV2",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_CVV2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HFNAME",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HFNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HLNAME",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HLNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HADD",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HADD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HCITY",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HCITY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HSTAT",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HSTAT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HZIP",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HZIP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HCOUN",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HCOUN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HPHON",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HPHON",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HEMAIL",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HEMAIL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_ACTIVE",
														"type": "Boolean"
													},
													"sink": {
														"name": "CC02_ACTIVE",
														"type": "Boolean"
													}
												},
												{
													"source": {
														"name": "CC02_CHRGTYPE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_CHRGTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CC02_ROUTNUM",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_ROUTNUM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_ACCTYPE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_ACCTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_BANKN",
														"type": "String"
													},
													"sink": {
														"name": "CC02_BANKN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_LICNUM",
														"type": "String"
													},
													"sink": {
														"name": "CC02_LICNUM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_LICSTAT",
														"type": "String"
													},
													"sink": {
														"name": "CC02_LICSTAT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_DOB",
														"type": "DateTime"
													},
													"sink": {
														"name": "CC02_DOB",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CC02_ACCNAME",
														"type": "String"
													},
													"sink": {
														"name": "CC02_ACCNAME",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "CC02",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "CC02",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								},
								{
									"name": "Copy LF05O",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy CC02",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.LF05O')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "LF05O_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LF05O_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LF05O_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "LF05O_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LF05O_ORIG",
														"type": "String"
													},
													"sink": {
														"name": "LF05O_ORIG",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LF05O_PERC",
														"type": "Decimal"
													},
													"sink": {
														"name": "LF05O_PERC",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "LF05O",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "LF05O",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Database Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "SELECT * FROM LRS_RAW.MASTER_DATA.DATABASE_LOOKUP_TRUX_COMBINED\nWHERE SERVERNAME = 'MIDWEST';",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LOOKUP_TRUX_COMBINED",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-27T13:51:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/MSAZ01')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_MIDWEST_FULL_LOAD_DIM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Database Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Database Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "LM03 Copy",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name,'.LM03')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "LM03",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "LM03",
												"Snowflake_Schema": "@item().Snowflake_Name"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Database Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LOOKUP_TRUX_MIDWEST",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 16
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 32
					}
				},
				"folder": {
					"name": "Production/TRUX_OLD"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/MSAZ01')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_MIDWEST_FULL_LOAD_FACT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Database Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Database Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DM01P",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name,'.DM01P')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM01P_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM01P_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_BATCH",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_BATCH",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GLNU",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_GLNU",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINKID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GROUP",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_GROUP",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM01P",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01P",
												"Snowflake_Schema": "@item().Snowflake_Name"
											}
										}
									]
								},
								{
									"name": "DM05A Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM01P",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name,'.DM05A')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05A_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05A",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05A",
												"Snowflake_Schema": "@item().Snowflake_Name"
											}
										}
									]
								},
								{
									"name": "DM05B Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05A Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name,'.DM05B')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05B_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ARATEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ARATEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05B",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05B",
												"Snowflake_Schema": "@item().Snowflake_Name"
											}
										}
									]
								},
								{
									"name": "DM05Z Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05B Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name,'.DM05Z')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05Z_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05Z",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05Z",
												"Snowflake_Schema": "@item().Snowflake_Name"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Database Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LOOKUP_TRUX_MIDWEST",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					}
				},
				"folder": {
					"name": "Production/TRUX_OLD"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/MSAZ01')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_MIDWEST_FULL_LOAD_FACT_NEW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Database Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Database Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DM01P",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.DM01P')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM01P_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM01P_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_BATCH",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_BATCH",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GLNU",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_GLNU",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINKID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GROUP",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_GROUP",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM01P",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01P",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05A Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM01P",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.DM05A')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05A_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05A",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05A",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05B Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05A Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.DM05B')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05B_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ARATEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ARATEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05B",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05B",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05Z Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05B Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.DM05Z')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05Z_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05Z",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05Z",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "RM07 Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05Z Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.RM07')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "RM07_RDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM07_RDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM07_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_REASON",
														"type": "String"
													},
													"sink": {
														"name": "RM07_REASON",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM07_TIME",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_TIME",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_TRUK",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_TRUK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_ODOM",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_ODOM",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_STIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM07_STIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM07_ETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM07_ETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM07_DRIV",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_DRIV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "RM07",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM07",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05L Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "RM07 Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.DM05L')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05L_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05L_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05L_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05L_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05L_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05L_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05L_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05L_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05L_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05L_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05L_DSTE",
														"type": "String"
													},
													"sink": {
														"name": "DM05L_DSTE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05L_TICK",
														"type": "String"
													},
													"sink": {
														"name": "DM05L_TICK",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05L_DTID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05L_DTID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05L_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05L_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05L_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05L_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05L_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05L_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05L_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05L_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05L_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05L_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05L_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05L_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05L_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05L_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05l",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05L",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "CCLOG Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05L Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.CCLOG')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "CCLOG_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "CCLOG_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CCLOG_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "CCLOG_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CCLOG_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "CCLOG_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CCLOG_TDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "CCLOG_TDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CCLOG_PDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "CCLOG_PDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CCLOG_USER",
														"type": "String"
													},
													"sink": {
														"name": "CCLOG_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CCLOG_INVC",
														"type": "String"
													},
													"sink": {
														"name": "CCLOG_INVC",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CCLOG_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "CCLOG_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CCLOG_APPV",
														"type": "Boolean"
													},
													"sink": {
														"name": "CCLOG_APPV",
														"type": "Boolean"
													}
												},
												{
													"source": {
														"name": "CCLOG_TRANID",
														"type": "String"
													},
													"sink": {
														"name": "CCLOG_TRANID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CCLOG_ACODE",
														"type": "String"
													},
													"sink": {
														"name": "CCLOG_ACODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CCLOG_RCODE",
														"type": "String"
													},
													"sink": {
														"name": "CCLOG_RCODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CCLOG_RTEXT",
														"type": "String"
													},
													"sink": {
														"name": "CCLOG_RTEXT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CCLOG_RTRANID",
														"type": "String"
													},
													"sink": {
														"name": "CCLOG_RTRANID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CCLOG_CC02ID",
														"type": "Int32"
													},
													"sink": {
														"name": "CCLOG_CC02ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "CCLOG",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "CCLOG",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "EA01 Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CCLOG Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": "SELECT [EA01_ID]\r\n     , [EA01_DM01ID]\r\n     , [EA01_EMAILTO]\r\n     , [EA01_USER]\r\n     , CAST ([EA01_SDTE ] AS smalldatetime) AS [EA01_SDTE]\r\n     , [EA01_STATUS]\r\n     , [EA01_MESSAGE]\r\n  FROM [dbo].[EA01]",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.EA01')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "EA01_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "EA01_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "EA01_DM01ID",
														"type": "Int32"
													},
													"sink": {
														"name": "EA01_DM01ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "EA01_EMAILTO",
														"type": "String"
													},
													"sink": {
														"name": "EA01_EMAILTO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "EA01_USER",
														"type": "String"
													},
													"sink": {
														"name": "EA01_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "EA01_SDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "EA01_SDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "EA01_STATUS",
														"type": "Boolean"
													},
													"sink": {
														"name": "EA01_STATUS",
														"type": "Boolean"
													}
												},
												{
													"source": {
														"name": "EA01_MESSAGE",
														"type": "String"
													},
													"sink": {
														"name": "EA01_MESSAGE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "EA01",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "EA01",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Database Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TRUX_MIDWEST_WATERMARK_PVT",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					}
				},
				"folder": {
					"name": "Production/TRUX"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/MSAZ01')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_MIDWEST_INCREMENTAL_LOAD_FACT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Trux Midwest ID Watermark Lookup",
						"description": "look up schema, database and table names from sqlsever and snowflake",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TRUX_MIDWEST_WATERMARK_PVT",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Incremental Loop Over ID Watermark Tables",
						"description": "Activity to loop over tables that have primary keys with incremental IDs. This loops looks at our Watermark table in Snowflake and appends any IDs found in SQL server that are greater than the latest watermark in Snowflake.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Trux Midwest ID Watermark Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Trux Midwest ID Watermark Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DM01 Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM01\nwhere DM01_ID > @{item().DM01}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM01_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_INVC",
														"type": "String"
													},
													"sink": {
														"name": "DM01_INVC",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01_SSIT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_SSIT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_PBLE",
														"type": "String"
													},
													"sink": {
														"name": "DM01_PBLE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01_BILLINDV",
														"type": "String"
													},
													"sink": {
														"name": "DM01_BILLINDV",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01_CONTRACT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_CONTRACT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_AMOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM01_AMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_ORIGINVID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_ORIGINVID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_FCTY",
														"type": "String"
													},
													"sink": {
														"name": "DM01_FCTY",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM01",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM01p Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM01 Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM01P\nwhere DM01P_ID > @{item().DM01P}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM01P_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM01P_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_BATCH",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_BATCH",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GLNU",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_GLNU",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINKID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GROUP",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_GROUP",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM01P",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01P",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05A Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM01p Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05A\nwhere DM05A_ID > @{item().DM05A}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05A_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05A",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05A",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05B Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05A Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05B\nwhere DM05B_ID > @{item().DM05B}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05B_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ARATEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ARATEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05B",
												"database": {
													"value": "@item().sql_db_Name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05B",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05FT Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05B Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05FT\nwhere DM05FT_ID > @{item().DM05FT}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05FT_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05FT_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05FT_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05FT_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05FT_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_SSIT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_SSIT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_SERV",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_SERV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05FT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05FT_DESC",
														"type": "String"
													},
													"sink": {
														"name": "DM05FT_DESC",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05FT_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05FT_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05FT_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05FT_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05FT_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05FT_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05FT_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05FT_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05FT_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05FT",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05FT",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05Z Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05FT Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05Z\nwhere DM05Z_ID > @{item().DM05Z}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05Z_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05Z",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05Z",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "LM02 Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05Z Incremental Delta Load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from LM02\nwhere LM02_ID > @{item().LM02}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "LM02_DSTE",
														"type": "String"
													},
													"sink": {
														"name": "LM02_DSTE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_NUMB",
														"type": "String"
													},
													"sink": {
														"name": "LM02_NUMB",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_INOT",
														"type": "Boolean"
													},
													"sink": {
														"name": "LM02_INOT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_DQTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_DQTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_DUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_DUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_DAMT",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_DAMT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_SERV",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_SERV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_BQTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_BQTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_BUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_BUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_BAMT",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_BAMT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_MATL",
														"type": "String"
													},
													"sink": {
														"name": "LM02_MATL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_BLAD",
														"type": "String"
													},
													"sink": {
														"name": "LM02_BLAD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_PORD",
														"type": "String"
													},
													"sink": {
														"name": "LM02_PORD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_CARR",
														"type": "String"
													},
													"sink": {
														"name": "LM02_CARR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_NOT1",
														"type": "String"
													},
													"sink": {
														"name": "LM02_NOT1",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_NOT2",
														"type": "String"
													},
													"sink": {
														"name": "LM02_NOT2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_IDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_IDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_UCHG",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_UCHG",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_MIN",
														"type": "String"
													},
													"sink": {
														"name": "LM02_MIN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_SEQ1",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_SEQ1",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_SEQ2",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_SEQ2",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_FQTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_FQTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_FUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_FUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_DRATE",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_DRATE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_OWN",
														"type": "String"
													},
													"sink": {
														"name": "LM02_OWN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_LF05ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_LF05ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_UCHGUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_UCHGUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_DRATEUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_DRATEUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_FINV",
														"type": "String"
													},
													"sink": {
														"name": "LM02_FINV",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_FDAT",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_FDAT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_FUSE",
														"type": "String"
													},
													"sink": {
														"name": "LM02_FUSE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_FRDT",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_FRDT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_CDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_CDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_TIN",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_TIN",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_TOUT",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_TOUT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_CM09ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_CM09ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_LM05ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_LM05ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_LEED",
														"type": "Boolean"
													},
													"sink": {
														"name": "LM02_LEED",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_LEEDWEIGHT",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_LEEDWEIGHT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_LEEDWEIGHTUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_LEEDWEIGHTUOM",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "LM02",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "LM02",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "RM03U Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LM02 Incremental Delta Load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from RM03U\nwhere RM03U_ID > @{item().RM03U}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "RM03U_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM03U_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM03U_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_SERV",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_SERV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "RM03U_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_ACTV",
														"type": "String"
													},
													"sink": {
														"name": "RM03U_ACTV",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM03U_REFN",
														"type": "String"
													},
													"sink": {
														"name": "RM03U_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM03U_TIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM03U_TIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM03U_WONU",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_WONU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_DATA",
														"type": "String"
													},
													"sink": {
														"name": "RM03U_DATA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM03U_TTKN",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM03U_TTKN",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM03U_UTKN",
														"type": "String"
													},
													"sink": {
														"name": "RM03U_UTKN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM03U_LOGID",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_LOGID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_CHG",
														"type": "Decimal"
													},
													"sink": {
														"name": "RM03U_CHG",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_TIM2",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM03U_TIM2",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM03U_CALLID",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_CALLID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_STORIG",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_STORIG",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_STPREV",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_STPREV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_STNEXT",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_STNEXT",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "RM03U",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM03U",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Incremental Loop Over Date Watermark Tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Trux Midwest ID Watermark Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Trux Midwest ID Watermark Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "RM05 Incremental Delta Load to Staging",
									"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging table for RM05",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from RM05 where RM05_DATE >DATEADD(day,-', \n    pipeline().parameters.Incremental_Range,\n    ', GETDATE())'\n    )\n}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "RM05",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM05_STAGING",
												"Snowflake_Schema": "@item().snowflake_schema"
											}
										}
									]
								},
								{
									"name": "RM05 Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "RM05 Incremental Delta Load to Staging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into ', item().Snowflake_schema,'.','RM05 t \nusing ', \n    item().Snowflake_schema,'.','RM05_STAGING s \non concat(t.rm05_rout, t.rm05_seq1,t.rm05_seq2,t.rm05_date) = concat(s.rm05_rout, s.rm05_seq1,s.rm05_seq2,s.rm05_date) \nwhen matched then update set \n    t.rm05_date = s.rm05_date,\n\tt.rm05_rout = s.rm05_rout,\n\tt.rm05_seq1 = s.rm05_seq1, \n\tt.rm05_seq2 = s.rm05_seq2, \n\tt.rm05_truk = s.rm05_truk,\n\tt.rm05_driv = s.rm05_driv,\n\tt.rm05_help = s.rm05_help,\n\tt.rm05_fuel = s.rm05_fuel,\n\tt.rm05_fuom = s.rm05_fuom,\n\tt.rm05_tim1 = s.rm05_tim1,\n\tt.rm05_tim2 = s.rm05_tim2,\n\tt.rm05_odm1 = s.rm05_odm1,\n\tt.rm05_odm2 = s.rm05_odm2,\n\tt.rm05_ouom = s.rm05_ouom,\n\tt.rm05_note = s.rm05_note,\n\tt.rm05_starthour = s.rm05_starthour,\n\tt.rm05_endhour = s.rm05_endhour,\n\tt.rm05_oil = s.rm05_oil,\n\tt.rm05_oil_uom = s.rm05_oil_uom,\n\tt.rm05_deptime = s.rm05_deptime,\n\tt.rm05_rettime = s.rm05_rettime,\n\tt.rm05_starttime= s.rm05_starttime \nwhen not matched then insert \n\t(\n\tt.rm05_date,\n\tt.rm05_rout,\n\tt.rm05_seq1,\n\tt.rm05_seq2,\n\tt.rm05_truk,\n\tt.rm05_driv,\n\tt.rm05_help,\n\tt.rm05_fuel,\n\tt.rm05_fuom,\n\tt.rm05_tim1,\n\tt.rm05_tim2,\n\tt.rm05_odm1,\n\tt.rm05_odm2,\n\tt.rm05_ouom,\n\tt.rm05_note,\n\tt.rm05_starthour,\n\tt.rm05_endhour,\n\tt.rm05_oil,\n\tt.rm05_oil_uom,\n\tt.rm05_deptime,\n\tt.rm05_rettime,\n\tt.rm05_starttime \n\t)\nvalues \n\t(\n\ts.rm05_date,\n\ts.rm05_rout,\n\ts.rm05_seq1, \n\ts.rm05_seq2, \n\ts.rm05_truk,\n\ts.rm05_driv,\n\ts.rm05_help,\n\ts.rm05_fuel,\n\ts.rm05_fuom,\n\ts.rm05_tim1,\n\ts.rm05_tim2,\n\ts.rm05_odm1,\n\ts.rm05_odm2,\n\ts.rm05_ouom,\n\ts.rm05_note,\n\ts.rm05_starthour,\n\ts.rm05_endhour,\n\ts.rm05_oil,\n\ts.rm05_oil_uom,\n\ts.rm05_deptime,\n\ts.rm05_rettime,\n\ts.rm05_starttime)'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "SM01 Snowflake Merge Operation_copy1",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "SM01 Incremental Delta Load to Staging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into ', item().snowflake_schema,'.','SM01 t \nusing ', \n    item().snowflake_schema,'.','sm01_staging s \non concat(t.sm01_rout, t.sm01_sequ, t.sm01_date) = concat(s.sm01_rout, s.sm01_sequ, s.sm01_date) \nwhen matched then update set \n\tt.sm01_date= s.sm01_date ,\n\tt.sm01_rout= s.sm01_rout ,\n\tt.sm01_sequ= s.sm01_sequ ,\n\tt.sm01_cust= s.sm01_cust ,\n\tt.sm01_site= s.sm01_site ,\n\tt.sm01_serv= s.sm01_serv ,\n\tt.sm01_qty= s.sm01_qty ,\n\tt.sm01_actv= s.sm01_actv ,\n\tt.sm01_amnt= s.sm01_amnt ,\n\tt.sm01_idte= s.sm01_idte ,\n\tt.sm01_refn= s.sm01_refn ,\n\tt.sm01_time= s.sm01_time ,\n\tt.sm01_wonu = s.sm01_wonu,\n\tt.sm01_data= s.sm01_data ,\n\tt.sm01_logid = s.sm01_logid,\n\tt.sm01_arateid = s.sm01_arateid,\n\tt.sm01_callid = s.sm01_callid,\n\tt.sm01_user= s.sm01_user ,\n\tt.sm01_cdte= s.sm01_cdte ,\n\tt.sm01_tim2= s.sm01_tim2 ,\n\tt.sm01_callnumber= s.sm01_callnumber ,\n\tt.sm01_storig = s.sm01_storig,\n\tt.sm01_stprev =s.sm01_stprev,\n\tt.sm01_stnext = s.sm01_stnext ,\n\tt.sm01_pchg= s.sm01_pchg ,\n\tt.sm01_orig_sequ = s.sm01_orig_sequ \n\nwhen not matched then insert \n\t(\n\tt.sm01_date ,\n\tt.sm01_rout ,\n\tt.sm01_sequ ,\n\tt.sm01_cust ,\n\tt.sm01_site ,\n\tt.sm01_serv ,\n\tt.sm01_qty ,\n\tt.sm01_actv ,\n\tt.sm01_amnt ,\n\tt.sm01_idte ,\n\tt.sm01_refn ,\n\tt.sm01_time ,\n\tt.sm01_wonu,\n\tt.sm01_data ,\n\tt.sm01_logid ,\n\tt.sm01_arateid ,\n\tt.sm01_callid ,\n\tt.sm01_user ,\n\tt.sm01_cdte ,\n\tt.sm01_tim2 ,\n\tt.sm01_callnumber ,\n\tt.sm01_storig, \n\tt.sm01_stprev ,\n\tt.sm01_stnext ,\n\tt.sm01_pchg ,\n\tt.sm01_orig_sequ \n\t)\nvalues \n\t(\n\ts.sm01_date ,\n\ts.sm01_rout ,\n\ts.sm01_sequ ,\n\ts.sm01_cust ,\n\ts.sm01_site ,\n\ts.sm01_serv ,\n\ts.sm01_qty ,\n\ts.sm01_actv ,\n\ts.sm01_amnt ,\n\ts.sm01_idte ,\n\ts.sm01_refn ,\n\ts.sm01_time ,\n\ts.sm01_wonu, \n\ts.sm01_data ,\n\ts.sm01_logid ,\n\ts.sm01_arateid ,\n\ts.sm01_callid ,\n\ts.sm01_user ,\n\ts.sm01_cdte ,\n\ts.sm01_tim2 ,\n\ts.sm01_callnumber ,\n\ts.sm01_storig ,\n\ts.sm01_stprev, \n\ts.sm01_stnext ,\n\ts.sm01_pchg ,\n\ts.sm01_orig_sequ)'\n\t)}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "MT02 Snowflake Merge Operation_copy1_copy1",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "MT02 Incremental Delta Load to Staging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into ', item().snowflake_schema,'.','mt02 t \nusing ', \n    item().snowflake_schema,'.','mt02_staging s \non concat(t.mt02_refr, t.mt02_lmdate) = concat(s.mt02_refr, s.mt02_lmdate) \nwhen matched then update set \n\tt.mt02_refr= s.mt02_refr ,\n\tt.mt02_cust= s.mt02_cust ,\n\tt.mt02_site= s.mt02_site ,\n\tt.mt02_serv= s.mt02_serv ,\n\tt.mt02_date =s.mt02_date ,\n\tt.mt02_code= s.mt02_code ,\n\tt.mt02_amnt= s.mt02_amnt ,\n\tt.mt02_desc= s.mt02_desc ,\n\tt.mt02_qty= s.mt02_qty ,\n\tt.mt02_idte= s.mt02_idte ,\n\tt.mt02_rout= s.mt02_rout ,\n\tt.mt02_sequ= s.mt02_sequ ,\n\tt.mt02_rate= s.mt02_rate ,\n\tt.mt02_lmuser= s.mt02_lmuser ,\n\tt.mt02_lmdate= s.mt02_lmdate ,\n\tt.mt02_desc0= s.mt02_desc0 ,\n\tt.mt02_desc1= s.mt02_desc1 ,\n\tt.mt02_desc2= s.mt02_desc2 ,\n\tt.mt02_desc3= s.mt02_desc3 ,\n\tt.mt02_lf05id= s.mt02_lf05id ,\n\tt.mt02_own= s.mt02_own ,\n\tt.mt02_schid= s.mt02_schid,\n\tt.mt02_schidw= s.mt02_schidw ,\n\tt.mt02_fcty= s.mt02_fcty \n\nwhen not matched then insert \n\t(\n\tt.mt02_refr ,\n\tt.mt02_cust ,\n\tt.mt02_site ,\n\tt.mt02_serv ,\n\tt.mt02_date ,\n\tt.mt02_code ,\n\tt.mt02_amnt ,\n\tt.mt02_desc ,\n\tt.mt02_qty ,\n\tt.mt02_idte ,\n\tt.mt02_rout ,\n\tt.mt02_sequ ,\n\tt.mt02_rate ,\n\tt.mt02_lmuser ,\n\tt.mt02_lmdate ,\n\tt.mt02_desc0 ,\n\tt.mt02_desc1 ,\n\tt.mt02_desc2 ,\n\tt.mt02_desc3 ,\n\tt.mt02_lf05id ,\n\tt.mt02_own ,\n\tt.mt02_schid ,\n\tt.mt02_schidw ,\n\tt.mt02_fcty \n\t)\nvalues \n\t(\ns.mt02_refr ,\n\ts.mt02_cust ,\n\ts.mt02_site ,\n\ts.mt02_serv ,\n\ts.mt02_date ,\n\ts.mt02_code ,\n\ts.mt02_amnt ,\n\ts.mt02_desc ,\n\ts.mt02_qty ,\n\ts.mt02_idte ,\n\ts.mt02_rout ,\n\ts.mt02_sequ ,\n\ts.mt02_rate ,\n\ts.mt02_lmuser ,\n\ts.mt02_lmdate ,\n\ts.mt02_desc0 ,\n\ts.mt02_desc1 ,\n\ts.mt02_desc2 ,\n\ts.mt02_desc3 ,\n\ts.mt02_lf05id ,\n\ts.mt02_own ,\n\ts.mt02_schid ,\n\ts.mt02_schidw ,\n\ts.mt02_fcty )'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "SM01 Incremental Delta Load to Staging",
									"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging table for SM01",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from SM01 where SM01_DATE >DATEADD(day,-', \n    pipeline().parameters.Incremental_Range,\n    ', GETDATE())'\n    )\n}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "SM01",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "SM01_STAGING",
												"Snowflake_Schema": {
													"value": "@item().snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "MT02 Incremental Delta Load to Staging",
									"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging table for MT02",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from MT02 where MT02_DATE >DATEADD(day,-', \n    pipeline().parameters.Incremental_Range,\n    ', GETDATE())'\n    )\n}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "MT02",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "MT02_STAGING",
												"Snowflake_Schema": {
													"value": "@item().snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Create staging table for RM05",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table ', \n    item().Snowflake_schema,\n    '.RM05_STAGING',\n    ' as select * from ', \n    item().Snowflake_schema,\n    '.RM05 where 1=0'\n    )\n    }",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Create staging table for SM01",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table ', \n    item().Snowflake_schema,\n    '.SM01_STAGING',\n    ' as select * from ', \n    item().Snowflake_schema,\n    '.SM01 where 1=0'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Create staging table for MT02",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table ', \n    item().Snowflake_schema,\n    '.MT02_STAGING',\n    ' as select * from ', \n    item().Snowflake_schema,\n    '.MT02 where 1=0'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for RM05",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "RM05 Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table ', \n    item().Snowflake_schema,\n    '.RM05_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for SM01",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "SM01 Snowflake Merge Operation_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table ', \n    item().Snowflake_schema,\n    '.SM01_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for MT02",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "MT02 Snowflake Merge Operation_copy1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table ', \n    item().Snowflake_schema,\n    '.MT02_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"Incremental_Range": {
						"type": "string",
						"defaultValue": "14"
					}
				},
				"variables": {
					"tempArray": {
						"type": "Array"
					},
					"TempResult": {
						"type": "Array"
					},
					"ResultsArray": {
						"type": "Array"
					},
					"OutputArray": {
						"type": "Array"
					},
					"append": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Production/TRUX_OLD"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-27T21:04:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/MSAZ01')]",
				"[concat(variables('factoryId'), '/linkedServices/LRS_Snowflake_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_MIDWEST_INCREMENTAL_LOAD_FACT_BKUP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Trux Legacy Watermark Lookup",
						"description": "look up schema, database and table names from sqlsever and snowflake",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "//RM05\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.rm05\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.rm05\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.rm05\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.rm05\r\n-------------------------------------------------------------------------------------------\r\n\r\n  union all\r\n\r\n//sm01\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.sm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.sm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.sm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.sm01\r\nsm01\r\n------------------------------------------------------------\r\n//DM01\r\nunion all\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.dm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.dm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.dm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.dm01\r\n\r\n------------------------------------------------------------------\r\nunion all\r\n\r\n//DM01P\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.dm01p\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.dm01p\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.dm01p\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.dm01p\r\n\r\n---------------------------------------\r\nunion all\r\n//DM05A\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.dm05a\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.dm05a\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.dm05a\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.dm05a\r\n--------------------------------------------------\r\nunion all\r\n\r\n//DM05B\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.DM05b\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.DM05b\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.DM05b\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.DM05b\r\n---------------------------------------------------------------------\r\nunion all\r\n//DM05FT\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.DM05ft\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.DM05ft\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.DM05ft\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.DM05ft\r\n---------------------------------------------------------\r\nunion all\r\n//DM05Z\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.Dm05z\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.Dm05z\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.Dm05z\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.Dm05z\r\n\r\n--------------------------------------------------------\r\nunion all\r\n//LM02\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.Lm02\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.Lm02\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.Lm02\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.Lm02\r\n  \r\n------------------------------------------------------------\r\nunion all\r\n\r\n//MT02\r\n\r\nselect \r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar)as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar)  as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.MT02\r\nunion all\r\n\r\nselect \r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.MT02\r\n\r\n\r\n-----------------------------------------------------------------------------\r\nunion all\r\n\r\n//RM03U\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.Rm03u\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.Rm03u\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.Rm03u\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.Rm03u\r\n\r\n---------------------------------------------------------",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LKPWATERMARK_TRUX_LEGACY",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Loop Over Tables",
						"description": "activity to loop over our array of results which are the tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Trux Legacy Watermark Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Trux Legacy Watermark Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "RM05 Incremental Delta Load to Staging",
									"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Snowflake Create Staging Tables",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from RM05\nwhere RM05_DATE > DATEADD(day, -7, GETDATE())",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "@concat(item().table_name,'_STAGING')",
												"Snowflake_Schema": {
													"value": "@item().snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Snowflake Create Staging Tables",
									"description": "create staging table used to store the delta incremental load. In this staging table, we perform a merge to the main raw table.",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('Create or replace table ', item().Snowflake_schema,'.',item().table_name,'_staging\n    as \n    select * from ', item().Snowflake_schema,'.',item().table_name,\n    ' where 1=0')}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "RM05 Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "RM05 Incremental Delta Load to Staging",
											"dependencyConditions": [
												"Succeeded",
												"Skipped"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into ', item().Snowflake_schema,'.','RM05 t \nusing ', \n    item().Snowflake_schema,'.','RM05_STAGING s \non concat(t.rm05_rout, t.rm05_seq1,t.rm05_seq2,t.rm05_date) = concat(s.rm05_rout, s.rm05_seq1,s.rm05_seq2,s.rm05_date) \nwhen matched then update set \n    t.rm05_date = s.rm05_date,\n\tt.rm05_rout = s.rm05_rout,\n\tt.rm05_seq1 = s.rm05_seq1, \n\tt.rm05_seq2 = s.rm05_seq2, \n\tt.rm05_truk = s.rm05_truk,\n\tt.rm05_driv = s.rm05_driv,\n\tt.rm05_help = s.rm05_help,\n\tt.rm05_fuel = s.rm05_fuel,\n\tt.rm05_fuom = s.rm05_fuom,\n\tt.rm05_tim1 = s.rm05_tim1,\n\tt.rm05_tim2 = s.rm05_tim2,\n\tt.rm05_odm1 = s.rm05_odm1,\n\tt.rm05_odm2 = s.rm05_odm2,\n\tt.rm05_ouom = s.rm05_ouom,\n\tt.rm05_note = s.rm05_note,\n\tt.rm05_starthour = s.rm05_starthour,\n\tt.rm05_endhour = s.rm05_endhour,\n\tt.rm05_oil = s.rm05_oil,\n\tt.rm05_oil_uom = s.rm05_oil_uom,\n\tt.rm05_deptime = s.rm05_deptime,\n\tt.rm05_rettime = s.rm05_rettime,\n\tt.rm05_starttime= s.rm05_starttime \nwhen not matched then insert \n\t(\n\tt.rm05_date,\n\tt.rm05_rout,\n\tt.rm05_seq1,\n\tt.rm05_seq2,\n\tt.rm05_truk,\n\tt.rm05_driv,\n\tt.rm05_help,\n\tt.rm05_fuel,\n\tt.rm05_fuom,\n\tt.rm05_tim1,\n\tt.rm05_tim2,\n\tt.rm05_odm1,\n\tt.rm05_odm2,\n\tt.rm05_ouom,\n\tt.rm05_note,\n\tt.rm05_starthour,\n\tt.rm05_endhour,\n\tt.rm05_oil,\n\tt.rm05_oil_uom,\n\tt.rm05_deptime,\n\tt.rm05_rettime,\n\tt.rm05_starttime \n\t)\nvalues \n\t(\n\ts.rm05_date,\n\ts.rm05_rout,\n\ts.rm05_seq1, \n\ts.rm05_seq2, \n\ts.rm05_truk,\n\ts.rm05_driv,\n\ts.rm05_help,\n\ts.rm05_fuel,\n\ts.rm05_fuom,\n\ts.rm05_tim1,\n\ts.rm05_tim2,\n\ts.rm05_odm1,\n\ts.rm05_odm2,\n\ts.rm05_ouom,\n\ts.rm05_note,\n\ts.rm05_starthour,\n\ts.rm05_endhour,\n\ts.rm05_oil,\n\ts.rm05_oil_uom,\n\ts.rm05_deptime,\n\ts.rm05_rettime,\n\ts.rm05_starttime)'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Snowflake Drop Staging Tables",
									"description": "after all activities are completed, we perform the drop operation to clean up the snowflake environment",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "RM05 Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "SM01 Snowflake Merge Operation_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "MT02 Snowflake Merge Operation_copy1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('drop table if exists ', item().Snowflake_schema,'.',item().table_name,'_STAGING')}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "DM01p Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM01P\nwhere DM01P_ID > cast('@{item().LATEST_WATERMARK}' as int)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											}
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM01P_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM01P_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_BATCH",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_BATCH",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GLNU",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_GLNU",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINKID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GROUP",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_GROUP",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM01P",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01P",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05A Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM01p Incremental Delta Load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05A\nwhere DM05A_ID > cast('@{item().LATEST_WATERMARK}' as int)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											}
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05A_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05A",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05A",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05B Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05A Incremental Delta Load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05B\nwhere DM05B_ID > cast('@{item().LATEST_WATERMARK}' as int)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											}
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05B_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ARATEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ARATEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05B",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05B",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05Z Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05B Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05Z\nwhere DM05Z_ID > cast('@{item().LATEST_WATERMARK}' as int)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											}
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05Z_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05Z",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05Z",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SM01 Snowflake Merge Operation_copy1",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "SM01 Incremental Delta Load to Staging",
											"dependencyConditions": [
												"Succeeded",
												"Skipped"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into ', item().snowflake_schema,'.','SM01 t \nusing ', \n    item().snowflake_schema,'.','sm01_staging s \non concat(t.sm01_rout, t.sm01_sequ, t.sm01_date) = concat(s.sm01_rout, s.sm01_sequ, s.sm01_date) \nwhen matched then update set \n\tt.sm01_date= s.sm01_date ,\n\tt.sm01_rout= s.sm01_rout ,\n\tt.sm01_sequ= s.sm01_sequ ,\n\tt.sm01_cust= s.sm01_cust ,\n\tt.sm01_site= s.sm01_site ,\n\tt.sm01_serv= s.sm01_serv ,\n\tt.sm01_qty= s.sm01_qty ,\n\tt.sm01_actv= s.sm01_actv ,\n\tt.sm01_amnt= s.sm01_amnt ,\n\tt.sm01_idte= s.sm01_idte ,\n\tt.sm01_refn= s.sm01_refn ,\n\tt.sm01_time= s.sm01_time ,\n\tt.sm01_wonu = s.sm01_wonu,\n\tt.sm01_data= s.sm01_data ,\n\tt.sm01_logid = s.sm01_logid,\n\tt.sm01_arateid = s.sm01_arateid,\n\tt.sm01_callid = s.sm01_callid,\n\tt.sm01_user= s.sm01_user ,\n\tt.sm01_cdte= s.sm01_cdte ,\n\tt.sm01_tim2= s.sm01_tim2 ,\n\tt.sm01_callnumber= s.sm01_callnumber ,\n\tt.sm01_storig = s.sm01_storig,\n\tt.sm01_stprev =s.sm01_stprev,\n\tt.sm01_stnext = s.sm01_stnext ,\n\tt.sm01_pchg= s.sm01_pchg ,\n\tt.sm01_orig_sequ = s.sm01_orig_sequ \n\nwhen not matched then insert \n\t(\n\tt.sm01_date ,\n\tt.sm01_rout ,\n\tt.sm01_sequ ,\n\tt.sm01_cust ,\n\tt.sm01_site ,\n\tt.sm01_serv ,\n\tt.sm01_qty ,\n\tt.sm01_actv ,\n\tt.sm01_amnt ,\n\tt.sm01_idte ,\n\tt.sm01_refn ,\n\tt.sm01_time ,\n\tt.sm01_wonu,\n\tt.sm01_data ,\n\tt.sm01_logid ,\n\tt.sm01_arateid ,\n\tt.sm01_callid ,\n\tt.sm01_user ,\n\tt.sm01_cdte ,\n\tt.sm01_tim2 ,\n\tt.sm01_callnumber ,\n\tt.sm01_storig, \n\tt.sm01_stprev ,\n\tt.sm01_stnext ,\n\tt.sm01_pchg ,\n\tt.sm01_orig_sequ \n\t)\nvalues \n\t(\n\ts.sm01_date ,\n\ts.sm01_rout ,\n\ts.sm01_sequ ,\n\ts.sm01_cust ,\n\ts.sm01_site ,\n\ts.sm01_serv ,\n\ts.sm01_qty ,\n\ts.sm01_actv ,\n\ts.sm01_amnt ,\n\ts.sm01_idte ,\n\ts.sm01_refn ,\n\ts.sm01_time ,\n\ts.sm01_wonu, \n\ts.sm01_data ,\n\ts.sm01_logid ,\n\ts.sm01_arateid ,\n\ts.sm01_callid ,\n\ts.sm01_user ,\n\ts.sm01_cdte ,\n\ts.sm01_tim2 ,\n\ts.sm01_callnumber ,\n\ts.sm01_storig ,\n\ts.sm01_stprev, \n\ts.sm01_stnext ,\n\ts.sm01_pchg ,\n\ts.sm01_orig_sequ)'\n\t)}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "MT02 Snowflake Merge Operation_copy1_copy1",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "MT02 Incremental Delta Load to Staging",
											"dependencyConditions": [
												"Succeeded",
												"Skipped"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into ', item().snowflake_schema,'.','mt02 t \nusing ', \n    item().snowflake_schema,'.','mt02_staging s \non concat(t.mt02_refr, t.mt02_lmdate) = concat(s.mt02_refr, s.mt02_lmdate) \nwhen matched then update set \n\tt.mt02_refr= s.mt02_refr ,\n\tt.mt02_cust= s.mt02_cust ,\n\tt.mt02_site= s.mt02_site ,\n\tt.mt02_serv= s.mt02_serv ,\n\tt.mt02_date =s.mt02_date ,\n\tt.mt02_code= s.mt02_code ,\n\tt.mt02_amnt= s.mt02_amnt ,\n\tt.mt02_desc= s.mt02_desc ,\n\tt.mt02_qty= s.mt02_qty ,\n\tt.mt02_idte= s.mt02_idte ,\n\tt.mt02_rout= s.mt02_rout ,\n\tt.mt02_sequ= s.mt02_sequ ,\n\tt.mt02_rate= s.mt02_rate ,\n\tt.mt02_lmuser= s.mt02_lmuser ,\n\tt.mt02_lmdate= s.mt02_lmdate ,\n\tt.mt02_desc0= s.mt02_desc0 ,\n\tt.mt02_desc1= s.mt02_desc1 ,\n\tt.mt02_desc2= s.mt02_desc2 ,\n\tt.mt02_desc3= s.mt02_desc3 ,\n\tt.mt02_lf05id= s.mt02_lf05id ,\n\tt.mt02_own= s.mt02_own ,\n\tt.mt02_schid= s.mt02_schid,\n\tt.mt02_schidw= s.mt02_schidw ,\n\tt.mt02_fcty= s.mt02_fcty \n\nwhen not matched then insert \n\t(\n\tt.mt02_refr ,\n\tt.mt02_cust ,\n\tt.mt02_site ,\n\tt.mt02_serv ,\n\tt.mt02_date ,\n\tt.mt02_code ,\n\tt.mt02_amnt ,\n\tt.mt02_desc ,\n\tt.mt02_qty ,\n\tt.mt02_idte ,\n\tt.mt02_rout ,\n\tt.mt02_sequ ,\n\tt.mt02_rate ,\n\tt.mt02_lmuser ,\n\tt.mt02_lmdate ,\n\tt.mt02_desc0 ,\n\tt.mt02_desc1 ,\n\tt.mt02_desc2 ,\n\tt.mt02_desc3 ,\n\tt.mt02_lf05id ,\n\tt.mt02_own ,\n\tt.mt02_schid ,\n\tt.mt02_schidw ,\n\tt.mt02_fcty \n\t)\nvalues \n\t(\ns.mt02_refr ,\n\ts.mt02_cust ,\n\ts.mt02_site ,\n\ts.mt02_serv ,\n\ts.mt02_date ,\n\ts.mt02_code ,\n\ts.mt02_amnt ,\n\ts.mt02_desc ,\n\ts.mt02_qty ,\n\ts.mt02_idte ,\n\ts.mt02_rout ,\n\ts.mt02_sequ ,\n\ts.mt02_rate ,\n\ts.mt02_lmuser ,\n\ts.mt02_lmdate ,\n\ts.mt02_desc0 ,\n\ts.mt02_desc1 ,\n\ts.mt02_desc2 ,\n\ts.mt02_desc3 ,\n\ts.mt02_lf05id ,\n\ts.mt02_own ,\n\ts.mt02_schid ,\n\ts.mt02_schidw ,\n\ts.mt02_fcty )'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "SM01 Incremental Delta Load to Staging",
									"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Snowflake Create Staging Tables",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from SM01\nwhere SM01_DATE > DATEADD(day, -7, GETDATE())",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "@concat(item().table_name,'_STAGING')",
												"Snowflake_Schema": {
													"value": "@item().snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "MT02 Incremental Delta Load to Staging",
									"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Snowflake Create Staging Tables",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from MT02\nwhere MT02_DATE > DATEADD(day, -7, GETDATE())",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "@concat(item().table_name,'_STAGING')",
												"Snowflake_Schema": {
													"value": "@item().snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 8
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"LastProcessedId": {
						"type": "string"
					},
					"CurrentDate": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"variables": {
					"tempArray": {
						"type": "Array"
					},
					"TempResult": {
						"type": "Array"
					},
					"ResultsArray": {
						"type": "Array"
					},
					"OutputArray": {
						"type": "Array"
					},
					"append": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/TRUX_LEGACY01')]",
				"[concat(variables('factoryId'), '/linkedServices/LRS_Snowflake_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_MIDWEST_INCREMENTAL_LOAD_FACT_NEW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Trux Midwest ID Watermark Lookup",
						"description": "look up schema, database and table names from sqlsever and snowflake",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TRUX_MIDWEST_WATERMARK_PVT",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Incremental Loop Over ID Watermark Tables",
						"description": "Activity to loop over tables that have primary keys with incremental IDs. This loops looks at our Watermark table in Snowflake and appends any IDs found in SQL server that are greater than the latest watermark in Snowflake.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Trux Midwest ID Watermark Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Trux Midwest ID Watermark Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DM01p Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select * from DM01P\nwhere DM01P_ID > @{item().DM01P}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM01P_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM01P_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_BATCH",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_BATCH",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GLNU",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_GLNU",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINKID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GROUP",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_GROUP",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM01P",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01P",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05A Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM01p Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select * from DM05A\nwhere DM05A_ID > @{item().DM05A}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05A_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05A",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05A",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05B Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05A Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select * from DM05B\nwhere DM05B_ID > @{item().DM05B}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05B_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ARATEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ARATEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05B",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05B",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05Z Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05B Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select * from DM05Z\nwhere DM05Z_ID > @{item().DM05Z}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05Z_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05Z",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05Z",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "RM07 Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05Z Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select * from RM07\nwhere format(RM07_RDTE,'yyyyMMdd') > @{item().RM07}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "RM07_RDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM07_RDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM07_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_REASON",
														"type": "String"
													},
													"sink": {
														"name": "RM07_REASON",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM07_TIME",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_TIME",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_TRUK",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_TRUK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_ODOM",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_ODOM",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_STIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM07_STIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM07_ETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM07_ETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM07_DRIV",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_DRIV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "RM07",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM07",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"Incremental_Range": {
						"type": "string",
						"defaultValue": "14"
					}
				},
				"variables": {
					"tempArray": {
						"type": "Array"
					},
					"TempResult": {
						"type": "Array"
					},
					"ResultsArray": {
						"type": "Array"
					},
					"OutputArray": {
						"type": "Array"
					},
					"append": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Production/TRUX"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/MSAZ01')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_MIDWEST_LOGGING_FULL_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Look up Logging Tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "SELECT * \r\n  FROM LRS_RAW.MASTER_DATA.LOGGING_LOOKUP_TRUX_COMBINED\r\n WHERE SQL_SERVER_NAME = 'MIDWEST';",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "LOGGING_LOOKUP_TRUX_COMBINED",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Loop over MIDWEST logging tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Look up Logging Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Look up Logging Tables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy MIDWEST logs",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "SQL_TABLE_NAME",
													"value": {
														"value": "@item().sql_table_name",
														"type": "Expression"
													}
												},
												{
													"name": "SOURCE",
													"value": {
														"value": "@item().snowflake_name",
														"type": "Expression"
													}
												},
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "LOG_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_TYPE",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_TYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LOG_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LOG_USER",
														"type": "String"
													},
													"sink": {
														"name": "LOG_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_TERMID",
														"type": "String"
													},
													"sink": {
														"name": "LOG_TERMID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_NOTES",
														"type": "String"
													},
													"sink": {
														"name": "LOG_NOTES",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_SERV",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_SERV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "LOG_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_FNUM",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_FNUM",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_REAS",
														"type": "String"
													},
													"sink": {
														"name": "LOG_REAS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_AUTH",
														"type": "String"
													},
													"sink": {
														"name": "LOG_AUTH",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "LOG_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LOG_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LOG_CALLID",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_CALLID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_BVAL",
														"type": "String"
													},
													"sink": {
														"name": "LOG_BVAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_AVAL",
														"type": "String"
													},
													"sink": {
														"name": "LOG_AVAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_TASKID",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_TASKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SQL_TABLE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "SQL_TABLE_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SOURCE",
														"type": "String"
													},
													"sink": {
														"name": "SOURCE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": {
													"value": "@item().sql_table_name",
													"type": "Expression"
												},
												"database": "TRUX_LOGGING"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "MIDWEST_LOG",
												"Snowflake_Schema": "TRUX_LOGGING_RAW"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					}
				},
				"folder": {
					"name": "Production/TRUX"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/MSAZ01')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_MIDWEST_LOGGING_INCREMENTAL_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Watermark Lookup for Midwest Logging",
						"description": "Look up schema, database and table names from SQL Server and Snowflake",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TRUX_MIDWEST_LOGGING_WATERMARK",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Incremental Loop Over Midwest Watermark Table",
						"description": "Activity to loop over tables that have primary keys with incremental IDs. This loop looks at our Midwest Logging Watermark table in Snowflake and appends any IDs found in SQL Server that are greater than the latest watermark in Snowflake.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Watermark Lookup for Midwest Logging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Watermark Lookup for Midwest Logging').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Midwest Logging Incremental Delta Load",
									"description": "",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "SQL_TABLE_NAME",
													"value": {
														"value": "@item().sql_table_name",
														"type": "Expression"
													}
												},
												{
													"name": "SOURCE",
													"value": {
														"value": "@item().source",
														"type": "Expression"
													}
												},
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "SELECT * \n  FROM @{item().sql_table_name}\n WHERE LOG_ID > @{item().latest_watermark}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "LOG_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_TYPE",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_TYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LOG_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LOG_USER",
														"type": "String"
													},
													"sink": {
														"name": "LOG_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_TERMID",
														"type": "String"
													},
													"sink": {
														"name": "LOG_TERMID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_NOTES",
														"type": "String"
													},
													"sink": {
														"name": "LOG_NOTES",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_SERV",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_SERV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "LOG_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_FNUM",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_FNUM",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_REAS",
														"type": "String"
													},
													"sink": {
														"name": "LOG_REAS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_AUTH",
														"type": "String"
													},
													"sink": {
														"name": "LOG_AUTH",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "LOG_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LOG_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LOG_CALLID",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_CALLID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_BVAL",
														"type": "String"
													},
													"sink": {
														"name": "LOG_BVAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_AVAL",
														"type": "String"
													},
													"sink": {
														"name": "LOG_AVAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_TASKID",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_TASKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SQL_TABLE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "SQL_TABLE_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SOURCE",
														"type": "String"
													},
													"sink": {
														"name": "SOURCE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": {
													"value": "@item().sql_table_name",
													"type": "Expression"
												},
												"database": "TRUX_LOGGING"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "MIDWEST_LOG",
												"Snowflake_Schema": "TRUX_LOGGING_RAW"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"Incremental_Range": {
						"type": "int",
						"defaultValue": 14
					}
				},
				"folder": {
					"name": "Production/TRUX"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/MSAZ01')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tower Full Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Tower Table Names",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "select *\nfrom lrs_raw.master_data.tower_Table_names\nwhere Load_type = 'Full'",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "TOWER_TABLE_NAMES",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Tower Table Names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Tower Table Names').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy tables",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table ',item().Schema_name,'.',item().Table_name)}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01_TOWER",
											"type": "DatasetReference",
											"parameters": {
												"db": "Tower7",
												"schema": "dbo",
												"table": {
													"value": "@item().table_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_IR_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "Destination",
												"Snowflake_Schema": "Tower_Raw"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-29T04:22:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/MSAZ01_TOWER')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_IR_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tower_Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Tower Table Names",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TOWER_WATERMARK_PVT",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Ardetail Delta Load",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Tower Table Names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "Select * from ARdetail \nwhere replace(ARDETAILUID, '-', '') >  '@{activity('Tower Table Names').output.value}.ARDETAIL'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "msaz01_dm01_Azure_Blob",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ARDETAILUID",
											"type": "String"
										},
										"sink": {
											"name": "ARDETAILUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SOURCEUID",
											"type": "String"
										},
										"sink": {
											"name": "SOURCEUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "Int64"
										},
										"sink": {
											"name": "STATUS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CUSTID",
											"type": "String"
										},
										"sink": {
											"name": "CUSTID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SITEID",
											"type": "String"
										},
										"sink": {
											"name": "SITEID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DETAILTYPE",
											"type": "Int64"
										},
										"sink": {
											"name": "DETAILTYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TAX",
											"type": "String"
										},
										"sink": {
											"name": "TAX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DEBITACCT",
											"type": "String"
										},
										"sink": {
											"name": "DEBITACCT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREDITACCT",
											"type": "String"
										},
										"sink": {
											"name": "CREDITACCT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PERIOD",
											"type": "String"
										},
										"sink": {
											"name": "PERIOD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "INVOICEUID",
											"type": "String"
										},
										"sink": {
											"name": "INVOICEUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "TRANSACTIONDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DUEDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "DUEDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "GLEXPORTBATCHUID",
											"type": "String"
										},
										"sink": {
											"name": "GLEXPORTBATCHUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QUANTITY",
											"type": "Int64"
										},
										"sink": {
											"name": "QUANTITY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "UNITRATE",
											"type": "Int64"
										},
										"sink": {
											"name": "UNITRATE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ORIGINALAMOUNT",
											"type": "Int64"
										},
										"sink": {
											"name": "ORIGINALAMOUNT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "BALANCE",
											"type": "Int64"
										},
										"sink": {
											"name": "BALANCE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "BILLEDAPPLIEDAMOUNT",
											"type": "Int64"
										},
										"sink": {
											"name": "BILLEDAPPLIEDAMOUNT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DISPLAYONINVOICE",
											"type": "Int64"
										},
										"sink": {
											"name": "DISPLAYONINVOICE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DETAILSOURCE",
											"type": "Int64"
										},
										"sink": {
											"name": "DETAILSOURCE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "COMPANYID",
											"type": "String"
										},
										"sink": {
											"name": "COMPANYID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREATEDDATETIME",
											"type": "DateTime"
										},
										"sink": {
											"name": "CREATEDDATETIME",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CREDITACCTSEGTYPE",
											"type": "Int64"
										},
										"sink": {
											"name": "CREDITACCTSEGTYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DEBITACCTSEGTYPE",
											"type": "Int64"
										},
										"sink": {
											"name": "DEBITACCTSEGTYPE",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "Ardetail"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_IR_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "ARDETAIL",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "WorkOrder ID Delta Load",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Payment Delta Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "select * from Workorder \nwhere workorderid>  '@{activity('Tower Table Names').output.value}.WORKORDER'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "truncate table LRS_RAW.TOWER_RAW.WORKORDER_1",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "msaz01_dm01_Azure_Blob",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "WorkOrderID",
											"type": "String"
										},
										"sink": {
											"name": "WORKORDERID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WorkOrderUID",
											"type": "Guid"
										},
										"sink": {
											"name": "WORKORDERUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WorkPONbr",
											"type": "String"
										},
										"sink": {
											"name": "WORKPONBR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DestCertificate",
											"type": "String"
										},
										"sink": {
											"name": "DESTCERTIFICATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CODRequired",
											"type": "Int16"
										},
										"sink": {
											"name": "CODREQUIRED",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CustomerDataFileUID",
											"type": "Guid"
										},
										"sink": {
											"name": "CUSTOMERDATAFILEUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InvoiceMessage",
											"type": "String"
										},
										"sink": {
											"name": "INVOICEMESSAGE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Printed",
											"type": "Int16"
										},
										"sink": {
											"name": "PRINTED",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PrintDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "PRINTDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "PrintUser",
											"type": "String"
										},
										"sink": {
											"name": "PRINTUSER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destination",
											"type": "String"
										},
										"sink": {
											"name": "DESTINATION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ServiceQuantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "SERVICEQUANTITY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ServiceUOM",
											"type": "String"
										},
										"sink": {
											"name": "SERVICEUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ReferenceNumber",
											"type": "String"
										},
										"sink": {
											"name": "REFERENCENUMBER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TagNumber",
											"type": "String"
										},
										"sink": {
											"name": "TAGNUMBER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FinalManifestDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "FINALMANIFESTDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "IsNoChargePickup",
											"type": "Boolean"
										},
										"sink": {
											"name": "ISNOCHARGEPICKUP",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "WORKORDER"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_IR_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "WORKORDER",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Invoice Delta Load",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GLExportBatch Delta Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "select * from INVOICE \nwhere replace(INVOICEUID, '-', '') >  '@{activity('Tower Table Names').output.value}.INVOICE'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "msaz01_dm01_Azure_Blob",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "InvoiceUID",
											"type": "Guid"
										},
										"sink": {
											"name": "INVOICEUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InvoiceID",
											"type": "String"
										},
										"sink": {
											"name": "INVOICEID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "Int16"
										},
										"sink": {
											"name": "STATUS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "InvoiceContent",
											"type": "Int16"
										},
										"sink": {
											"name": "INVOICECONTENT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PrintInvoice",
											"type": "Int16"
										},
										"sink": {
											"name": "PRINTINVOICE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "InvoiceOrderKey",
											"type": "String"
										},
										"sink": {
											"name": "INVOICEORDERKEY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BillBatchUID",
											"type": "Guid"
										},
										"sink": {
											"name": "BILLBATCHUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BillCustID",
											"type": "String"
										},
										"sink": {
											"name": "BILLCUSTID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "BillSiteID",
											"type": "String"
										},
										"sink": {
											"name": "BILLSITEID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "BillName",
											"type": "String"
										},
										"sink": {
											"name": "BILLNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BillContact",
											"type": "String"
										},
										"sink": {
											"name": "BILLCONTACT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BillAddressUID",
											"type": "Guid"
										},
										"sink": {
											"name": "BILLADDRESSUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BillPhone",
											"type": "String"
										},
										"sink": {
											"name": "BILLPHONE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BillFax",
											"type": "String"
										},
										"sink": {
											"name": "BILLFAX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BillEmail",
											"type": "String"
										},
										"sink": {
											"name": "BILLEMAIL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SiteAddressUID",
											"type": "Guid"
										},
										"sink": {
											"name": "SITEADDRESSUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InvoiceDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "INVOICEDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "LastInvoiceDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LASTINVOICEDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DueDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "DUEDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "FinanceChargeThruDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "FINANCECHARGETHRUDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CustClass",
											"type": "String"
										},
										"sink": {
											"name": "CUSTCLASS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BalForward",
											"type": "Decimal"
										},
										"sink": {
											"name": "BALFORWARD",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AgingBal00",
											"type": "Decimal"
										},
										"sink": {
											"name": "AGINGBAL00",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AgingBal01",
											"type": "Decimal"
										},
										"sink": {
											"name": "AGINGBAL01",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AgingBal02",
											"type": "Decimal"
										},
										"sink": {
											"name": "AGINGBAL02",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AgingBal03",
											"type": "Decimal"
										},
										"sink": {
											"name": "AGINGBAL03",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AgingBal04",
											"type": "Decimal"
										},
										"sink": {
											"name": "AGINGBAL04",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "NewBalance",
											"type": "Decimal"
										},
										"sink": {
											"name": "NEWBALANCE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TotSvcOneTime",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTSVCONETIME",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TotSvcRecurring",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTSVCRECURRING",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TotSvcOnCall",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTSVCONCALL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TotSvcTaxes",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTSVCTAXES",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TotFinCharges",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTFINCHARGES",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TotCharges",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTCHARGES",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TotChargeTaxes",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTCHARGETAXES",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TotCredits",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTCREDITS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TotCreditTaxes",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTCREDITTAXES",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TotPayments",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTPAYMENTS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AutomaticPaymentType",
											"type": "Int16"
										},
										"sink": {
											"name": "AUTOMATICPAYMENTTYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CompanyID",
											"type": "String"
										},
										"sink": {
											"name": "COMPANYID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InvoiceMailingOption",
											"type": "Int16"
										},
										"sink": {
											"name": "INVOICEMAILINGOPTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InvoiceInsert",
											"type": "String"
										},
										"sink": {
											"name": "INVOICEINSERT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ExternalInvoiceNbr",
											"type": "String"
										},
										"sink": {
											"name": "EXTERNALINVOICENBR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InvoiceDetailFormat",
											"type": "Int16"
										},
										"sink": {
											"name": "INVOICEDETAILFORMAT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LineOfBusiness",
											"type": "String"
										},
										"sink": {
											"name": "LINEOFBUSINESS",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "INVOICE"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_IR_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "INVOICE",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "GLExportBatch Delta Load",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Ardetail Delta Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "select * from GLEXPORTBATCH \nwhere replace(GLEXPORTBATCHUID, '-', '') >  '@{activity('Tower Table Names').output.value}.GLEXPORTBATCH'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "msaz01_dm01_Azure_Blob",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GLExportBatchUID",
											"type": "Guid"
										},
										"sink": {
											"name": "GLEXPORTBATCHUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "GLExportBatchID",
											"type": "String"
										},
										"sink": {
											"name": "GLEXPORTBATCHID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ExportDateTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "EXPORTDATETIME",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "Int16"
										},
										"sink": {
											"name": "STATUS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CreditTotal",
											"type": "Decimal"
										},
										"sink": {
											"name": "CREDITTOTAL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DebitTotal",
											"type": "Decimal"
										},
										"sink": {
											"name": "DEBITTOTAL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FileCount",
											"type": "Int32"
										},
										"sink": {
											"name": "FILECOUNT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "BatchType",
											"type": "Int16"
										},
										"sink": {
											"name": "BATCHTYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CompanyID",
											"type": "String"
										},
										"sink": {
											"name": "COMPANYID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Period",
											"type": "String"
										},
										"sink": {
											"name": "PERIOD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CompanyList",
											"type": "String"
										},
										"sink": {
											"name": "COMPANYLIST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PeriodList",
											"type": "String"
										},
										"sink": {
											"name": "PERIODLIST",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "GLEXPORTBATCH"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_IR_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "GLEXPORTBATCH",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Payment Delta Load",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Invoice Detail Delta Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "select * from payment \nwhere replace(paymentuid, '-', '') >  '@{activity('Tower Table Names').output.value}.PAYMENT'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "msaz01_dm01_Azure_Blob",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PaymentUID",
											"type": "Guid"
										},
										"sink": {
											"name": "PAYMENTUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PaymentBatchUID",
											"type": "Guid"
										},
										"sink": {
											"name": "PAYMENTBATCHUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BatchSequence",
											"type": "Int32"
										},
										"sink": {
											"name": "BATCHSEQUENCE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SourceUID",
											"type": "Guid"
										},
										"sink": {
											"name": "SOURCEUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PaymentDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "PAYMENTDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "Int16"
										},
										"sink": {
											"name": "STATUS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ClearOrNSFDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CLEARORNSFDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CustID",
											"type": "String"
										},
										"sink": {
											"name": "CUSTID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PaymentMethod",
											"type": "Int16"
										},
										"sink": {
											"name": "PAYMENTMETHOD",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CreditCardType",
											"type": "Int16"
										},
										"sink": {
											"name": "CREDITCARDTYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PaymentBankAcct",
											"type": "String"
										},
										"sink": {
											"name": "PAYMENTBANKACCT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PaymentIDNbr",
											"type": "String"
										},
										"sink": {
											"name": "PAYMENTIDNBR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "AMOUNT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ApplicationMethod",
											"type": "Int16"
										},
										"sink": {
											"name": "APPLICATIONMETHOD",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RemoveCreditHold",
											"type": "Int16"
										},
										"sink": {
											"name": "REMOVECREDITHOLD",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CreditAmount",
											"type": "Decimal"
										},
										"sink": {
											"name": "CREDITAMOUNT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CreditReason",
											"type": "String"
										},
										"sink": {
											"name": "CREDITREASON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PaymentNote",
											"type": "String"
										},
										"sink": {
											"name": "PAYMENTNOTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CustomerBalance",
											"type": "Decimal"
										},
										"sink": {
											"name": "CUSTOMERBALANCE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "BankAccountXRefUID",
											"type": "Guid"
										},
										"sink": {
											"name": "BANKACCOUNTXREFUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CollectionsNotified",
											"type": "Int16"
										},
										"sink": {
											"name": "COLLECTIONSNOTIFIED",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "CustomerPaymentAccountUID",
											"type": "Guid"
										},
										"sink": {
											"name": "CUSTOMERPAYMENTACCOUNTUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ReversedByDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "REVERSEDBYDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ReversedByUserID",
											"type": "String"
										},
										"sink": {
											"name": "REVERSEDBYUSERID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ReversalReasonNote",
											"type": "String"
										},
										"sink": {
											"name": "REVERSALREASONNOTE",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "PAYMENT"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_IR_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "PAYMENT",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Invoice Detail Delta Load",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Invoice Delta Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "select * from INVOICEDETAIL \nwhere replace(INVOICEDETAILUID, '-', '') > '@{activity('Tower Table Names').output.value}.INVOICEDETAIL'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "SKIP_FILE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "msaz01_dm01_Azure_Blob",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "InvoiceDetailUID",
											"type": "Guid"
										},
										"sink": {
											"name": "INVOICEDETAILUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InvoiceUID",
											"type": "Guid"
										},
										"sink": {
											"name": "INVOICEUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SiteID",
											"type": "String"
										},
										"sink": {
											"name": "SITEID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ServiceUID",
											"type": "Guid"
										},
										"sink": {
											"name": "SERVICEUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SourceUID",
											"type": "Guid"
										},
										"sink": {
											"name": "SOURCEUID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SourceIDNbr",
											"type": "String"
										},
										"sink": {
											"name": "SOURCEIDNBR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LineType",
											"type": "Int16"
										},
										"sink": {
											"name": "LINETYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "LineSubType",
											"type": "Int16"
										},
										"sink": {
											"name": "LINESUBTYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SvcCode",
											"type": "String"
										},
										"sink": {
											"name": "SVCCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Salesperson",
											"type": "String"
										},
										"sink": {
											"name": "SALESPERSON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SvcFrequency",
											"type": "String"
										},
										"sink": {
											"name": "SVCFREQUENCY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "QUANTITY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "AMOUNT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "UnitPrice",
											"type": "Decimal"
										},
										"sink": {
											"name": "UNITPRICE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "TaxAmount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TAXAMOUNT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "STARTDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "EndDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ENDDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "PrintRecord",
											"type": "Int16"
										},
										"sink": {
											"name": "PRINTRECORD",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "LineOrderKey1",
											"type": "String"
										},
										"sink": {
											"name": "LINEORDERKEY1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LineOrderKey2",
											"type": "String"
										},
										"sink": {
											"name": "LINEORDERKEY2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LineOrderKey3",
											"type": "String"
										},
										"sink": {
											"name": "LINEORDERKEY3",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LineOrderKey4",
											"type": "String"
										},
										"sink": {
											"name": "LINEORDERKEY4",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PONbr",
											"type": "String"
										},
										"sink": {
											"name": "PONBR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "POSource",
											"type": "Int16"
										},
										"sink": {
											"name": "POSOURCE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AssignedToCollections",
											"type": "Int16"
										},
										"sink": {
											"name": "ASSIGNEDTOCOLLECTIONS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AssignedToCollectionsDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ASSIGNEDTOCOLLECTIONSDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DiscountAmount",
											"type": "Decimal"
										},
										"sink": {
											"name": "DISCOUNTAMOUNT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PriorARDStatus",
											"type": "Int16"
										},
										"sink": {
											"name": "PRIORARDSTATUS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "LineLevel",
											"type": "Int16"
										},
										"sink": {
											"name": "LINELEVEL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SiteAddressUID",
											"type": "Guid"
										},
										"sink": {
											"name": "SITEADDRESSUID",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01_TOWER",
								"type": "DatasetReference",
								"parameters": {
									"db": "Tower7",
									"schema": "dbo",
									"table": "INVOICEDETAIL"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_IR_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "INVOICEDETAIL",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-29T04:22:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/MSAZ01_TOWER')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_IR_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VENA_DAILY_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Vena Financialj Model Daily Load",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "VENA_FINANCIAL_MODEL DAILY_LOAD",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Production/Orchestration"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-02T17:06:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/VENA_FINANCIAL_MODEL DAILY_LOAD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VENA_DAILY_LOAD_TEST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get All Files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "VENA_Raw_All_Files",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Find The Latest File",
						"description": "Loop through files sequentially and set FileName and LastModified variables to the values of the latest file dropped in a folder.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get All Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get All Files').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get File Attributes",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "VENA_Raw_Each_Files",
											"type": "DatasetReference",
											"parameters": {
												"pFileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"itemName",
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "If Condition",
									"description": "if condition to find the newest file for copy",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get File Attributes",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('Get File Attributes').output.lastModified,variables('vLastModified'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Set vLastModified",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Set vFileName",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "vLastModified",
													"value": {
														"value": "@activity('Get File Attributes').output.lastModified",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set vFileName",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "vFileName",
													"value": {
														"value": "@activity('Get File Attributes').output.itemName",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Load Latest File To Snowflake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Find The Latest File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "FileName",
										"value": {
											"value": "@variables('vFileName')",
											"type": "Expression"
										}
									},
									{
										"name": "LastModified",
										"value": {
											"value": "@variables('vLastModified')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_SANDBOX.VENA_RAW.VENA_FINANCE_MODEL;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "VENA_Raw_Each_Files",
								"type": "DatasetReference",
								"parameters": {
									"pFileName": {
										"value": "@variables('vFileName')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Sandbox_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VENA_FINANCE_MODEL",
									"Snowflake_Schema": "VENA_RAW"
								}
							}
						]
					},
					{
						"name": "Flag Old Files For Deletion",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Delete1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "VENA_Raw_All_Files",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"modifiedDatetimeEnd": {
									"value": "@adddays(utcnow(),-365)",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Delete Old Files",
						"description": "For Loop to loop through files older than 365 days for deletion",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Flag Old Files For Deletion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Flag Old Files For Deletion').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Delete Each File",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "VENA_Raw_Each_Files",
											"type": "DatasetReference",
											"parameters": {
												"pFileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Archive the File in Processed Folder",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load Latest File To Snowflake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "VENA_Raw_All_Files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "VENA_Raw_Archive_All_Files",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Archive the File in Processed Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "VENA_Raw_All_Files",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": false,
								"wildcardFileName": "*",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"vFileName": {
						"type": "String",
						"defaultValue": "finance_model_2023-08-28T21:29:51.1420557Z"
					},
					"vLastModified": {
						"type": "String",
						"defaultValue": "1900-01-01 00:00;00"
					}
				},
				"folder": {
					"name": "Sandbox/Vena"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:57:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/VENA_Raw_All_Files')]",
				"[concat(variables('factoryId'), '/datasets/VENA_Raw_Each_Files')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Sandbox_V2')]",
				"[concat(variables('factoryId'), '/datasets/VENA_Raw_Archive_All_Files')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VENA_DAILY_LOAD_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load Latest File To Snowflake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get File Name and Last Modified Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "FileName",
										"value": {
											"value": "@variables('vFileName')",
											"type": "Expression"
										}
									},
									{
										"name": "LastModified",
										"value": {
											"value": "@variables('vLastModified')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "finance_model*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_SANDBOX.VENA_RAW.VENA_FINANCE_MODEL;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "_Account",
											"type": "String"
										},
										"sink": {
											"name": "_Account",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Location",
											"type": "String"
										},
										"sink": {
											"name": "_Location",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Line/Dept",
											"type": "String"
										},
										"sink": {
											"name": "_Line/Dept",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Material Type/Customer",
											"type": "String"
										},
										"sink": {
											"name": "_Material Type/Customer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Data Source",
											"type": "String"
										},
										"sink": {
											"name": "_Data Source",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Year",
											"type": "String"
										},
										"sink": {
											"name": "_Year",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Period",
											"type": "String"
										},
										"sink": {
											"name": "_Period",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Scenario",
											"type": "String"
										},
										"sink": {
											"name": "_Scenario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Measure",
											"type": "String"
										},
										"sink": {
											"name": "_Measure",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_value",
											"type": "String"
										},
										"sink": {
											"name": "_value",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_etl_id",
											"type": "String"
										},
										"sink": {
											"name": "_etl_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FileName",
											"type": "String"
										},
										"sink": {
											"name": "_File Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastModified",
											"type": "String"
										},
										"sink": {
											"name": "ADF_TIMESTAMP",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "VENA_Raw_All_Files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Sandbox_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VENA_FINANCE_MODEL",
									"Snowflake_Schema": "VENA_RAW"
								}
							}
						]
					},
					{
						"name": "Archive the File in Processed Folder",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load Latest File To Snowflake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "finance_model*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "VENA_Raw_All_Files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "VENA_Raw_Archive_All_Files",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Archived File",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Archive the File in Processed Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "VENA_Raw_All_Files",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": false,
								"wildcardFileName": "finance_model*",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Get File Name and Last Modified Date",
						"description": "Get File Name and Last Modified Date",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "VENA_Raw_All_Files",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"itemName",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Flag Old Files For Deletion",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Delete Archived File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "VENA_Raw_Archive_All_Files",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"modifiedDatetimeEnd": {
									"value": "@adddays(utcnow(),-365)",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Delete Old Files",
						"description": "For Loop to loop through files older than 365 days for deletion",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Flag Old Files For Deletion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Flag Old Files For Deletion').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Delete Each File",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "VENA_Raw_Each_Files",
											"type": "DatasetReference",
											"parameters": {
												"pFileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"vFileName": {
						"type": "String",
						"defaultValue": "finance_model_2023-09-21T11:00:12.9206307Z"
					},
					"vLastModified": {
						"type": "String",
						"defaultValue": "9/21/2023"
					}
				},
				"folder": {
					"name": "Sandbox/Vena"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:57:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/VENA_Raw_All_Files')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Sandbox_V2')]",
				"[concat(variables('factoryId'), '/datasets/VENA_Raw_Archive_All_Files')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]",
				"[concat(variables('factoryId'), '/datasets/VENA_Raw_Each_Files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VENA_FINANCIAL_MODEL DAILY_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load Latest File To Snowflake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "FileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "LastModified",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "finance_model*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE VENA_RAW.VENA_FINANCE_MODEL;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "msaz01_dm01_Azure_Blob",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "_Account",
											"type": "String"
										},
										"sink": {
											"name": "_Account",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Location",
											"type": "String"
										},
										"sink": {
											"name": "_Location",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Line/Dept",
											"type": "String"
										},
										"sink": {
											"name": "_Line/Dept",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Material Type/Customer",
											"type": "String"
										},
										"sink": {
											"name": "_Material Type/Customer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Data Source",
											"type": "String"
										},
										"sink": {
											"name": "_Data Source",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Year",
											"type": "String"
										},
										"sink": {
											"name": "_Year",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Period",
											"type": "String"
										},
										"sink": {
											"name": "_Period",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Scenario",
											"type": "String"
										},
										"sink": {
											"name": "_Scenario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Measure",
											"type": "String"
										},
										"sink": {
											"name": "_Measure",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_value",
											"type": "String"
										},
										"sink": {
											"name": "_value",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_etl_id",
											"type": "String"
										},
										"sink": {
											"name": "_etl_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FileName",
											"type": "String"
										},
										"sink": {
											"name": "_File Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastModified",
											"type": "String"
										},
										"sink": {
											"name": "ADF_TIMESTAMP",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "VENA_Raw_All_Files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VENA_FINANCE_MODEL",
									"Snowflake_Schema": "VENA_RAW"
								}
							}
						]
					},
					{
						"name": "Archive the File in Processed Folder",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load Latest File To Snowflake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "finance_model*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ""
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "VENA_Raw_All_Files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "VENA_Raw_Archive_All_Files",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Archived File",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Archive the File in Processed Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "VENA_Raw_All_Files",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "finance_model*",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Flag Old Files For Deletion",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Delete Archived File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "VENA_Raw_Archive_All_Files",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"modifiedDatetimeEnd": {
									"value": "@adddays(utcnow(),-365)",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Delete Old Files",
						"description": "For Loop to loop through files older than 365 days for deletion",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Flag Old Files For Deletion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Flag Old Files For Deletion').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Delete Each File",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "VENA_Raw_Each_Files",
											"type": "DatasetReference",
											"parameters": {
												"pFileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Production/VENA"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/VENA_Raw_All_Files')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/VENA_Raw_Archive_All_Files')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]",
				"[concat(variables('factoryId'), '/datasets/VENA_Raw_Each_Files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "File Name",
										"value": "$$FILENAME"
									},
									{
										"name": "Timestamp",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "finance*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "Truncate Table LRS_Sandbox.VENA_RAW.VENA_FINANCE_MODEL;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "_Account",
											"type": "String"
										},
										"sink": {
											"name": "_Account",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Location",
											"type": "String"
										},
										"sink": {
											"name": "_Location",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Line/Dept",
											"type": "String"
										},
										"sink": {
											"name": "_Line/Dept",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Material Type/Customer",
											"type": "String"
										},
										"sink": {
											"name": "_Material Type/Customer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Data Source",
											"type": "String"
										},
										"sink": {
											"name": "_Data Source",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Year",
											"type": "String"
										},
										"sink": {
											"name": "_Year",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Period",
											"type": "String"
										},
										"sink": {
											"name": "_Period",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Scenario",
											"type": "String"
										},
										"sink": {
											"name": "_Scenario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Measure",
											"type": "String"
										},
										"sink": {
											"name": "_Measure",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_value",
											"type": "String"
										},
										"sink": {
											"name": "_value",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_etl_id",
											"type": "String"
										},
										"sink": {
											"name": "_etl_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "File Name",
											"type": "String"
										},
										"sink": {
											"name": "_File Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Timestamp",
											"type": "String"
										},
										"sink": {
											"name": "ADF_TIMESTAMP",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "VENA_Raw_All_Files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Sandbox_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VENA_FINANCE_MODEL",
									"Snowflake_Schema": "VENA_RAW"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Sandbox/Vena"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:57:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/VENA_Raw_All_Files')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Sandbox_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"url": "https://lakeshorers-nosso.prd.mykronos.com/api/authentication/access_token",
							"body": "username=APIUSER&password=Lrsapiprduser2024!&client_id=eKyVVdOuXU3tXBFsK4TMNeFKgK87DXRF&client_secret=cGFb8UjY8ocRIFOd&grant_type=password&auth_chain=OAuthLdapService"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2_Tested_By_Yvette')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "File Name",
										"value": "$$FILENAME"
									},
									{
										"name": "Timestamp",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "finance*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "Truncate Table LRS_Sandbox.VENA_RAW.VENA_FINANCE_MODEL",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "_Account",
											"type": "String"
										},
										"sink": {
											"name": "_Account",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Location",
											"type": "String"
										},
										"sink": {
											"name": "_Location",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Line/Dept",
											"type": "String"
										},
										"sink": {
											"name": "_Line/Dept",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Material Type/Customer",
											"type": "String"
										},
										"sink": {
											"name": "_Material Type/Customer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Data Source",
											"type": "String"
										},
										"sink": {
											"name": "_Data Source",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Year",
											"type": "String"
										},
										"sink": {
											"name": "_Year",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Period",
											"type": "String"
										},
										"sink": {
											"name": "_Period",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Scenario",
											"type": "String"
										},
										"sink": {
											"name": "_Scenario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Measure",
											"type": "String"
										},
										"sink": {
											"name": "_Measure",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_value",
											"type": "String"
										},
										"sink": {
											"name": "_value",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_etl_id",
											"type": "String"
										},
										"sink": {
											"name": "_etl_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "File Name",
											"type": "String"
										},
										"sink": {
											"name": "_File Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Timestamp",
											"type": "String"
										},
										"sink": {
											"name": "ADF_TIMESTAMP",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "VENA_Raw_All_Files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Sandbox_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VENA_FINANCE_MODEL",
									"Snowflake_Schema": "VENA_RAW"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Sandbox/Vena"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:57:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/VENA_Raw_All_Files')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Sandbox_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_process_adp_employee_directory_file')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Employee Directory Files",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "empDirectory.csv",
									"wildcardFileName": "empDirectory.csv*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_adp_employee_directory_raw",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ADP_Hours_CSV_ALL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get all files in empDirectory folder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Copy Employee Directory Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADP_Hours_XLS_ALL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Production/ADP"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-07T21:44:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adp_employee_directory_raw')]",
				"[concat(variables('factoryId'), '/datasets/ADP_Hours_CSV_ALL')]",
				"[concat(variables('factoryId'), '/datasets/ADP_Hours_XLS_ALL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_process_adp_hours_file')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy XLS files into",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "xls",
									"wildcardFileName": "adp_all_hours_*",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "Column1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "Column2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "Column3",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "Column4",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "Column5",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 6
										},
										"sink": {
											"name": "Column6",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 7
										},
										"sink": {
											"name": "Column7",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 8
										},
										"sink": {
											"name": "Column8",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 9
										},
										"sink": {
											"name": "Column9",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 10
										},
										"sink": {
											"name": "Column10",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 11
										},
										"sink": {
											"name": "Column11",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 12
										},
										"sink": {
											"name": "Column12",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 13
										},
										"sink": {
											"name": "Column13",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 14
										},
										"sink": {
											"name": "Column14",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 15
										},
										"sink": {
											"name": "Column15",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 16
										},
										"sink": {
											"name": "Column16",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 17
										},
										"sink": {
											"name": "Column17",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 18
										},
										"sink": {
											"name": "Column18",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 19
										},
										"sink": {
											"name": "Column19",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 20
										},
										"sink": {
											"name": "Column20",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 21
										},
										"sink": {
											"name": "Column21",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ADP_Hours_XLS_ALL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ADP_Hours_CSV_ALL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get all Files in XLS folder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Copy XLS files into",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADP_Hours_XLS_ALL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete each file",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get all Files in XLS folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get all Files in XLS folder').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Check for anchor file",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().name,'test')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Delete XLS File",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "ADP_Hours_XLS",
														"type": "DatasetReference",
														"parameters": {
															"pFilename": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Load ADP Hours to Snowflake",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Delete each file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Load ADP Hours to Snowflake",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ADPHours": {},
									"Snowflake": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "1b79b239-a2bc-4d02-b5fb-bc97c83f1c36"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Production/ADP"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-07T21:44:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADP_Hours_XLS_ALL')]",
				"[concat(variables('factoryId'), '/datasets/ADP_Hours_CSV_ALL')]",
				"[concat(variables('factoryId'), '/dataflows/Load ADP Hours to Snowflake')]",
				"[concat(variables('factoryId'), '/datasets/ADP_Hours_XLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_process_adp_terminations_file')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy ADP Term to Snowflake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Loop Through All Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "File Name",
										"value": {
											"value": "@variables('Var_File_Name')",
											"type": "Expression"
										}
									},
									{
										"name": "Last Modified",
										"value": {
											"value": "@variables('Var_Last_Modified')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.ADP_RAW.ADP_TERMINATION",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Position ID",
											"type": "String"
										},
										"sink": {
											"name": "Position ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Last Name",
											"type": "String"
										},
										"sink": {
											"name": "Legal Last Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "First Name",
											"type": "String"
										},
										"sink": {
											"name": "Legal First Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Position Status",
											"type": "String"
										},
										"sink": {
											"name": "Position Status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Home Department Code",
											"type": "String"
										},
										"sink": {
											"name": "Home Department Code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Home Department Description",
											"type": "String"
										},
										"sink": {
											"name": "Home Department Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Union Local Code",
											"type": "String"
										},
										"sink": {
											"name": "Union Local Code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Job Title Description",
											"type": "String"
										},
										"sink": {
											"name": "Job Title Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Location Code",
											"type": "String"
										},
										"sink": {
											"name": "Location Code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Location Description",
											"type": "String"
										},
										"sink": {
											"name": "Location Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Reports To Name",
											"type": "String"
										},
										"sink": {
											"name": "Reports To Legal Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Hire Date",
											"type": "String"
										},
										"sink": {
											"name": "Hire Date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Termination Date",
											"type": "String"
										},
										"sink": {
											"name": "Termination Date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Termination Reason Description"
										},
										"sink": {
											"name": "Termination Reason Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Worked in State Code",
											"type": "String"
										},
										"sink": {
											"name": "Worked in State Code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Personal Contact: Home Phone",
											"type": "String"
										},
										"sink": {
											"name": "Personal Contact: Home Phone",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Personal Contact: Personal Email",
											"type": "String"
										},
										"sink": {
											"name": "Personal Contact: Personal Email",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Personal Contact: Personal Mobile",
											"type": "String"
										},
										"sink": {
											"name": "Personal Contact: Personal Mobile",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tax Withholdings - Effective Date",
											"type": "String"
										},
										"sink": {
											"name": "Tax Withholdings - Effective Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Employment Profile - Effective Date",
											"type": "String"
										},
										"sink": {
											"name": "Employment Profile - Effective Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "File Name",
											"type": "String"
										},
										"sink": {
											"name": "File Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Last Modified",
											"type": "String"
										},
										"sink": {
											"name": "Last Modified",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ADP_Terminations_Raw_Each_File",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('Var_File_Name')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "ADP_TERMINATION",
									"Snowflake_Schema": "ADP_RAW"
								}
							}
						]
					},
					{
						"name": "Get All ADP Files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADP_Terminations_Raw_All_Files",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Loop Through All Files",
						"description": "Loop through all ADP Files in the blob storage",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get All ADP Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get All ADP Files').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get Files Attributes",
									"description": "Get File's name and last modified date",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ADP_Terminations_Raw_Each_File",
											"type": "DatasetReference",
											"parameters": {
												"FileName": "@item().name"
											}
										},
										"fieldList": [
											"lastModified",
											"itemName"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"description": "find the newest file using last modified attribute",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Files Attributes",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('Get Files Attributes').output.lastModified, variables('Var_Last_Modified'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "File Name",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "Var_File_Name",
													"value": {
														"value": "@activity('Get Files Attributes').output.itemName",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Last Modified",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "File Name",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "Var_Last_Modified",
													"value": {
														"value": "@activity('Get Files Attributes').output.lastModified",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Get Older FIles",
						"description": "Get files older than 365 days",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Copy ADP Term to Snowflake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADP_Terminations_Raw_All_Files",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"modifiedDatetimeEnd": {
									"value": "@addDays(utcnow(),-365)",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Loop through older files",
						"description": "loop through each files older than 365 days for deletion",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Older FIles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Older FIles').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Delete files older than 365 days",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ADP_Terminations_Raw_Each_File",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Var_File_Name": {
						"type": "String",
						"defaultValue": "terms.csv_2024-09-06T12:28:33Z"
					},
					"Var_Last_Modified": {
						"type": "String",
						"defaultValue": "1900-01-01 00:00:00"
					}
				},
				"folder": {
					"name": "Production/ADP"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-07T21:18:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADP_Terminations_Raw_Each_File')]",
				"[concat(variables('factoryId'), '/datasets/LRS_Snowflake_Raw_V2')]",
				"[concat(variables('factoryId'), '/datasets/ADP_Terminations_Raw_All_Files')]",
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADP_Hours_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": "csv",
						"container": "adphours"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "��\u0011ࡱ\u001a�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000>\u0000\u0003\u0000��\t\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Y\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000����\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000v\u0000\u0000\u0000�\u0000\u0000\u0000t\u0001\u0000\u0000�\u0001\u0000\u0000r\u0002\u0000\u0000�\u0002\u0000\u0000p\u0003\u0000\u0000�\u0003\u0000\u0000�\u0004\u0000\u0000�\u0004\u0000\u0000~\u0005\u0000\u0000�\u0005\u0000\u0000|\u0006\u0000\u0000�\u0006\u0000\u0000z\u0007\u0000\u0000�\u0007\u0000\u0000x\b\u0000\u0000�\b\u0000\u0000v\t\u0000\u0000�\t\u0000\u0000t",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADP_Hours_CSV_ALL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "csv",
						"container": "adphours"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "��\u0011ࡱ\u001a�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000>\u0000\u0003\u0000��\t\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Y\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000����\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000v\u0000\u0000\u0000�\u0000\u0000\u0000t\u0001\u0000\u0000�\u0001\u0000\u0000r\u0002\u0000\u0000�\u0002\u0000\u0000p\u0003\u0000\u0000�\u0003\u0000\u0000�\u0004\u0000\u0000�\u0004\u0000\u0000~\u0005\u0000\u0000�\u0005\u0000\u0000|\u0006\u0000\u0000�\u0006\u0000\u0000z\u0007\u0000\u0000�\u0007\u0000\u0000x\b\u0000\u0000�\b\u0000\u0000v\t\u0000\u0000�\t\u0000\u0000t",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADP_Hours_XLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFilename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().pFilename",
							"type": "Expression"
						},
						"folderPath": "xls",
						"container": "adphours"
					},
					"sheetIndex": 0,
					"range": "A10:T50000",
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADP_Hours_XLS_ALL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "xls",
						"container": "adphours"
					},
					"sheetIndex": 0,
					"range": "",
					"firstRowAsHeader": false
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADP_Terminations_Raw_All_Files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "msaz01_dm01_Azure_Blob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ADP"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "terms.csv",
						"container": "adp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADP_Terminations_Raw_Each_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "msaz01_dm01_Azure_Blob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADP"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "terms.csv",
						"container": "adp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ILDC93')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ildc93_dm01_SQL_Server",
					"type": "LinkedServiceReference",
					"parameters": {
						"server": "10.170.2.4  ",
						"db": {
							"value": "@dataset().db",
							"type": "Expression"
						},
						"username": "lrsquery",
						"pw": "T0werQu3ry?"
					}
				},
				"parameters": {
					"db": {
						"type": "string"
					},
					"schema": {
						"type": "string"
					},
					"table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ildc93_dm01_SQL_Server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LRS_Snowflake_Raw_IR_V2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LRS_Snowflake_V2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Snowflake_Sink_Table": {
						"type": "string",
						"defaultValue": "DESTINATION"
					},
					"Snowflake_Schema": {
						"type": "string",
						"defaultValue": "TOWER_RAW"
					}
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Snowflake_Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Snowflake_Sink_Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LRS_Snowflake_V2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LRS_Snowflake_Raw_V2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "msaz01_dm01_Snowflake_Raw_V2",
					"type": "LinkedServiceReference",
					"parameters": {
						"database": "LRS_RAW"
					}
				},
				"parameters": {
					"Snowflake_Sink_Table": {
						"type": "string",
						"defaultValue": "DESTINATION"
					},
					"Snowflake_Schema": {
						"type": "string",
						"defaultValue": "TOWER_RAW"
					}
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Snowflake_Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Snowflake_Sink_Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Snowflake_Raw_V2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LRS_Snowflake_Sandbox_V2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "msaz01_dm01_Snowflake_Raw_V2",
					"type": "LinkedServiceReference",
					"parameters": {
						"database": "LRS_SANDBOX"
					}
				},
				"parameters": {
					"Snowflake_Sink_Table": {
						"type": "string",
						"defaultValue": "VENA_FINANCE_MODEL"
					},
					"Snowflake_Schema": {
						"type": "string",
						"defaultValue": "VENA_RAW"
					}
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Snowflake_Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Snowflake_Sink_Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Snowflake_Raw_V2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MSAZ01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "msaz01_dm01_SQL_Server",
					"type": "LinkedServiceReference",
					"parameters": {
						"server": "msaz01-sql01",
						"db": {
							"value": "@dataset().database",
							"type": "Expression"
						},
						"username": "AzureSQLReadOnlyMW",
						"pw": "4QcH9zAzure01"
					}
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"table": {
						"type": "string"
					},
					"database": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "AC01_PART",
						"type": "nvarchar"
					},
					{
						"name": "AC01_DATE",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "AC01_QTY",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "AC01_AVGCOST",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_SQL_Server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MSAZ01_TOWER')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "msaz01_dm01_SQL_Server",
					"type": "LinkedServiceReference",
					"parameters": {
						"server": "10.170.2.4",
						"db": {
							"value": "@dataset().db",
							"type": "Expression"
						},
						"username": "lrsquery",
						"pw": "T0werQu3ry?"
					}
				},
				"parameters": {
					"db": {
						"type": "string"
					},
					"schema": {
						"type": "string"
					},
					"table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_SQL_Server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SOFTPAK_DISPOSAL_SITE_DATA_FLOW_SINK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SOFTPAK"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": "Variable_disposal_site_sink",
						"container": "softpak"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CO",
						"type": "String"
					},
					{
						"name": "DISPOSAL",
						"type": "String"
					},
					{
						"name": "MATERIAL",
						"type": "String"
					},
					{
						"name": "DATE",
						"type": "String"
					},
					{
						"name": "ROUTE",
						"type": "String"
					},
					{
						"name": "DRIVER",
						"type": "String"
					},
					{
						"name": "VEHICLE",
						"type": "String"
					},
					{
						"name": "TAX BODY",
						"type": "String"
					},
					{
						"name": "TICKET",
						"type": "String"
					},
					{
						"name": "UNITS",
						"type": "String"
					},
					{
						"name": "COST",
						"type": "String"
					},
					{
						"name": "BIL$",
						"type": "String"
					},
					{
						"name": "ROUTE TYPE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SOFTPAK_DISPOSAL_SITE_DATA_FLOW_SOURCE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SOFTPAK"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": "Variable_disposal_site_report",
						"container": "softpak"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CO",
						"type": "String"
					},
					{
						"name": "DISPOSAL",
						"type": "String"
					},
					{
						"name": "MATERIAL",
						"type": "String"
					},
					{
						"name": "DATE",
						"type": "String"
					},
					{
						"name": "ROUTE",
						"type": "String"
					},
					{
						"name": "DRIVER",
						"type": "String"
					},
					{
						"name": "VEHICLE",
						"type": "String"
					},
					{
						"name": "TAX BODY",
						"type": "String"
					},
					{
						"name": "TICKET",
						"type": "String"
					},
					{
						"name": "UNITS",
						"type": "String"
					},
					{
						"name": "COST",
						"type": "String"
					},
					{
						"name": "BIL$",
						"type": "String"
					},
					{
						"name": "ROUTE TYPE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SOFTPAK_DISPOSAL_SITE_RAW_ALL_FILES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "msaz01_dm01_Azure_Blob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SOFTPAK"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Variable_disposal_site_report",
						"container": "softpak"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CO",
						"type": "String"
					},
					{
						"name": "DISPOSAL",
						"type": "String"
					},
					{
						"name": "MATERIAL",
						"type": "String"
					},
					{
						"name": "DATE",
						"type": "String"
					},
					{
						"name": "ROUTE",
						"type": "String"
					},
					{
						"name": "DRIVER",
						"type": "String"
					},
					{
						"name": "VEHICLE",
						"type": "String"
					},
					{
						"name": "TAX BODY",
						"type": "String"
					},
					{
						"name": "TICKET",
						"type": "String"
					},
					{
						"name": "UNITS",
						"type": "String"
					},
					{
						"name": "COST",
						"type": "String"
					},
					{
						"name": "BIL$",
						"type": "String"
					},
					{
						"name": "ROUTE TYPE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SOFTPAK_DISPOSAL_SITE_SINK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SOFTPAK"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Variable_disposal_site_sink",
						"container": "softpak"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SOFTPAK_SALES_RAW_ALL_FILES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SOFTPAK"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Variable_sales_report",
						"container": "softpak"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ACCT YYMM",
						"type": "String"
					},
					{
						"name": "COMPANY",
						"type": "String"
					},
					{
						"name": "CUST #",
						"type": "String"
					},
					{
						"name": "CUST NAME",
						"type": "String"
					},
					{
						"name": "TAXBODY",
						"type": "String"
					},
					{
						"name": "CYCLE",
						"type": "String"
					},
					{
						"name": "GL CODE",
						"type": "String"
					},
					{
						"name": "DATE",
						"type": "String"
					},
					{
						"name": "SIZE CD",
						"type": "String"
					},
					{
						"name": "CHG CD",
						"type": "String"
					},
					{
						"name": "DESCRIPTION",
						"type": "String"
					},
					{
						"name": "EQUIP CD",
						"type": "String"
					},
					{
						"name": "VAR 3",
						"type": "String"
					},
					{
						"name": "VAR 4",
						"type": "String"
					},
					{
						"name": "QTY",
						"type": "String"
					},
					{
						"name": "BILLED AMT",
						"type": "String"
					},
					{
						"name": "MASTER AMT",
						"type": "String"
					},
					{
						"name": "VARIANCE",
						"type": "String"
					},
					{
						"name": "VAR FLAG",
						"type": "String"
					},
					{
						"name": "INV #",
						"type": "String"
					},
					{
						"name": "W/O ACT DATE",
						"type": "String"
					},
					{
						"name": "SUB COMP",
						"type": "String"
					},
					{
						"name": "SUB CUST #",
						"type": "String"
					},
					{
						"name": "ORIG W/O#",
						"type": "String"
					},
					{
						"name": "ADJ USER",
						"type": "String"
					},
					{
						"name": "CUST START",
						"type": "String"
					},
					{
						"name": "CUST STOP",
						"type": "String"
					},
					{
						"name": "BILL FIRST NAME",
						"type": "String"
					},
					{
						"name": "BILL LAST NAME",
						"type": "String"
					},
					{
						"name": "BILL ADDRESS #",
						"type": "String"
					},
					{
						"name": "BILL ST DIR",
						"type": "String"
					},
					{
						"name": "BILL ST NAME",
						"type": "String"
					},
					{
						"name": "BILL ST SUFFIX",
						"type": "String"
					},
					{
						"name": "BILL ST DIR2",
						"type": "String"
					},
					{
						"name": "BILL APT",
						"type": "String"
					},
					{
						"name": "BILL ADDRESS-2",
						"type": "String"
					},
					{
						"name": "BILL CITY",
						"type": "String"
					},
					{
						"name": "BILL STATE",
						"type": "String"
					},
					{
						"name": "BILL ZIP",
						"type": "String"
					},
					{
						"name": "SERV NAME",
						"type": "String"
					},
					{
						"name": "SERV ADDRESS #",
						"type": "String"
					},
					{
						"name": "SERV ST DIR",
						"type": "String"
					},
					{
						"name": "SERV ST NAME",
						"type": "String"
					},
					{
						"name": "SERV ST SUFFIX",
						"type": "String"
					},
					{
						"name": "SERV ST DIR2",
						"type": "String"
					},
					{
						"name": "SERV APT",
						"type": "String"
					},
					{
						"name": "SERV ADDRESS-2",
						"type": "String"
					},
					{
						"name": "SERV CITY",
						"type": "String"
					},
					{
						"name": "SERV STATE",
						"type": "String"
					},
					{
						"name": "SERV ZIP",
						"type": "String"
					},
					{
						"name": "AREA CODE",
						"type": "String"
					},
					{
						"name": "PHONE #",
						"type": "String"
					},
					{
						"name": "CR LIMIT",
						"type": "String"
					},
					{
						"name": "VARIABLE 1",
						"type": "String"
					},
					{
						"name": "VARIABLE 2",
						"type": "String"
					},
					{
						"name": "CONTACT",
						"type": "String"
					},
					{
						"name": "RES CUSTOMER",
						"type": "String"
					},
					{
						"name": "PREV CYCLE",
						"type": "String"
					},
					{
						"name": "PRICE LIST",
						"type": "String"
					},
					{
						"name": "MATERIAL",
						"type": "String"
					},
					{
						"name": "UOM",
						"type": "String"
					},
					{
						"name": "UNITS",
						"type": "String"
					},
					{
						"name": "SALES ID",
						"type": "String"
					},
					{
						"name": "FEE CODE",
						"type": "String"
					},
					{
						"name": "ROUTE",
						"type": "String"
					},
					{
						"name": "VEHICLE",
						"type": "String"
					},
					{
						"name": "DRIVER",
						"type": "String"
					},
					{
						"name": "LANDFILL CODE",
						"type": "String"
					},
					{
						"name": "TICKET #",
						"type": "String"
					},
					{
						"name": "COST",
						"type": "String"
					},
					{
						"name": "BIN TYPE",
						"type": "String"
					},
					{
						"name": "RATE",
						"type": "String"
					},
					{
						"name": "SVC TYPE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SOFTPAK_SALES_RAW_EACH_FILE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFilename": {
						"type": "string",
						"defaultValue": "variable_sales_report_2021.csv"
					}
				},
				"folder": {
					"name": "SOFTPAK"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().pFilename",
							"type": "Expression"
						},
						"folderPath": "Variable_sales_report",
						"container": "softpak"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ACCT YYMM",
						"type": "String"
					},
					{
						"name": "COMPANY",
						"type": "String"
					},
					{
						"name": "CUST #",
						"type": "String"
					},
					{
						"name": "CUST NAME",
						"type": "String"
					},
					{
						"name": "TAXBODY",
						"type": "String"
					},
					{
						"name": "CYCLE",
						"type": "String"
					},
					{
						"name": "GL CODE",
						"type": "String"
					},
					{
						"name": "DATE",
						"type": "String"
					},
					{
						"name": "SIZE CD",
						"type": "String"
					},
					{
						"name": "CHG CD",
						"type": "String"
					},
					{
						"name": "DESCRIPTION",
						"type": "String"
					},
					{
						"name": "EQUIP CD",
						"type": "String"
					},
					{
						"name": "VAR 3",
						"type": "String"
					},
					{
						"name": "VAR 4",
						"type": "String"
					},
					{
						"name": "QTY",
						"type": "String"
					},
					{
						"name": "BILLED AMT",
						"type": "String"
					},
					{
						"name": "MASTER AMT",
						"type": "String"
					},
					{
						"name": "VARIANCE",
						"type": "String"
					},
					{
						"name": "VAR FLAG",
						"type": "String"
					},
					{
						"name": "INV #",
						"type": "String"
					},
					{
						"name": "W/O ACT DATE",
						"type": "String"
					},
					{
						"name": "SUB COMP",
						"type": "String"
					},
					{
						"name": "SUB CUST #",
						"type": "String"
					},
					{
						"name": "ORIG W/O#",
						"type": "String"
					},
					{
						"name": "ADJ USER",
						"type": "String"
					},
					{
						"name": "CUST START",
						"type": "String"
					},
					{
						"name": "CUST STOP",
						"type": "String"
					},
					{
						"name": "BILL FIRST NAME",
						"type": "String"
					},
					{
						"name": "BILL LAST NAME",
						"type": "String"
					},
					{
						"name": "BILL ADDRESS #",
						"type": "String"
					},
					{
						"name": "BILL ST DIR",
						"type": "String"
					},
					{
						"name": "BILL ST NAME",
						"type": "String"
					},
					{
						"name": "BILL ST SUFFIX",
						"type": "String"
					},
					{
						"name": "BILL ST DIR2",
						"type": "String"
					},
					{
						"name": "BILL APT",
						"type": "String"
					},
					{
						"name": "BILL ADDRESS-2",
						"type": "String"
					},
					{
						"name": "BILL CITY",
						"type": "String"
					},
					{
						"name": "BILL STATE",
						"type": "String"
					},
					{
						"name": "BILL ZIP",
						"type": "String"
					},
					{
						"name": "SERV NAME",
						"type": "String"
					},
					{
						"name": "SERV ADDRESS #",
						"type": "String"
					},
					{
						"name": "SERV ST DIR",
						"type": "String"
					},
					{
						"name": "SERV ST NAME",
						"type": "String"
					},
					{
						"name": "SERV ST SUFFIX",
						"type": "String"
					},
					{
						"name": "SERV ST DIR2",
						"type": "String"
					},
					{
						"name": "SERV APT",
						"type": "String"
					},
					{
						"name": "SERV ADDRESS-2",
						"type": "String"
					},
					{
						"name": "SERV CITY",
						"type": "String"
					},
					{
						"name": "SERV STATE",
						"type": "String"
					},
					{
						"name": "SERV ZIP",
						"type": "String"
					},
					{
						"name": "AREA CODE",
						"type": "String"
					},
					{
						"name": "PHONE #",
						"type": "String"
					},
					{
						"name": "CR LIMIT",
						"type": "String"
					},
					{
						"name": "VARIABLE 1",
						"type": "String"
					},
					{
						"name": "VARIABLE 2",
						"type": "String"
					},
					{
						"name": "CONTACT",
						"type": "String"
					},
					{
						"name": "RES CUSTOMER",
						"type": "String"
					},
					{
						"name": "PREV CYCLE",
						"type": "String"
					},
					{
						"name": "PRICE LIST",
						"type": "String"
					},
					{
						"name": "MATERIAL",
						"type": "String"
					},
					{
						"name": "UOM",
						"type": "String"
					},
					{
						"name": "UNITS",
						"type": "String"
					},
					{
						"name": "SALES ID",
						"type": "String"
					},
					{
						"name": "FEE CODE",
						"type": "String"
					},
					{
						"name": "ROUTE",
						"type": "String"
					},
					{
						"name": "VEHICLE",
						"type": "String"
					},
					{
						"name": "DRIVER",
						"type": "String"
					},
					{
						"name": "LANDFILL CODE",
						"type": "String"
					},
					{
						"name": "TICKET #",
						"type": "String"
					},
					{
						"name": "COST",
						"type": "String"
					},
					{
						"name": "BIN TYPE",
						"type": "String"
					},
					{
						"name": "RATE",
						"type": "String"
					},
					{
						"name": "SVC TYPE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SoftPak_Disposal_site_Raw_EachFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "msaz01_dm01_Azure_Blob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": "Variable_disposal_site_report",
						"container": "softpak"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CO",
						"type": "String"
					},
					{
						"name": "DISPOSAL",
						"type": "String"
					},
					{
						"name": "MATERIAL",
						"type": "String"
					},
					{
						"name": "DATE",
						"type": "String"
					},
					{
						"name": "ROUTE",
						"type": "String"
					},
					{
						"name": "DRIVER",
						"type": "String"
					},
					{
						"name": "VEHICLE",
						"type": "String"
					},
					{
						"name": "TAX BODY",
						"type": "String"
					},
					{
						"name": "TICKET",
						"type": "String"
					},
					{
						"name": "UNITS",
						"type": "String"
					},
					{
						"name": "COST",
						"type": "String"
					},
					{
						"name": "BIL$",
						"type": "String"
					},
					{
						"name": "ROUTE TYPE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "msaz01_dm01_SQL_Server",
					"type": "LinkedServiceReference",
					"parameters": {
						"server": "msaz01-sql01\\TRUX_LEGACY01",
						"db": {
							"value": "@dataset().database",
							"type": "Expression"
						},
						"username": "AzureSQLReadOnly",
						"pw": "4QcH9zAzure01"
					}
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"table": {
						"type": "string"
					},
					"database": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "AC01_PART",
						"type": "nvarchar"
					},
					{
						"name": "AC01_DATE",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "AC01_QTY",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "AC01_AVGCOST",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_SQL_Server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VENA_Raw_All_Files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "msaz01_dm01_Azure_Blob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Vena"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "finance_model",
						"container": "vena"
					},
					"columnDelimiter": "|",
					"escapeChar": "",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "_Account",
						"type": "String"
					},
					{
						"name": "_Location",
						"type": "String"
					},
					{
						"name": "_Line/Dept",
						"type": "String"
					},
					{
						"name": "_Material Type/Customer",
						"type": "String"
					},
					{
						"name": "_Data Source",
						"type": "String"
					},
					{
						"name": "_Year",
						"type": "String"
					},
					{
						"name": "_Period",
						"type": "String"
					},
					{
						"name": "_Scenario",
						"type": "String"
					},
					{
						"name": "_Measure",
						"type": "String"
					},
					{
						"name": "_value",
						"type": "String"
					},
					{
						"name": "_etl_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VENA_Raw_Archive_All_Files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Vena"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "processed",
						"container": "vena"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VENA_Raw_Archive_Each')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Vena"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": "processed",
						"container": "vena"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "_Account",
						"type": "String"
					},
					{
						"name": "_Location",
						"type": "String"
					},
					{
						"name": "_Line/Dept",
						"type": "String"
					},
					{
						"name": "_Material Type/Customer",
						"type": "String"
					},
					{
						"name": "_Data Source",
						"type": "String"
					},
					{
						"name": "_Year",
						"type": "String"
					},
					{
						"name": "_Period",
						"type": "String"
					},
					{
						"name": "_Scenario",
						"type": "String"
					},
					{
						"name": "_Measure",
						"type": "String"
					},
					{
						"name": "_value",
						"type": "String"
					},
					{
						"name": "_etl_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VENA_Raw_Each_Files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Vena"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": "finance_model",
						"container": "vena"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "_Account",
						"type": "String"
					},
					{
						"name": "_Location",
						"type": "String"
					},
					{
						"name": "_Line/Dept",
						"type": "String"
					},
					{
						"name": "_Material Type/Customer",
						"type": "String"
					},
					{
						"name": "_Data Source",
						"type": "String"
					},
					{
						"name": "_Year",
						"type": "String"
					},
					{
						"name": "_Period",
						"type": "String"
					},
					{
						"name": "_Scenario",
						"type": "String"
					},
					{
						"name": "_Measure",
						"type": "String"
					},
					{
						"name": "_value",
						"type": "String"
					},
					{
						"name": "_etl_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adp_employee_directory_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "msaz01_dm01_Azure_Blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "empDirectory.csv",
						"container": "adp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/msaz01_dm01_Azure_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADP Workforce')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ADP Workforce_properties_typeProperties_url')]",
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('ADP Workforce_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('ADP Workforce_clientSecret')]"
					},
					"tokenEndpoint": "https://lakeshorers-nosso.prd.mykronos.com/api/authentication/access_token",
					"body": {
						"username": "APIUSER",
						"password": {
							"type": "SecureString",
							"value": "**********"
						},
						"grant_type": "password",
						"auth_chain": "OAuthLdapService"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobLinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LRS_Snowflake_V2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Snowflake linked service for Lakeshore Recycling Services Version 2.",
				"annotations": [],
				"type": "SnowflakeV2",
				"typeProperties": {
					"authenticationType": "Basic",
					"accountIdentifier": "bk40410.central-us.azure",
					"user": "SVC_ELT",
					"database": "[parameters('LRS_Snowflake_V2_properties_typeProperties_database')]",
					"warehouse": "LRS_RAW_ADF_COMPUTE",
					"role": "[parameters('LRS_Snowflake_V2_properties_typeProperties_role')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LRS_Snowflake_V2_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ildc93_dm01_SQL_Server')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"server": {
						"type": "string"
					},
					"db": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"pw": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('ildc93_dm01_SQL_Server_connectionString')]"
				},
				"connectVia": {
					"referenceName": "ildc93-dm01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/ildc93-dm01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/msaz01_dm01_Azure_Blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('msaz01_dm01_Azure_Blob_sasUri')]"
				},
				"connectVia": {
					"referenceName": "msaz01-dm01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/msaz01-dm01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/msaz01_dm01_SQL_Server')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SQL server linked service for MSAZ01.",
				"parameters": {
					"server": {
						"type": "string"
					},
					"db": {
						"type": "string"
					},
					"username": {
						"type": "String"
					},
					"pw": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('msaz01_dm01_SQL_Server_connectionString')]"
				},
				"connectVia": {
					"referenceName": "msaz01-dm01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/msaz01-dm01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/msaz01_dm01_Snowflake_Raw_V2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"database": {
						"type": "string",
						"defaultValue": "LRS_RAW"
					}
				},
				"annotations": [],
				"type": "SnowflakeV2",
				"typeProperties": {
					"authenticationType": "Basic",
					"accountIdentifier": "bk40410.central-us.azure",
					"user": "SVC_ELT",
					"database": "[parameters('msaz01_dm01_Snowflake_Raw_V2_properties_typeProperties_database')]",
					"warehouse": "LRS_RAW_ADF_COMPUTE",
					"role": "[parameters('msaz01_dm01_Snowflake_Raw_V2_properties_typeProperties_role')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('msaz01_dm01_Snowflake_Raw_V2_password')]"
					}
				},
				"connectVia": {
					"referenceName": "msaz01-dm01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/msaz01-dm01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_process_files_daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SOFTPAK_DAILY_LOAD",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "VENA_DAILY_LOAD",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ADP_HOURS_DAILY",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-09-26T01:25:00",
						"timeZone": "Central Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								7
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SOFTPAK_DAILY_LOAD')]",
				"[concat(variables('factoryId'), '/pipelines/VENA_DAILY_LOAD')]",
				"[concat(variables('factoryId'), '/pipelines/ADP_HOURS_DAILY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_process_files_weekly')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_process_adp_terminations_file",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-09-21T19:33:00",
						"timeZone": "Central Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								8
							],
							"weekDays": [
								"Friday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_process_adp_terminations_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_process_sql_daily_full_load')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Daily pipeline run of Tower data to Snowflake.",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TOWER_DAILY_LOAD",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "TRUX_DAILY_LOAD",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-09-12T18:53:00",
						"timeZone": "Central Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								0
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TOWER_DAILY_LOAD')]",
				"[concat(variables('factoryId'), '/pipelines/TRUX_DAILY_LOAD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_process_sql_daily_incremental_load')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Incremental pipeline run for Tower data to Snowflake.",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TOWER_INCREMENTAL_LOAD",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "TRUX_INCREMENTAL_LOAD",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-09-14T07:56:00",
						"timeZone": "Central Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								8,
								20,
								11,
								14
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TOWER_INCREMENTAL_LOAD')]",
				"[concat(variables('factoryId'), '/pipelines/TRUX_INCREMENTAL_LOAD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ildc93-dm01')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Virtual machine running in the LRS data center, primarily for access to Tower data.",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/msaz01-dm01')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Runtime for the VM running inside LRS Azure network.",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load ADP Hours to Snowflake')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADP_Hours_CSV_ALL",
								"type": "DatasetReference"
							},
							"name": "ADPHours"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "LRS_Snowflake_V2",
								"type": "LinkedServiceReference"
							},
							"name": "Snowflake",
							"description": "ADP Sink dataset.",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobLinkedService",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "FlagLatestFileFoRow"
						},
						{
							"name": "AlterRowUpsert"
						},
						{
							"name": "FileTimestamp"
						},
						{
							"name": "FlagColumn"
						},
						{
							"name": "FilterLatest"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Employee ID} as string,",
						"          {Employee Name} as string,",
						"          {Manager ID} as string,",
						"          {Manager Name} as string,",
						"          {Effective Date} as date,",
						"          {Historical Date} as string,",
						"          {Home DEPARTMENT} as string,",
						"          {Home LOCATION} as string,",
						"          {Home COMPANY} as string,",
						"          {Home Reserved4} as string,",
						"          {Home JOBTITLE} as string,",
						"          {Home Reserved6} as string,",
						"          {Home MANAGER} as string,",
						"          {Pay Code} as string,",
						"          Hours as double,",
						"          Money as boolean,",
						"          Days as boolean,",
						"          Wages as double,",
						"          {Base Wage} as double,",
						"          {Comment(s)} as string,",
						"          {_c20} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     enableCdc: true,",
						"     mode: 'read',",
						"     skipInitialLoad: false,",
						"     rowUrlColumn: 'adf_filename',",
						"     skipLines: 10) ~> ADPHours",
						"FileTimestamp window(over({Employee ID},",
						"          {Effective Date},",
						"          {Pay Code}),",
						"     {Latest File} = max(file_timestamp)) ~> FlagLatestFileFoRow",
						"FilterLatest alterRow(upsertIf(Flag==true())) ~> AlterRowUpsert",
						"ADPHours derive(file_timestamp = replace(replace(replace(replace(concat(substring(adf_filename,20,10),' ',substring(adf_filename,31,11)),'-',''),':',''),'.',''),' ',''),",
						"          adf_timestamp = fromUTC(currentTimestamp(),'CST')) ~> FileTimestamp",
						"FlagLatestFileFoRow derive(Flag = file_timestamp == {Latest File}) ~> FlagColumn",
						"FlagColumn filter(Flag == true()) ~> FilterLatest",
						"AlterRowUpsert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          EMPLOYEE_ID as string,",
						"          EMPLOYEE_NAME as string,",
						"          MANAGER_ID as string,",
						"          MANAGER_NAME as string,",
						"          EFFECTIVE_DATE as timestamp,",
						"          HISTORICAL_DATE as string,",
						"          HOME_DEPARTMENT as string,",
						"          HOME_LOCATION as string,",
						"          HOME_COMPANY as string,",
						"          HOME_RESERVED4 as string,",
						"          HOME_JOBTITLE as string,",
						"          HOME_RESERVED6 as string,",
						"          HOME_MANAGER as string,",
						"          PAY_CODE as string,",
						"          HOURS as string,",
						"          MONEY as string,",
						"          DAYS as string,",
						"          WAGES as string,",
						"          BASE_WAGE as string,",
						"          COMMENTS as string,",
						"          ADF_FILENAME as string,",
						"          ADF_TIMESTAMP as timestamp",
						"     ),",
						"     format: 'table',",
						"     tableName: 'ADP_HOURS',",
						"     schemaName: 'ADP_RAW',",
						"     deletable: false,",
						"     insertable: true,",
						"     updateable: false,",
						"     upsertable: true,",
						"     keys:['EMPLOYEE_ID','EFFECTIVE_DATE','PAY_CODE'],",
						"     store: 'snowflake',",
						"     store: 'snowflakeV2',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     stageInsert: true,",
						"     mapColumn(",
						"          EMPLOYEE_ID = {Employee ID},",
						"          EMPLOYEE_NAME = {Employee Name},",
						"          MANAGER_ID = {Manager ID},",
						"          MANAGER_NAME = {Manager Name},",
						"          EFFECTIVE_DATE = {Effective Date},",
						"          HISTORICAL_DATE = {Historical Date},",
						"          HOME_DEPARTMENT = {Home DEPARTMENT},",
						"          HOME_LOCATION = {Home LOCATION},",
						"          HOME_COMPANY = {Home COMPANY},",
						"          HOME_RESERVED4 = {Home Reserved4},",
						"          HOME_JOBTITLE = {Home JOBTITLE},",
						"          HOME_RESERVED6 = {Home Reserved6},",
						"          HOME_MANAGER = {Home MANAGER},",
						"          PAY_CODE = {Pay Code},",
						"          HOURS = Hours,",
						"          MONEY = Money,",
						"          DAYS = Days,",
						"          WAGES = Wages,",
						"          BASE_WAGE = {Base Wage},",
						"          COMMENTS = {Comment(s)},",
						"          ADF_FILENAME = adf_filename,",
						"          ADF_TIMESTAMP = adf_timestamp",
						"     )) ~> Snowflake"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADP_Hours_CSV_ALL')]",
				"[concat(variables('factoryId'), '/linkedServices/LRS_Snowflake_V2')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobLinkedService')]"
			]
		}
	]
}