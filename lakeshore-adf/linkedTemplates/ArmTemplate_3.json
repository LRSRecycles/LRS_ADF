{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "lakeshore-adf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_INCREMENTAL_LOAD_FACT_NEW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Trux Legacy ID Watermark Lookup",
						"description": "look up schema, database and table names from sqlsever and snowflake",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TRUX_LEGACY_WATERMARK_PVT",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Incremental Loop Over ID Watermark Tables",
						"description": "Activity to loop over tables that have primary keys with incremental IDs. This loops looks at our Watermark table in Snowflake and appends any IDs found in SQL server that are greater than the latest watermark in Snowflake.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Trux Legacy ID Watermark Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Trux Legacy ID Watermark Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DM01p Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select * from DM01P\nwhere DM01P_ID > @{item().DM01P}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM01P_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM01P_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_BATCH",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_BATCH",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GLNU",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_GLNU",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINKID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GROUP",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_GROUP",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM01P",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01P",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05A Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM01p Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select * from DM05A\nwhere DM05A_ID > @{item().DM05A}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05A_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05A",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05A",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05B Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05A Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select * from DM05B\nwhere DM05B_ID > @{item().DM05B}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05B_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ARATEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ARATEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05B",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05B",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05Z Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05B Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select * from DM05Z\nwhere DM05Z_ID > @{item().DM05Z}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05Z_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05Z",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05Z",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "RM07 Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05Z Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select * from RM07\nwhere format(RM07_RDTE,'yyyyMMdd') > @{item().RM07}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "RM07_RDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM07_RDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM07_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_REASON",
														"type": "String"
													},
													"sink": {
														"name": "RM07_REASON",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM07_TIME",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_TIME",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_TRUK",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_TRUK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_ODOM",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_ODOM",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_STIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM07_STIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM07_ETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM07_ETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM07_DRIV",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_DRIV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "RM07",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM07",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"Incremental_Range": {
						"type": "string",
						"defaultValue": "14"
					}
				},
				"variables": {
					"tempArray": {
						"type": "Array"
					},
					"TempResult": {
						"type": "Array"
					},
					"ResultsArray": {
						"type": "Array"
					},
					"OutputArray": {
						"type": "Array"
					},
					"append": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Production/TRUX"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_INCREMENTAL_LOAD_FACT_VM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Trux Legacy ID Watermark Lookup",
						"description": "look up schema, database and table names from sqlsever and snowflake",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TRUX_LEGACY_WATERMARK_PVT",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Incremental Loop Over ID Watermark Tables",
						"description": "Activity to loop over tables that have primary keys with incremental IDs. This loops looks at our Watermark table in Snowflake and appends any IDs found in SQL server that are greater than the latest watermark in Snowflake.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Trux Legacy ID Watermark Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Trux Legacy ID Watermark Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DM01p Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM01P\nwhere DM01P_ID > @{item().DM01P}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												},
												"path": "trux"
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM01P_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM01P_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_BATCH",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_BATCH",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GLNU",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_GLNU",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINKID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GROUP",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_GROUP",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM01P",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01P",
												"Snowflake_Schema": "@item().Snowflake_schema"
											}
										}
									]
								},
								{
									"name": "DM05A Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM01p Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05A\nwhere DM05A_ID > @{item().DM05A}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												},
												"path": "trux"
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05A_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05A",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05A",
												"Snowflake_Schema": "@item().Snowflake_schema"
											}
										}
									]
								},
								{
									"name": "DM05B Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05A Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05B\nwhere DM05B_ID > @{item().DM05B}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												},
												"path": "trux"
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05B_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ARATEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ARATEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05B",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05B",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05Z Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05B Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05Z\nwhere DM05Z_ID > @{item().DM05Z}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												},
												"path": "trux"
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05Z_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05Z",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05Z",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Incremental Loop Over Date Watermark Tables",
						"description": "Activity to loop over tables that have no primary keys with incremental IDs, but instead use dates. This loop pulls in the latest N days worth of fact data from these tables and merges them into the source Snowflake fact tables.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Trux Legacy DT Watermark Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Trux Legacy DT Watermark Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Incremental Delta Load to Staging",
									"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Snowflake Create Staging Tables",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'Select * from ',\n    item().sql_db_name,\n    '.dbo.', \n    item().table_name,\n    ' where ',\n    item().table_name,\n    '_date > DATEADD(day, -7, GETDATE())'\n)\n}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "@concat(item().table_name,'_STAGING')",
												"Snowflake_Schema": "@item().snowflake_schema"
											}
										}
									]
								},
								{
									"name": "Snowflake Create Staging Tables",
									"description": "create staging table used to store the delta incremental load. In this staging table, we perform a merge to the main raw table.",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('Create or replace table ', item().Snowflake_schema,'.',item().table_name,'_staging\n    as \n    select * from ', item().Snowflake_schema,'.',item().table_name,\n    ' where 1=0')}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "RM05 Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Incremental Delta Load to Staging",
											"dependencyConditions": [
												"Succeeded",
												"Skipped"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into ', item().Snowflake_schema,'.','RM05 t \nusing ', \n    item().Snowflake_schema,'.','RM05_STAGING s \non concat(t.rm05_rout, t.rm05_seq1,t.rm05_seq2,t.rm05_date) = concat(s.rm05_rout, s.rm05_seq1,s.rm05_seq2,s.rm05_date) \nwhen matched then update set \n    t.rm05_date = s.rm05_date,\n\tt.rm05_rout = s.rm05_rout,\n\tt.rm05_seq1 = s.rm05_seq1, \n\tt.rm05_seq2 = s.rm05_seq2, \n\tt.rm05_truk = s.rm05_truk,\n\tt.rm05_driv = s.rm05_driv,\n\tt.rm05_help = s.rm05_help,\n\tt.rm05_fuel = s.rm05_fuel,\n\tt.rm05_fuom = s.rm05_fuom,\n\tt.rm05_tim1 = s.rm05_tim1,\n\tt.rm05_tim2 = s.rm05_tim2,\n\tt.rm05_odm1 = s.rm05_odm1,\n\tt.rm05_odm2 = s.rm05_odm2,\n\tt.rm05_ouom = s.rm05_ouom,\n\tt.rm05_note = s.rm05_note,\n\tt.rm05_starthour = s.rm05_starthour,\n\tt.rm05_endhour = s.rm05_endhour,\n\tt.rm05_oil = s.rm05_oil,\n\tt.rm05_oil_uom = s.rm05_oil_uom,\n\tt.rm05_deptime = s.rm05_deptime,\n\tt.rm05_rettime = s.rm05_rettime,\n\tt.rm05_starttime= s.rm05_starttime \nwhen not matched then insert \n\t(\n\tt.rm05_date,\n\tt.rm05_rout,\n\tt.rm05_seq1,\n\tt.rm05_seq2,\n\tt.rm05_truk,\n\tt.rm05_driv,\n\tt.rm05_help,\n\tt.rm05_fuel,\n\tt.rm05_fuom,\n\tt.rm05_tim1,\n\tt.rm05_tim2,\n\tt.rm05_odm1,\n\tt.rm05_odm2,\n\tt.rm05_ouom,\n\tt.rm05_note,\n\tt.rm05_starthour,\n\tt.rm05_endhour,\n\tt.rm05_oil,\n\tt.rm05_oil_uom,\n\tt.rm05_deptime,\n\tt.rm05_rettime,\n\tt.rm05_starttime \n\t)\nvalues \n\t(\n\ts.rm05_date,\n\ts.rm05_rout,\n\ts.rm05_seq1, \n\ts.rm05_seq2, \n\ts.rm05_truk,\n\ts.rm05_driv,\n\ts.rm05_help,\n\ts.rm05_fuel,\n\ts.rm05_fuom,\n\ts.rm05_tim1,\n\ts.rm05_tim2,\n\ts.rm05_odm1,\n\ts.rm05_odm2,\n\ts.rm05_ouom,\n\ts.rm05_note,\n\ts.rm05_starthour,\n\ts.rm05_endhour,\n\ts.rm05_oil,\n\ts.rm05_oil_uom,\n\ts.rm05_deptime,\n\ts.rm05_rettime,\n\ts.rm05_starttime)'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Snowflake Drop Staging Tables",
									"description": "after all activities are completed, we perform the drop operation to clean up the snowflake environment",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "RM05 Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('drop table if exists ', item().Snowflake_schema,'.',item().table_name,'_STAGING')}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "Trux Legacy DT Watermark Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "select\n*\nfrom\n  lrs_raw.master_data.vw_trux_legacy_watermark\nwhere\n  watermark_type = 'DT'\n  and\n  latest_watermark is not null",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "Destination",
									"Snowflake_Schema": "Tower_Raw"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 8
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"LastProcessedId": {
						"type": "string"
					},
					"CurrentDate": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"variables": {
					"tempArray": {
						"type": "Array"
					},
					"TempResult": {
						"type": "Array"
					},
					"ResultsArray": {
						"type": "Array"
					},
					"OutputArray": {
						"type": "Array"
					},
					"append": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_INCREMENTAL_WKND_LOAD_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Database Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Database Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "RM05 Last ID",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(RM05_ROUT) AS LASTPROCESSEDID FROM @{item().SchemaName}.RM05;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM05",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "SM01 Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "RM05 Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(SM01_LOGID) AS LASTPROCESSEDID FROM @{item().SchemaName}.SM01;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "SM01",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM01 Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "SM01 Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM01_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM01;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM01P Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM01 Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM01P_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM01P;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01P",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM05A_ID Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM01P Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM05A_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM05A;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05A",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM05B Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM05A_ID Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM05B_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM05B;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05B",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM05FT Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM05B Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM05FT_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM05FT;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05FT",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM05Z Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM05FT Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM05Z_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM05Z;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05Z",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "LM02 Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM05Z Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(LM02_NUMB) AS LASTPROCESSEDID FROM @{item().SchemaName}.LM02;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "LM02",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "MT02 Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "LM02 Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(MT02_REFR) AS LASTPROCESSEDID FROM @{item().SchemaName}.MT02;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "MT02",
												"Snowflake_Schema": {
													"value": "@item().SchemaName",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "RM03U Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "MT02 Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(RM03U_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.RM03U;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM03U",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								}
							]
						}
					},
					{
						"name": "Database Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "SELECT 'LRS_RAW' as DatabaseName, TABLE_NAME as TableName,TABLE_SCHEMA as SchemaName\r\nFROM INFORMATION_SCHEMA.TABLES INS\r\nWHERE TABLE_SCHEMA in ('TRUX_CD_COMP_RAW','TRUX_DC_COMP_RAW','TRUX_ES_COMP_RAW','TRUX_HR_COMP_RAW','TRUX_LR_COMP_RAW','TRUX_MC_COMP_RAW','TRUX_MH_COMP_RAW',\r\n    'TRUX_MO_COMP_RAW','TRUX_MP_COMP_RAW','TRUX_MW_COMP_RAW','TRUX_NI_COMP_RAW','TRUX_PS_COMP_RAW','TRUX_RS_COMP_RAW','TRUX_RT_COMP_RAW',\r\n    'TRUX_RZ_COMP_RAW','TRUX_SH_COMP_RAW','TRUX_SW_COMP_RAW','TRUX_TP_COMP_RAW','TRUX_WA_COMP_RAW')\r\n    AND TABLENAME IN ('RM05','SM01','DM01','DM01p','DM05A','DM05B','DM05FT','DM05Z','LM02','MT02','RM03U')\r\norder by table_name;",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LKPWATERMARK_TRUX_LEGACY",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 8
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"LastProcessedId": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_LOGGING_FULL_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Look up LEGACY Logging Tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "SELECT * \r\n  FROM LRS_RAW.MASTER_DATA.LOGGING_LOOKUP_TRUX_COMBINED\r\n WHERE SQL_SERVER_NAME = 'LEGACY';",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "LOGGING_LOOKUP_TRUX_COMBINED",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Loop over LEGACY logging tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Look up LEGACY Logging Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Look up LEGACY Logging Tables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy LEGACY logs",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "SQL_TABLE_NAME",
													"value": {
														"value": "@item().sql_table_name",
														"type": "Expression"
													}
												},
												{
													"name": "SOURCE",
													"value": {
														"value": "@item().snowflake_name",
														"type": "Expression"
													}
												},
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "LOG_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_TYPE",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_TYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LOG_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LOG_USER",
														"type": "String"
													},
													"sink": {
														"name": "LOG_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_TERMID",
														"type": "String"
													},
													"sink": {
														"name": "LOG_TERMID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_NOTES",
														"type": "String"
													},
													"sink": {
														"name": "LOG_NOTES",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_SERV",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_SERV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "LOG_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_FNUM",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_FNUM",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_REAS",
														"type": "String"
													},
													"sink": {
														"name": "LOG_REAS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_AUTH",
														"type": "String"
													},
													"sink": {
														"name": "LOG_AUTH",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "LOG_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LOG_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LOG_CALLID",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_CALLID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_BVAL",
														"type": "String"
													},
													"sink": {
														"name": "LOG_BVAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_AVAL",
														"type": "String"
													},
													"sink": {
														"name": "LOG_AVAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_TASKID",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_TASKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SQL_TABLE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "SQL_TABLE_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SOURCE",
														"type": "String"
													},
													"sink": {
														"name": "SOURCE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": {
													"value": "@item().sql_table_name",
													"type": "Expression"
												},
												"database": "TRUX_LOGGING"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "LEGACY_LOG",
												"Snowflake_Schema": "TRUX_LOGGING_RAW"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					}
				},
				"folder": {
					"name": "Production/TRUX"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_LOGGING_INCREMENTAL_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Watermark Lookup for Legacy Logging",
						"description": "Look up schema, database and table names from SQL Server and Snowflake",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TRUX_LEGACY_LOGGING_WATERMARK",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Incremental Loop Over Legacy Watermark Table",
						"description": "Activity to loop over tables that have primary keys with incremental IDs. This loop looks at our Legacy Logging Watermark table in Snowflake and appends any IDs found in SQL Server that are greater than the latest watermark in Snowflake.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Watermark Lookup for Legacy Logging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Watermark Lookup for Legacy Logging').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Legacy Logging Incremental Delta Load",
									"description": "",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "SQL_TABLE_NAME",
													"value": {
														"value": "@item().sql_table_name",
														"type": "Expression"
													}
												},
												{
													"name": "SOURCE",
													"value": {
														"value": "@item().source",
														"type": "Expression"
													}
												},
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "SELECT * \n  FROM @{item().sql_table_name}\n WHERE LOG_ID > @{item().latest_watermark}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "LOG_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_TYPE",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_TYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LOG_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LOG_USER",
														"type": "String"
													},
													"sink": {
														"name": "LOG_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_TERMID",
														"type": "String"
													},
													"sink": {
														"name": "LOG_TERMID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_NOTES",
														"type": "String"
													},
													"sink": {
														"name": "LOG_NOTES",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_SERV",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_SERV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "LOG_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_FNUM",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_FNUM",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_REAS",
														"type": "String"
													},
													"sink": {
														"name": "LOG_REAS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_AUTH",
														"type": "String"
													},
													"sink": {
														"name": "LOG_AUTH",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "LOG_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LOG_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LOG_CALLID",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_CALLID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LOG_BVAL",
														"type": "String"
													},
													"sink": {
														"name": "LOG_BVAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_AVAL",
														"type": "String"
													},
													"sink": {
														"name": "LOG_AVAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LOG_TASKID",
														"type": "Int32"
													},
													"sink": {
														"name": "LOG_TASKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SQL_TABLE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "SQL_TABLE_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SOURCE",
														"type": "String"
													},
													"sink": {
														"name": "SOURCE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": {
													"value": "@item().sql_table_name",
													"type": "Expression"
												},
												"database": "TRUX_LOGGING"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "LEGACY_LOG",
												"Snowflake_Schema": "TRUX_LOGGING_RAW"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"Incremental_Range": {
						"type": "int",
						"defaultValue": 14
					}
				},
				"folder": {
					"name": "Production/TRUX"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_Test4_9_3_2023')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop Over Tables",
						"description": "activity to loop over array of results which are the tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Trux Legacy table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Trux Legacy table').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Trux Legacy Watermark Lookup",
									"description": "look up schema, database and table names from sqlsever and snowflake",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "select latest_watermark \nfrom MASTER_DATA.VW_TRUX_LEGACY_WATERMARK\nwhere snowflake_schema =  '@{item().snowflake_schema}' \nand table_name =  '@{item().table_name}' ",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "VW_TRUX_LEGACY_WATERMARK",
												"Snowflake_Schema": "MASTER_DATA"
											}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "RM05 Incremental Delta Load to Staging",
									"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Snowflake Create Staging Tables",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * \nfrom RM05\nwhere RM05_DATE > cast('@{activity('Trux Legacy Watermark Lookup').output.firstRow.latest_watermark}' as datetime)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "rm05",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": {
													"value": "@concat(item().table_name,'_STAGING')",
													"type": "Expression"
												},
												"Snowflake_Schema": {
													"value": "@item().snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Snowflake Create Staging Tables",
									"description": "create staging table used to store the delta incremental load. In this staging table, we perform a merge to the main raw table.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Trux Legacy Watermark Lookup",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('Create or replace table ', item().Snowflake_schema,'.',item().table_name,'_staging\n    as \n    select * from ', item().Snowflake_schema,'.',item().table_name,\n    ' where 1=0')}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "RM05 Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "RM05 Incremental Delta Load to Staging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into ', item().Snowflake_schema,'.','RM05_1 t \nusing ', \n    item().Snowflake_schema,'.','RM05_STAGING s \non concat(t.rm05_rout, t.rm05_seq1,t.rm05_seq2,t.rm05_date) = concat(s.rm05_rout, s.rm05_seq1,s.rm05_seq2,s.rm05_date) \nwhen matched then update set \n    t.rm05_date = s.rm05_date,\n\tt.rm05_rout = s.rm05_rout,\n\tt.rm05_seq1 = s.rm05_seq1, \n\tt.rm05_seq2 = s.rm05_seq2, \n\tt.rm05_truk = s.rm05_truk,\n\tt.rm05_driv = s.rm05_driv,\n\tt.rm05_help = s.rm05_help,\n\tt.rm05_fuel = s.rm05_fuel,\n\tt.rm05_fuom = s.rm05_fuom,\n\tt.rm05_tim1 = s.rm05_tim1,\n\tt.rm05_tim2 = s.rm05_tim2,\n\tt.rm05_odm1 = s.rm05_odm1,\n\tt.rm05_odm2 = s.rm05_odm2,\n\tt.rm05_ouom = s.rm05_ouom,\n\tt.rm05_note = s.rm05_note,\n\tt.rm05_starthour = s.rm05_starthour,\n\tt.rm05_endhour = s.rm05_endhour,\n\tt.rm05_oil = s.rm05_oil,\n\tt.rm05_oil_uom = s.rm05_oil_uom,\n\tt.rm05_deptime = s.rm05_deptime,\n\tt.rm05_rettime = s.rm05_rettime,\n\tt.rm05_starttime= s.rm05_starttime \nwhen not matched then insert \n\t(\n\tt.rm05_date,\n\tt.rm05_rout,\n\tt.rm05_seq1,\n\tt.rm05_seq2,\n\tt.rm05_truk,\n\tt.rm05_driv,\n\tt.rm05_help,\n\tt.rm05_fuel,\n\tt.rm05_fuom,\n\tt.rm05_tim1,\n\tt.rm05_tim2,\n\tt.rm05_odm1,\n\tt.rm05_odm2,\n\tt.rm05_ouom,\n\tt.rm05_note,\n\tt.rm05_starthour,\n\tt.rm05_endhour,\n\tt.rm05_oil,\n\tt.rm05_oil_uom,\n\tt.rm05_deptime,\n\tt.rm05_rettime,\n\tt.rm05_starttime \n\t)\nvalues \n\t(\n\ts.rm05_date,\n\ts.rm05_rout,\n\ts.rm05_seq1, \n\ts.rm05_seq2, \n\ts.rm05_truk,\n\ts.rm05_driv,\n\ts.rm05_help,\n\ts.rm05_fuel,\n\ts.rm05_fuom,\n\ts.rm05_tim1,\n\ts.rm05_tim2,\n\ts.rm05_odm1,\n\ts.rm05_odm2,\n\ts.rm05_ouom,\n\ts.rm05_note,\n\ts.rm05_starthour,\n\ts.rm05_endhour,\n\ts.rm05_oil,\n\ts.rm05_oil_uom,\n\ts.rm05_deptime,\n\ts.rm05_rettime,\n\ts.rm05_starttime)'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Snowflake Drop Staging Tables",
									"description": "after all activities are completed, we perform the drop operation to clean up the snowflake environment",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "RM05 Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded",
												"Skipped"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('drop table if exists ', item().Snowflake_schema,'.',item().table_name,'_STAGING')}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "Trux Legacy table",
						"description": "look up schema, database and table names from sqlsever and snowflake",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "select distinct snowflake_schema, sql_db_name, table_name\r\nfrom MASTER_DATA.VW_TRUX_LEGACY_WATERMARK",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TRUX_LEGACY_WATERMARK",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 8
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-27T20:50:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_test1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL New Watermark Lkp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "declare @dbname nvarchar(MAX);\ndeclare @filtertable nvarchar(MAX);\ndeclare @sql nvarchar(max);\n\nset @dbname = 'TRUX_CD_COMP,TRUX_DC_COMP,TRUX_ES_COMP,TRUX_HR_COMP,TRUX_LR_COMP,TRUX_MC_COMP,TRUX_MH_COMP,TRUX_MO_COMP,TRUX_MP_COMP,TRUX_MW_COMP,TRUX_NI_COMP,TRUX_PS_COMP,TRUX_RS_COMP,TRUX_RT_COMP,TRUX_RZ_COMP,TRUX_SH_COMP,TRUX_SW_COMP,TRUX_TP_COMP,TRUX_WA_COMP'\nset @filtertable = 'RM05,SM01,DM01,DM01p,DM05A,DM05B,DM05FT,DM05Z,LM02,MT02,RM03U'\n\ncreate table #ConsolidatedTable\n( Dbname nvarchar(max),\nSchemaName nvarchar(max),\nTableName nvarchar(max),\nCreatedDate datetime,\nLastUpdatedDatetime datetime\n);\n\ndeclare @temptable table (DatabaseName nvarchar(128));\n\ninsert into @temptable\nselect value from string_split(@dbname, ',');\n\ndeclare @CurrentDatabase nvarchar(128);\n\ndeclare db_cursor cursor for\nselect DatabaseName\nfrom @temptable\n\n\nopen db_cursor\n\nfetch next from db_cursor into @CurrentDatabase;\n\n\nwhile @@FETCH_STATUS = 0\nbegin\n\tset @sql = N'USE ' + QUOTENAME(@CurrentDatabase) + ';\n\tinsert into #ConsolidatedTable\n\tselect\n\t\t''' + @CurrentDatabase + ''' as DBname,\n\t\tSCHEMA_NAME(schema_id) as SchemaName,\n\t\tname as TableName,\n\t\tCREATE_DATE as CreatedDate,\n\t\tMODIFY_DATE as LastUpdatedDatetime\n\tfrom sys.tables\n\twhere name in (''' + replace(@filtertable, ',',''',''') + ''')\n\torder by name;';\n\n\n\texec sp_executesql @sql;\n\n\tfetch next from db_cursor into @CurrentDatabase;\nEND\n\nclose db_cursor;\ndeallocate db_cursor;\n\nselect * from #ConsolidatedTable",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TRUX_LEGACY01",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "dm01",
									"database": "TRUX_CD_COMP"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Blob Sink New Watermark",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SQL New Watermark Lkp",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Snowflake Old Watermark Lkp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "declare @dbname nvarchar(MAX);\ndeclare @filtertable nvarchar(MAX);\ndeclare @sql nvarchar(max);\n\nset @dbname = 'TRUX_CD_COMP,TRUX_DC_COMP,TRUX_ES_COMP,TRUX_HR_COMP,TRUX_LR_COMP,TRUX_MC_COMP,TRUX_MH_COMP,TRUX_MO_COMP,TRUX_MP_COMP,TRUX_MW_COMP,TRUX_NI_COMP,TRUX_PS_COMP,TRUX_RS_COMP,TRUX_RT_COMP,TRUX_RZ_COMP,TRUX_SH_COMP,TRUX_SW_COMP,TRUX_TP_COMP,TRUX_WA_COMP'\nset @filtertable = 'RM05,SM01,DM01,DM01p,DM05A,DM05B,DM05FT,DM05Z,LM02,MT02,RM03U'\n\ncreate table #ConsolidatedTable\n( Dbname nvarchar(max),\nSchemaName nvarchar(max),\nTableName nvarchar(max),\nCreatedDate datetime,\nLastUpdatedDatetime datetime\n);\n\ndeclare @temptable table (DatabaseName nvarchar(128));\n\ninsert into @temptable\nselect value from string_split(@dbname, ',');\n\ndeclare @CurrentDatabase nvarchar(128);\n\ndeclare db_cursor cursor for\nselect DatabaseName\nfrom @temptable\n\n\nopen db_cursor\n\nfetch next from db_cursor into @CurrentDatabase;\n\n\nwhile @@FETCH_STATUS = 0\nbegin\n\tset @sql = N'USE ' + QUOTENAME(@CurrentDatabase) + ';\n\tinsert into #ConsolidatedTable\n\tselect\n\t\t''' + @CurrentDatabase + ''' as DBname,\n\t\tSCHEMA_NAME(schema_id) as SchemaName,\n\t\tname as TableName,\n\t\tCREATE_DATE as CreatedDate,\n\t\tMODIFY_DATE as LastUpdatedDatetime\n\tfrom sys.tables\n\twhere name in (''' + replace(@filtertable, ',',''',''') + ''')\n\torder by name;';\n\n\n\texec sp_executesql @sql;\n\n\tfetch next from db_cursor into @CurrentDatabase;\nEND\n\nclose db_cursor;\ndeallocate db_cursor;\n\nselect * from #ConsolidatedTable",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							}
						},
						"inputs": [
							{
								"referenceName": "TRUX_LEGACY01",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "dm01",
									"database": "TRUX_CD_COMP"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DESTINATION",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						]
					},
					{
						"name": "Snowflake Old Watermark Lkp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "SELECT 'LRS_RAW' as DatabaseName, TABLE_NAME as TableName,TABLE_SCHEMA as SchemaName, CREATED as CreatedDate, LAST_ALTERED as LastUpdatedDate\r\nFROM INFORMATION_SCHEMA.TABLES INS\r\nWHERE TABLE_SCHEMA in ('TRUX_CD_COMP_RAW','TRUX_DC_COMP_RAW','TRUX_ES_COMP_RAW','TRUX_HR_COMP_RAW','TRUX_LR_COMP_RAW','TRUX_MC_COMP_RAW','TRUX_MH_COMP_RAW',\r\n    'TRUX_MO_COMP_RAW','TRUX_MP_COMP_RAW','TRUX_MW_COMP_RAW','TRUX_NI_COMP_RAW','TRUX_PS_COMP_RAW','TRUX_RS_COMP_RAW','TRUX_RT_COMP_RAW',\r\n    'TRUX_RZ_COMP_RAW','TRUX_SH_COMP_RAW','TRUX_SW_COMP_RAW','TRUX_TP_COMP_RAW','TRUX_WA_COMP_RAW')\r\nAND TABLENAME IN ('RM05','SM01','DM01','DM01p','DM05A','DM05B','DM05FT','DM05Z','LM02','MT02','RM03U');",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DESTINATION",
									"Snowflake_Schema": "TOWER_RAW"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Replace Old Watermark",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Blob Sink New Watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "SELECT 'LRS_RAW' as DatabaseName, TABLE_NAME as TableName,TABLE_SCHEMA as SchemaName, CREATED as CreatedDate, LAST_ALTERED as LastUpdatedDate\nFROM INFORMATION_SCHEMA.TABLES INS\nWHERE TABLE_SCHEMA in ('TRUX_CD_COMP_RAW','TRUX_DC_COMP_RAW','TRUX_ES_COMP_RAW','TRUX_HR_COMP_RAW','TRUX_LR_COMP_RAW','TRUX_MC_COMP_RAW','TRUX_MH_COMP_RAW',\n    'TRUX_MO_COMP_RAW','TRUX_MP_COMP_RAW','TRUX_MW_COMP_RAW','TRUX_NI_COMP_RAW','TRUX_PS_COMP_RAW','TRUX_RS_COMP_RAW','TRUX_RT_COMP_RAW',\n    'TRUX_RZ_COMP_RAW','TRUX_SH_COMP_RAW','TRUX_SW_COMP_RAW','TRUX_TP_COMP_RAW','TRUX_WA_COMP_RAW')\nAND TABLENAME IN ('RM05','SM01','DM01','DM01p','DM05A','DM05B','DM05FT','DM05Z','LM02','MT02','RM03U');",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							}
						},
						"inputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DESTINATION",
									"Snowflake_Schema": "TOWER_RAW"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LKPWATERMARK_TRUX_LEGACY",
									"Snowflake_Schema": "MASTER_DATA"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 8
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"DBname": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					},
					"CreatedDate": {
						"type": "string"
					},
					"LastUpdatedDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_test2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Variable Array Path",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('RM05 LastProcessedID Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "RM05",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(RM05_ROUT) AS LASTPROCESSEDID FROM @{item().SchemaName}.RM05;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM05",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "SetOutputArray",
									"description": "",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "RM05",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "OutputArray",
										"value": {
											"value": "@union(array(concat('[{\"SchemaName\": \"', item().SchemaName, '\", \"TableName\":\"', item().TableName, '\", \"LastProcessedID\": \"', activity('RM05').output.value,'\"}]'))\n, array(concat('[{\"SchemaName\": \"', item().SchemaName, '\", \"TableName\":\"', item().TableName, '\", \"LastProcessedID\": \"', activity('RM05').output.value,'\"}]')))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "AppendArray",
									"description": "",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SetOutputArray",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "append",
										"value": {
											"value": "@union(variables('OutputArray'), array(concat('[{\"SchemaName\": \"', item().SchemaName, '\", \"TableName\":\"', item().TableName, '\", \"LastProcessedID\": \"', activity('RM05').output.value,'\"}]')))",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "RM05 LastProcessedID Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "SELECT  'LRS_RAW' AS DATABASENAME, TABLE_NAME as TableName,TABLE_SCHEMA as SchemaName\r\nFROM INFORMATION_SCHEMA.TABLES INS\r\nWHERE TABLE_SCHEMA in ('TRUX_CD_COMP_RAW','TRUX_DC_COMP_RAW','TRUX_ES_COMP_RAW','TRUX_HR_COMP_RAW','TRUX_LR_COMP_RAW','TRUX_MC_COMP_RAW','TRUX_MH_COMP_RAW',\r\n    'TRUX_MO_COMP_RAW','TRUX_MP_COMP_RAW','TRUX_MW_COMP_RAW','TRUX_NI_COMP_RAW','TRUX_PS_COMP_RAW','TRUX_RS_COMP_RAW','TRUX_RT_COMP_RAW',\r\n    'TRUX_RZ_COMP_RAW','TRUX_SH_COMP_RAW','TRUX_SW_COMP_RAW','TRUX_TP_COMP_RAW','TRUX_WA_COMP_RAW')\r\n    AND TABLENAME IN ('RM05','SM01','DM01','DM01p','DM05A','DM05B','DM05FT','DM05Z','LM02','MT02','RM03U')\r\norder by table_name;",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LKPWATERMARK_TRUX_LEGACY",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set Variable Array Path",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "RM05 LastProcessedID Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ResultsArray",
							"value": []
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 8
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"LastProcessedId": {
						"type": "string"
					},
					"CurrentDate": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"variables": {
					"tempArray": {
						"type": "Array"
					},
					"TempResult": {
						"type": "Array"
					},
					"ResultsArray": {
						"type": "Array"
					},
					"OutputArray": {
						"type": "Array"
					},
					"append": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_test3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Database Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Database Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "RM05 Last ID",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(RM05_ROUT) AS LASTPROCESSEDID FROM @{item().SchemaName}.RM05;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM05",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "SM01 Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "RM05 Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(SM01_LOGID) AS LASTPROCESSEDID FROM @{item().SchemaName}.SM01;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "SM01",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM01 Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "SM01 Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM01_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM01;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM01P Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM01 Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM01P_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM01P;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01P",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM05A_ID Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM01P Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM05A_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM05A;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05A",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM05B Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM05A_ID Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM05B_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM05B;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05B",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM05FT Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM05B Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM05FT_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM05FT;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05FT",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "DM05Z Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM05FT Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(DM05Z_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.DM05Z;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05Z",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "LM02 Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "DM05Z Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(LM02_NUMB) AS LASTPROCESSEDID FROM @{item().SchemaName}.LM02;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "LM02",
												"Snowflake_Schema": "@item().SchemaName"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "MT02 Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "LM02 Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(MT02_REFR) AS LASTPROCESSEDID FROM @{item().SchemaName}.MT02;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "MT02",
												"Snowflake_Schema": {
													"value": "@item().SchemaName",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "RM03U Last ID",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "MT02 Last ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeV2Source",
											"query": {
												"value": "SELECT MAX(RM03U_ID) AS LASTPROCESSEDID FROM @{item().SchemaName}.RM03U;",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM03U",
												"Snowflake_Schema": {
													"value": "@item().SchemaName",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								}
							]
						}
					},
					{
						"name": "Database Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "SELECT 'LRS_RAW' as DatabaseName, TABLE_NAME as TableName,TABLE_SCHEMA as SchemaName\r\nFROM INFORMATION_SCHEMA.TABLES INS\r\nWHERE TABLE_SCHEMA in ('TRUX_CD_COMP_RAW','TRUX_DC_COMP_RAW','TRUX_ES_COMP_RAW','TRUX_HR_COMP_RAW','TRUX_LR_COMP_RAW','TRUX_MC_COMP_RAW','TRUX_MH_COMP_RAW',\r\n    'TRUX_MO_COMP_RAW','TRUX_MP_COMP_RAW','TRUX_MW_COMP_RAW','TRUX_NI_COMP_RAW','TRUX_PS_COMP_RAW','TRUX_RS_COMP_RAW','TRUX_RT_COMP_RAW',\r\n    'TRUX_RZ_COMP_RAW','TRUX_SH_COMP_RAW','TRUX_SW_COMP_RAW','TRUX_TP_COMP_RAW','TRUX_WA_COMP_RAW')\r\n    AND TABLENAME IN ('RM05','SM01','DM01','DM01p','DM05A','DM05B','DM05FT','DM05Z','LM02','MT02','RM03U')\r\norder by table_name;",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LKPWATERMARK_TRUX_LEGACY",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 8
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"LastProcessedId": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_test_DM01_IdWM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DM01 Watermark Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "select\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.dm01;",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LKPWATERMARK_TRUX_LEGACY",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "DM01 Watermark Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('DM01 Watermark Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from @{item().table_name}\nwhere dm01_id > '@{item().LATEST_WATERMARK}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"database": {
													"value": "@item().Sql_db_name",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from @{item().table_name}\nwhere dm01_id > '@{item().LATEST_WATERMARK}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"database": {
													"value": "@item().Sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "@concat(item().table_name,'_1')",
												"Snowflake_Schema": "@item().snowflake_schema"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 8
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"LastProcessedId": {
						"type": "string"
					},
					"CurrentDate": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"variables": {
					"tempArray": {
						"type": "Array"
					},
					"TempResult": {
						"type": "Array"
					},
					"ResultsArray": {
						"type": "Array"
					},
					"OutputArray": {
						"type": "Array"
					},
					"append": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_LEGACY_test_RM05_DateWM_FirstRun')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RM05 Watermark Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "select\r\n'TRUX_DC_COMP' as SQL_DB_Name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_Schema,\r\n'RM05' as table_name,\r\ncast(max(RM05_DATE)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as SQL_DB_Name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_Schema,\r\n'RM05' as table_name,\r\ncast(max(RM05_DATE)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.rm05;",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LKPWATERMARK_TRUX_LEGACY",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "RM05 Watermark Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('RM05 Watermark Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "RM05 Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from @{item().table_name}\nwhere RM05_DATE > cast('@{item().LATEST_WATERMARK}' as datetime)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"database": {
													"value": "@item().Sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "@concat(item().table_name,'_1')",
												"Snowflake_Schema": "@item().snowflake_schema"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 8
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"LastProcessedId": {
						"type": "string"
					},
					"CurrentDate": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"variables": {
					"tempArray": {
						"type": "Array"
					},
					"TempResult": {
						"type": "Array"
					},
					"ResultsArray": {
						"type": "Array"
					},
					"OutputArray": {
						"type": "Array"
					},
					"append": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_MASTER_DATA_FULL_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy LEGACY SY03 table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.MASTER_DATA.LEGACY_SY03;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SY03_CODE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_NAME",
											"type": "String"
										},
										"sink": {
											"name": "SY03_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ADD1",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ADD1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ADD2",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ADD2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CITY",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CITY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_STAT",
											"type": "String"
										},
										"sink": {
											"name": "SY03_STAT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PZIP",
											"type": "String"
										},
										"sink": {
											"name": "SY03_PZIP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_COUN",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_COUN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_PHON",
											"type": "String"
										},
										"sink": {
											"name": "SY03_PHON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_FAX",
											"type": "String"
										},
										"sink": {
											"name": "SY03_FAX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_EMAIL",
											"type": "String"
										},
										"sink": {
											"name": "SY03_EMAIL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_WEBSITE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_WEBSITE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DB",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DB",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFC",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DEFC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFS",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DEFS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF1",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF2",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF3",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF3",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF4",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF4",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PRTNAME",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_PRTNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PRTSTATCAP",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_PRTSTATCAP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CHGINTEREST",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CHGINTEREST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CURR",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CURR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CREDITLIMIT",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CREDITLIMIT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PARSED",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_PARSED",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_AUTOSITE",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_AUTOSITE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_INVSEQ1",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_INVSEQ1",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_INVSEQ2",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_INVSEQ2",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_BALO",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_BALO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_BILLTO",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_BILLTO",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_GTWCFGID",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_GTWCFGID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_MERCHID",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_MERCHID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_DBVERSION",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DBVERSION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ACCTAPP",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ACCTAPP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ACCTFILE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ACCTFILE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_HWR",
											"type": "String"
										},
										"sink": {
											"name": "SY03_HWR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_AUTOLOADFILE",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_AUTOLOADFILE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REFN",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REFN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_VUOM",
											"type": "String"
										},
										"sink": {
											"name": "SY03_VUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SITETYPE",
											"type": "Byte"
										},
										"sink": {
											"name": "SY03_SITETYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_WOCOPIES",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_WOCOPIES",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_ENCVER",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_ENCVER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_NAT",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_NAT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_MOBID",
											"type": "String"
										},
										"sink": {
											"name": "SY03_MOBID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REINSCHECKDTE",
											"type": "DateTime"
										},
										"sink": {
											"name": "SY03_REINSCHECKDTE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "SY03_AUTOHMPAGE",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_AUTOHMPAGE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SNDFLDR",
											"type": "String"
										},
										"sink": {
											"name": "SY03_SNDFLDR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_RECFLDR",
											"type": "String"
										},
										"sink": {
											"name": "SY03_RECFLDR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_FMMASTER",
											"type": "String"
										},
										"sink": {
											"name": "SY03_FMMASTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_GPSFOLDER",
											"type": "String"
										},
										"sink": {
											"name": "SY03_GPSFOLDER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFPA",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DEFPA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF5",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF5",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_LOCK",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_LOCK",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_WOSHOWMSG",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_WOSHOWMSG",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CASH",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_CASH",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CASHT",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CASHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_OverdueLetter",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_OVERDUELETTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_AttachOverdueLetter",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ATTACHOVERDUELETTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_AttachFolderOverdueLetter",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ATTACHFOLDEROVERDUELETTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_INVOICEORDER",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_INVOICEORDER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_LEED",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_LEED",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_TUOM",
											"type": "String"
										},
										"sink": {
											"name": "SY03_TUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_WARRONTRUK",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_WARRONTRUK",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_LABELPRINTER",
											"type": "String"
										},
										"sink": {
											"name": "SY03_LABELPRINTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_LABELHEIGHT",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_LABELHEIGHT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_LABELWIDTH",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_LABELWIDTH",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_ATTACHINDB",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ATTACHINDB",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_FILESIZE",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_FILESIZE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_NOTE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_NOTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CHGCODE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CHGCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CHGRATE",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_CHGRATE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_GLNU",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_GLNU",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_LANDFILL",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_LANDFILL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_TRANSFER",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_TRANSFER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_MRF",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_MRF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_COMPOST",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_COMPOST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_VEGAS",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_VEGAS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_RSI",
											"type": "String"
										},
										"sink": {
											"name": "SY03_RSI",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REASON",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REASON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CLASS",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CLASS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SITE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_SITE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REINSTATEREASON",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REINSTATEREASON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REPRINTREASON",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_REPRINTREASON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_RRNMAP",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_RRNMAP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_VALC",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_VALC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_LANGUAGE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_LANGUAGE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF6",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF6",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sy03_lmargin",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_LMARGIN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_DefaultAttachFolder",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEFAULTATTACHFOLDER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PRINTBILLPARAM",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_PRINTBILLPARAM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CONTYPE",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_CONTYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CONAMT",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_CONAMT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CONUSE",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CONUSE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DOWNTIMESTARTEND",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DOWNTIMESTARTEND",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ROLABORTIMESPAN",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ROLABORTIMESPAN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_USEGMAP",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_USEGMAP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SHOWPARTSUBSYSTEM",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_SHOWPARTSUBSYSTEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_QTDWARN",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_QTDWARN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_QTDSTOP",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_QTDSTOP",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CREDITMEMO",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CREDITMEMO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ADJAPPV",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ADJAPPV",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_NOTIFYUSER",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_NOTIFYUSER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SHOWRATE",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_SHOWRATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ASSETTRANSFER",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ASSETTRANSFER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_TEST",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_TEST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SchedCallsToRouteFromSC",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_SCHEDCALLSTOROUTEFROMSC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_EmailRSToDriver",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_EMAILRSTODRIVER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFCUSTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEFCUSTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_NO0MINIWARNINGFORINTERC",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_NO0MINIWARNINGFORINTERC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PRINTPRICES",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_PRINTPRICES",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_MAXODOMETER",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_MAXODOMETER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_MAXENGINEHOURS",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_MAXENGINEHOURS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_ADDCALLTOEND",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ADDCALLTOEND",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ALLOWCHGHELDTKT",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ALLOWCHGHELDTKT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMADD1",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMADD1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMADD2",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMADD2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMCITY",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMCITY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMSTAT",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMSTAT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMPZIP",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMPZIP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMCOUN",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_REMCOUN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_REMPHON",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMPHON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMFAX",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMFAX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMEMAIL",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMEMAIL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ADJTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ADJTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ADVDAYS",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_ADVDAYS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_RMINTERFACE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_RMINTERFACE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_EXPORTPATH",
											"type": "String"
										},
										"sink": {
											"name": "SY03_EXPORTPATH",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_IMPORTPATH",
											"type": "String"
										},
										"sink": {
											"name": "SY03_IMPORTPATH",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_RMURL",
											"type": "String"
										},
										"sink": {
											"name": "SY03_RMURL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_USERNAME",
											"type": "String"
										},
										"sink": {
											"name": "SY03_USERNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PASSWORD",
											"type": "String"
										},
										"sink": {
											"name": "SY03_PASSWORD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_RMAPIKEY",
											"type": "String"
										},
										"sink": {
											"name": "SY03_RMAPIKEY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_MANINVSURCHG",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_MANINVSURCHG",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_QUICKSEARCHAUTOFILL",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_QUICKSEARCHAUTOFILL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_USDOT",
											"type": "String"
										},
										"sink": {
											"name": "SY03_USDOT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_TENDERAMNTREQUIRED",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_TENDERAMNTREQUIRED",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_STORECVV2",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_STORECVV2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFAULTPAYTERMS",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_DEFAULTPAYTERMS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_NOJOBAFTER",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_NOJOBAFTER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CONTDREADONLY",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CONTDREADONLY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CONTRATETYPE",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_CONTRATETYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_FORCEFACILITYSELECTION",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_FORCEFACILITYSELECTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_AttachImageToInvoiceDefault",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ATTACHIMAGETOINVOICEDEFAULT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CCPROCFEEDEFAULTNEWCUST",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CCPROCFEEDEFAULTNEWCUST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CCPROCFEEADJREASON",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CCPROCFEEADJREASON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CCPROCFEEGLACCOUNT",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CCPROCFEEGLACCOUNT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CCPROCFEERATE",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_CCPROCFEERATE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CCPROCFEEDESC",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CCPROCFEEDESC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFTAX",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DEFTAX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SYNCINTERVAL",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_SYNCINTERVAL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_GLINVFAC",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_GLINVFAC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_APPLCUSTORIG",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_APPLCUSTORIG",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEMNONWORK",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DEMNONWORK",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sy03_tokenmerchant",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_TOKENMERCHANT",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "TRUX_LEGACY01",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "SY03",
									"database": "TRUX_DATA"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "LEGACY_SY03",
									"Snowflake_Schema": "MASTER_DATA"
								}
							}
						]
					},
					{
						"name": "Copy MIDWEST SY03 table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.MASTER_DATA.MIDWEST_SY03",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SY03_CODE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_NAME",
											"type": "String"
										},
										"sink": {
											"name": "SY03_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ADD1",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ADD1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ADD2",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ADD2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CITY",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CITY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_STAT",
											"type": "String"
										},
										"sink": {
											"name": "SY03_STAT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PZIP",
											"type": "String"
										},
										"sink": {
											"name": "SY03_PZIP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_COUN",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_COUN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_PHON",
											"type": "String"
										},
										"sink": {
											"name": "SY03_PHON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_FAX",
											"type": "String"
										},
										"sink": {
											"name": "SY03_FAX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_EMAIL",
											"type": "String"
										},
										"sink": {
											"name": "SY03_EMAIL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_WEBSITE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_WEBSITE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DB",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DB",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFC",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DEFC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFS",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DEFS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF1",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF2",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF3",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF3",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF4",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF4",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PRTNAME",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_PRTNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PRTSTATCAP",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_PRTSTATCAP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CHGINTEREST",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CHGINTEREST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CURR",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CURR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CREDITLIMIT",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CREDITLIMIT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PARSED",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_PARSED",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_AUTOSITE",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_AUTOSITE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_INVSEQ1",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_INVSEQ1",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_INVSEQ2",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_INVSEQ2",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_BALO",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_BALO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_BILLTO",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_BILLTO",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_GTWCFGID",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_GTWCFGID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_MERCHID",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_MERCHID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_DBVERSION",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DBVERSION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ACCTAPP",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ACCTAPP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ACCTFILE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ACCTFILE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_HWR",
											"type": "String"
										},
										"sink": {
											"name": "SY03_HWR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_AUTOLOADFILE",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_AUTOLOADFILE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REFN",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REFN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_VUOM",
											"type": "String"
										},
										"sink": {
											"name": "SY03_VUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SITETYPE",
											"type": "Byte"
										},
										"sink": {
											"name": "SY03_SITETYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_WOCOPIES",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_WOCOPIES",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_ENCVER",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_ENCVER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_NAT",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_NAT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_MOBID",
											"type": "String"
										},
										"sink": {
											"name": "SY03_MOBID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REINSCHECKDTE",
											"type": "DateTime"
										},
										"sink": {
											"name": "SY03_REINSCHECKDTE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "SY03_AUTOHMPAGE",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_AUTOHMPAGE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SNDFLDR",
											"type": "String"
										},
										"sink": {
											"name": "SY03_SNDFLDR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_RECFLDR",
											"type": "String"
										},
										"sink": {
											"name": "SY03_RECFLDR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_FMMASTER",
											"type": "String"
										},
										"sink": {
											"name": "SY03_FMMASTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_GPSFOLDER",
											"type": "String"
										},
										"sink": {
											"name": "SY03_GPSFOLDER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFPA",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DEFPA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF5",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF5",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_LOCK",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_LOCK",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_WOSHOWMSG",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_WOSHOWMSG",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CASH",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_CASH",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CASHT",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CASHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_OverdueLetter",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_OVERDUELETTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_AttachOverdueLetter",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ATTACHOVERDUELETTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_AttachFolderOverdueLetter",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ATTACHFOLDEROVERDUELETTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_INVOICEORDER",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_INVOICEORDER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_LEED",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_LEED",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_TUOM",
											"type": "String"
										},
										"sink": {
											"name": "SY03_TUOM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_WARRONTRUK",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_WARRONTRUK",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_LABELPRINTER",
											"type": "String"
										},
										"sink": {
											"name": "SY03_LABELPRINTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_LABELHEIGHT",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_LABELHEIGHT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_LABELWIDTH",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_LABELWIDTH",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_ATTACHINDB",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ATTACHINDB",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_FILESIZE",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_FILESIZE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_NOTE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_NOTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CHGCODE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CHGCODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CHGRATE",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_CHGRATE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_GLNU",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_GLNU",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_LANDFILL",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_LANDFILL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_TRANSFER",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_TRANSFER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_MRF",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_MRF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_COMPOST",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_COMPOST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_VEGAS",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_VEGAS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_RSI",
											"type": "String"
										},
										"sink": {
											"name": "SY03_RSI",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REASON",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REASON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CLASS",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CLASS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SITE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_SITE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REINSTATEREASON",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REINSTATEREASON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REPRINTREASON",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_REPRINTREASON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_RRNMAP",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_RRNMAP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_VALC",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_VALC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_LANGUAGE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_LANGUAGE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEF6",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEF6",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sy03_lmargin",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_LMARGIN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_DefaultAttachFolder",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEFAULTATTACHFOLDER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PRINTBILLPARAM",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_PRINTBILLPARAM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CONTYPE",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_CONTYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CONAMT",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_CONAMT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CONUSE",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CONUSE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DOWNTIMESTARTEND",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DOWNTIMESTARTEND",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ROLABORTIMESPAN",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ROLABORTIMESPAN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_USEGMAP",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_USEGMAP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SHOWPARTSUBSYSTEM",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_SHOWPARTSUBSYSTEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_QTDWARN",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_QTDWARN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_QTDSTOP",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_QTDSTOP",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CREDITMEMO",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CREDITMEMO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ADJAPPV",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ADJAPPV",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_NOTIFYUSER",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_NOTIFYUSER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SHOWRATE",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_SHOWRATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ASSETTRANSFER",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ASSETTRANSFER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_TEST",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_TEST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SchedCallsToRouteFromSC",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_SCHEDCALLSTOROUTEFROMSC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_EmailRSToDriver",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_EMAILRSTODRIVER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFCUSTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_DEFCUSTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_NO0MINIWARNINGFORINTERC",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_NO0MINIWARNINGFORINTERC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PRINTPRICES",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_PRINTPRICES",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_MAXODOMETER",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_MAXODOMETER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_MAXENGINEHOURS",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_MAXENGINEHOURS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_ADDCALLTOEND",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ADDCALLTOEND",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ALLOWCHGHELDTKT",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ALLOWCHGHELDTKT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMADD1",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMADD1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMADD2",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMADD2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMCITY",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMCITY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMSTAT",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMSTAT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMPZIP",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMPZIP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMCOUN",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_REMCOUN",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_REMPHON",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMPHON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMFAX",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMFAX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_REMEMAIL",
											"type": "String"
										},
										"sink": {
											"name": "SY03_REMEMAIL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ADJTYPE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_ADJTYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_ADVDAYS",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_ADVDAYS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_RMINTERFACE",
											"type": "String"
										},
										"sink": {
											"name": "SY03_RMINTERFACE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_EXPORTPATH",
											"type": "String"
										},
										"sink": {
											"name": "SY03_EXPORTPATH",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_IMPORTPATH",
											"type": "String"
										},
										"sink": {
											"name": "SY03_IMPORTPATH",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_RMURL",
											"type": "String"
										},
										"sink": {
											"name": "SY03_RMURL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_USERNAME",
											"type": "String"
										},
										"sink": {
											"name": "SY03_USERNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_PASSWORD",
											"type": "String"
										},
										"sink": {
											"name": "SY03_PASSWORD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_RMAPIKEY",
											"type": "String"
										},
										"sink": {
											"name": "SY03_RMAPIKEY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_MANINVSURCHG",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_MANINVSURCHG",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_QUICKSEARCHAUTOFILL",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_QUICKSEARCHAUTOFILL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_USDOT",
											"type": "String"
										},
										"sink": {
											"name": "SY03_USDOT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_TENDERAMNTREQUIRED",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_TENDERAMNTREQUIRED",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_STORECVV2",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_STORECVV2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFAULTPAYTERMS",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_DEFAULTPAYTERMS",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_NOJOBAFTER",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_NOJOBAFTER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CONTDREADONLY",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CONTDREADONLY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CONTRATETYPE",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_CONTRATETYPE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_FORCEFACILITYSELECTION",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_FORCEFACILITYSELECTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_AttachImageToInvoiceDefault",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_ATTACHIMAGETOINVOICEDEFAULT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CCPROCFEEDEFAULTNEWCUST",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_CCPROCFEEDEFAULTNEWCUST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CCPROCFEEADJREASON",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CCPROCFEEADJREASON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CCPROCFEEGLACCOUNT",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CCPROCFEEGLACCOUNT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_CCPROCFEERATE",
											"type": "Decimal"
										},
										"sink": {
											"name": "SY03_CCPROCFEERATE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_CCPROCFEEDESC",
											"type": "String"
										},
										"sink": {
											"name": "SY03_CCPROCFEEDESC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEFTAX",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DEFTAX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_SYNCINTERVAL",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_SYNCINTERVAL",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SY03_GLINVFAC",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_GLINVFAC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_APPLCUSTORIG",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_APPLCUSTORIG",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SY03_DEMNONWORK",
											"type": "Boolean"
										},
										"sink": {
											"name": "SY03_DEMNONWORK",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sy03_tokenmerchant",
											"type": "Int32"
										},
										"sink": {
											"name": "SY03_TOKENMERCHANT",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "SY03",
									"database": "TRUX_DATA"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "MIDWEST_SY03",
									"Snowflake_Schema": "MASTER_DATA"
								}
							}
						]
					},
					{
						"name": "Copy MIDWEST USER table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.MASTER_DATA.MIDWEST_USER;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "USER_CODE",
											"type": "String"
										},
										"sink": {
											"name": "USER_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "USER_FNAME",
											"type": "String"
										},
										"sink": {
											"name": "USER_FNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "USER_LNAME",
											"type": "String"
										},
										"sink": {
											"name": "USER_LNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "USER_EMAIL",
											"type": "String"
										},
										"sink": {
											"name": "USER_EMAIL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "USER_DISABLED",
											"type": "Boolean"
										},
										"sink": {
											"name": "USER_DISABLED",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "USER_EMPLOYEEID",
											"type": "String"
										},
										"sink": {
											"name": "USER_EMPLOYEEID",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "USER",
									"database": "TRUX_DATA"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "MIDWEST_USER",
									"Snowflake_Schema": "MASTER_DATA"
								}
							}
						]
					},
					{
						"name": "Copy LEGACY USER table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "truncate table LRS_RAW.MASTER_DATA.LEGACY_USER;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "USER_CODE",
											"type": "String"
										},
										"sink": {
											"name": "USER_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "USER_FNAME",
											"type": "String"
										},
										"sink": {
											"name": "USER_FNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "USER_LNAME",
											"type": "String"
										},
										"sink": {
											"name": "USER_LNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "USER_EMAIL",
											"type": "String"
										},
										"sink": {
											"name": "USER_EMAIL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "USER_DISABLED",
											"type": "Boolean"
										},
										"sink": {
											"name": "USER_DISABLED",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "USER_EMPLOYEEID",
											"type": "String"
										},
										"sink": {
											"name": "USER_EMPLOYEEID",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "TRUX_LEGACY01",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "USER",
									"database": "TRUX_DATA"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "LEGACY_USER",
									"Snowflake_Schema": "MASTER_DATA"
								}
							}
						]
					},
					{
						"name": "Copy MIDWEST ONLINE ACCT table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT [OPACCOUNT_ID]\n, [OPACCOUNT_EMAIL]\n, [OPACCOUNT_REGISDTE]\n, os.[OPACCESS_ID]\n, [OPACCESS_COMP]\n, [OPACCESS_CUST]\n, [OPACCESS_SITE]\n, [OPACCESS_ACTIVEDTE]\n, [OPACCESS_DEACTIVEDTE]\nFROM [OPACCOUNT] ot\nINNER JOIN [OPACCESS] os\nON [OPACCOUNT_ID] = [OPACCESS_LINK]\nINNER JOIN (SELECT MAX([OPACCESS_ID]) AS [OPACCESS_ID]\n\t\t      FROM [OPACCESS]\n\t\t\t GROUP BY OPACCESS_LINK) AS latest\nON os.[OPACCESS_ID] = latest.[OPACCESS_ID];",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.MASTER_DATA.MIDWEST_ONLINE_ACCT;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "OPACCOUNT_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "OPACCOUNT_ID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OPACCOUNT_EMAIL",
											"type": "String"
										},
										"sink": {
											"name": "OPACCOUNT_EMAIL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OPACCOUNT_REGISDTE",
											"type": "DateTime"
										},
										"sink": {
											"name": "OPACCOUNT_REGISDTE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "OPACCESS_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "OPACCESS_ID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OPACCESS_COMP",
											"type": "String"
										},
										"sink": {
											"name": "OPACCESS_COMP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OPACCESS_CUST",
											"type": "Int32"
										},
										"sink": {
											"name": "OPACCESS_CUST",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OPACCESS_SITE",
											"type": "Int32"
										},
										"sink": {
											"name": "OPACCESS_SITE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OPACCESS_ACTIVEDTE",
											"type": "DateTime"
										},
										"sink": {
											"name": "OPACCESS_ACTIVEDTE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "OPACCESS_DEACTIVEDTE",
											"type": "DateTime"
										},
										"sink": {
											"name": "OPACCESS_DEACTIVEDTE",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "MSAZ01",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "OPACCOUNT",
									"database": "TRUX_DATA"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "MIDWEST_ONLINE_ACCT",
									"Snowflake_Schema": "MASTER_DATA"
								}
							}
						]
					},
					{
						"name": "Copy LEGACY ONLINE ACCT table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT [OPACCOUNT_ID]\n, [OPACCOUNT_EMAIL]\n, [OPACCOUNT_REGISDTE]\n, os.[OPACCESS_ID]\n, [OPACCESS_COMP]\n, [OPACCESS_CUST]\n, [OPACCESS_SITE]\n, [OPACCESS_ACTIVEDTE]\n, [OPACCESS_DEACTIVEDTE]\nFROM [OPACCOUNT] ot\nINNER JOIN [OPACCESS] os\nON [OPACCOUNT_ID] = [OPACCESS_LINK]\nINNER JOIN (SELECT MAX([OPACCESS_ID]) AS [OPACCESS_ID]\n\t\t      FROM [OPACCESS]\n\t\t\t GROUP BY OPACCESS_LINK) AS latest\nON os.[OPACCESS_ID] = latest.[OPACCESS_ID];",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE LRS_RAW.MASTER_DATA.MIDWEST_ONLINE_ACCT;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "msaz01_dm01_Azure_Blob",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "OPACCOUNT_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "OPACCOUNT_ID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OPACCOUNT_EMAIL",
											"type": "String"
										},
										"sink": {
											"name": "OPACCOUNT_EMAIL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OPACCOUNT_REGISDTE",
											"type": "DateTime"
										},
										"sink": {
											"name": "OPACCOUNT_REGISDTE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "OPACCESS_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "OPACCESS_ID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OPACCESS_COMP",
											"type": "String"
										},
										"sink": {
											"name": "OPACCESS_COMP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OPACCESS_CUST",
											"type": "Int32"
										},
										"sink": {
											"name": "OPACCESS_CUST",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OPACCESS_SITE",
											"type": "Int32"
										},
										"sink": {
											"name": "OPACCESS_SITE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OPACCESS_ACTIVEDTE",
											"type": "DateTime"
										},
										"sink": {
											"name": "OPACCESS_ACTIVEDTE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "OPACCESS_DEACTIVEDTE",
											"type": "DateTime"
										},
										"sink": {
											"name": "OPACCESS_DEACTIVEDTE",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "TRUX_LEGACY01",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "OPACCOUNT",
									"database": "TRUX_DATA"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "MIDWEST_ONLINE_ACCT",
									"Snowflake_Schema": "MASTER_DATA"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Production/TRUX"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_MIDWEST_DATA_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Database Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Database Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy SL01",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.SL01')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SL01_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "SL01_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SL01_NAME",
														"type": "String"
													},
													"sink": {
														"name": "SL01_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_ADDS",
														"type": "String"
													},
													"sink": {
														"name": "SL01_ADDS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_CITY",
														"type": "String"
													},
													"sink": {
														"name": "SL01_CITY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_STAT",
														"type": "String"
													},
													"sink": {
														"name": "SL01_STAT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_PZIP",
														"type": "String"
													},
													"sink": {
														"name": "SL01_PZIP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_LATT",
														"type": "Decimal"
													},
													"sink": {
														"name": "SL01_LATT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SL01_LONG",
														"type": "Decimal"
													},
													"sink": {
														"name": "SL01_LONG",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SL01_ACTIVE",
														"type": "Boolean"
													},
													"sink": {
														"name": "SL01_ACTIVE",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "SL01",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "SL01",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								},
								{
									"name": "Copy SP03",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy SL01",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.SP03')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SP03_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SP03_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SP03_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SP03_REFE",
														"type": "String"
													},
													"sink": {
														"name": "SP03_REFE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SP03_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_SITE",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "SP03",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "SP03",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								},
								{
									"name": "Copy CC02",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy SP03",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT \r\n      [CC02_CUST]\r\n      ,[CC02_SITE]\r\n      ,[CC02_TYPE]\r\n      , NULL AS [CC02_NUMBER]\r\n      ,[CC02_EXPMO]\r\n      ,[CC02_EXPYE]\r\n      , NULL AS [CC02_CVV2]\r\n      ,[CC02_HFNAME]\r\n      ,[CC02_HLNAME]\r\n      ,[CC02_HADD]\r\n      ,[CC02_HCITY]\r\n      ,[CC02_HSTAT]\r\n      ,[CC02_HZIP]\r\n      ,[CC02_HCOUN]\r\n      ,[CC02_HPHON]\r\n      ,[CC02_HEMAIL]\r\n      ,[CC02_ACTIVE]\r\n      ,[CC02_CHRGTYPE]\r\n      ,[CC02_ID]\r\n      , NULL AS [CC02_ROUTNUM]\r\n      ,[CC02_ACCTYPE]\r\n      ,[CC02_BANKN]\r\n      ,[CC02_LICNUM]\r\n      ,[CC02_LICSTAT]\r\n      ,[CC02_DOB]\r\n      ,[CC02_ACCNAME]\r\n      ,[CC02_TOKEN]\r\n      ,[CC02_ACCOUNTTYPE]\r\nFROM \r\n      dbo.CC02",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.CC02')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "CC02_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CC02_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CC02_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_NUMBER",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_NUMBER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_EXPMO",
														"type": "String"
													},
													"sink": {
														"name": "CC02_EXPMO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_EXPYE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_EXPYE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_CVV2",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_CVV2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HFNAME",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HFNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HLNAME",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HLNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HADD",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HADD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HCITY",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HCITY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HSTAT",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HSTAT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HZIP",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HZIP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HCOUN",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HCOUN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HPHON",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HPHON",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HEMAIL",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HEMAIL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_ACTIVE",
														"type": "Boolean"
													},
													"sink": {
														"name": "CC02_ACTIVE",
														"type": "Boolean"
													}
												},
												{
													"source": {
														"name": "CC02_CHRGTYPE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_CHRGTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CC02_ROUTNUM",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_ROUTNUM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_ACCTYPE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_ACCTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_BANKN",
														"type": "String"
													},
													"sink": {
														"name": "CC02_BANKN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_LICNUM",
														"type": "String"
													},
													"sink": {
														"name": "CC02_LICNUM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_LICSTAT",
														"type": "String"
													},
													"sink": {
														"name": "CC02_LICSTAT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_DOB",
														"type": "DateTime"
													},
													"sink": {
														"name": "CC02_DOB",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CC02_ACCNAME",
														"type": "String"
													},
													"sink": {
														"name": "CC02_ACCNAME",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "CC02",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "CC02",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								},
								{
									"name": "Copy LF05O",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy CC02",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.LF05O')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "LF05O_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LF05O_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LF05O_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "LF05O_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LF05O_ORIG",
														"type": "String"
													},
													"sink": {
														"name": "LF05O_ORIG",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LF05O_PERC",
														"type": "Decimal"
													},
													"sink": {
														"name": "LF05O_PERC",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "LF05O",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "LF05O",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Database Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "SELECT * FROM LRS_RAW.MASTER_DATA.DATABASE_LOOKUP_TRUX_COMBINED\nWHERE SERVERNAME = 'MIDWEST';",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LOOKUP_TRUX_COMBINED",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					}
				},
				"folder": {
					"name": "Production/TRUX"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-27T13:50:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_MIDWEST_DATA_LOAD_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Database Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Database Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy SL01",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.SL01')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SL01_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "SL01_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SL01_NAME",
														"type": "String"
													},
													"sink": {
														"name": "SL01_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_ADDS",
														"type": "String"
													},
													"sink": {
														"name": "SL01_ADDS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_CITY",
														"type": "String"
													},
													"sink": {
														"name": "SL01_CITY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_STAT",
														"type": "String"
													},
													"sink": {
														"name": "SL01_STAT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_PZIP",
														"type": "String"
													},
													"sink": {
														"name": "SL01_PZIP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SL01_LATT",
														"type": "Decimal"
													},
													"sink": {
														"name": "SL01_LATT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SL01_LONG",
														"type": "Decimal"
													},
													"sink": {
														"name": "SL01_LONG",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SL01_ACTIVE",
														"type": "Boolean"
													},
													"sink": {
														"name": "SL01_ACTIVE",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "SL01",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "SL01",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								},
								{
									"name": "Copy SP03",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy SL01",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.SP03')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SP03_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SP03_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SP03_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SP03_REFE",
														"type": "String"
													},
													"sink": {
														"name": "SP03_REFE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SP03_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "SP03_SITE",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "SP03",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "SP03",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								},
								{
									"name": "Copy CC02",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy SP03",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT \r\n      [CC02_CUST]\r\n      ,[CC02_SITE]\r\n      ,[CC02_TYPE]\r\n      , NULL AS [CC02_NUMBER]\r\n      ,[CC02_EXPMO]\r\n      ,[CC02_EXPYE]\r\n      , NULL AS [CC02_CVV2]\r\n      ,[CC02_HFNAME]\r\n      ,[CC02_HLNAME]\r\n      ,[CC02_HADD]\r\n      ,[CC02_HCITY]\r\n      ,[CC02_HSTAT]\r\n      ,[CC02_HZIP]\r\n      ,[CC02_HCOUN]\r\n      ,[CC02_HPHON]\r\n      ,[CC02_HEMAIL]\r\n      ,[CC02_ACTIVE]\r\n      ,[CC02_CHRGTYPE]\r\n      ,[CC02_ID]\r\n      , NULL AS [CC02_ROUTNUM]\r\n      ,[CC02_ACCTYPE]\r\n      ,[CC02_BANKN]\r\n      ,[CC02_LICNUM]\r\n      ,[CC02_LICSTAT]\r\n      ,[CC02_DOB]\r\n      ,[CC02_ACCNAME]\r\n      ,[CC02_TOKEN]\r\n      ,[CC02_ACCOUNTTYPE]\r\nFROM \r\n      dbo.CC02",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.CC02')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "CC02_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CC02_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CC02_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_NUMBER",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_NUMBER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_EXPMO",
														"type": "String"
													},
													"sink": {
														"name": "CC02_EXPMO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_EXPYE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_EXPYE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_CVV2",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_CVV2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HFNAME",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HFNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HLNAME",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HLNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HADD",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HADD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HCITY",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HCITY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HSTAT",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HSTAT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HZIP",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HZIP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HCOUN",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HCOUN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HPHON",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HPHON",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_HEMAIL",
														"type": "String"
													},
													"sink": {
														"name": "CC02_HEMAIL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_ACTIVE",
														"type": "Boolean"
													},
													"sink": {
														"name": "CC02_ACTIVE",
														"type": "Boolean"
													}
												},
												{
													"source": {
														"name": "CC02_CHRGTYPE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_CHRGTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CC02_ROUTNUM",
														"type": "Int32"
													},
													"sink": {
														"name": "CC02_ROUTNUM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_ACCTYPE",
														"type": "String"
													},
													"sink": {
														"name": "CC02_ACCTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_BANKN",
														"type": "String"
													},
													"sink": {
														"name": "CC02_BANKN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_LICNUM",
														"type": "String"
													},
													"sink": {
														"name": "CC02_LICNUM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_LICSTAT",
														"type": "String"
													},
													"sink": {
														"name": "CC02_LICSTAT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CC02_DOB",
														"type": "DateTime"
													},
													"sink": {
														"name": "CC02_DOB",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CC02_ACCNAME",
														"type": "String"
													},
													"sink": {
														"name": "CC02_ACCNAME",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "CC02",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "CC02",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								},
								{
									"name": "Copy LF05O",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy CC02",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name_New,'.LF05O')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "msaz01_dm01_Azure_Blob",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "LF05O_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LF05O_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LF05O_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "LF05O_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LF05O_ORIG",
														"type": "String"
													},
													"sink": {
														"name": "LF05O_ORIG",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LF05O_PERC",
														"type": "Decimal"
													},
													"sink": {
														"name": "LF05O_PERC",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "LF05O",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "LF05O",
												"Snowflake_Schema": "@item().Snowflake_Name_New"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Database Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "SELECT * FROM LRS_RAW.MASTER_DATA.DATABASE_LOOKUP_TRUX_COMBINED\nWHERE SERVERNAME = 'MIDWEST';",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LOOKUP_TRUX_COMBINED",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-27T13:51:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_MIDWEST_FULL_LOAD_DIM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Database Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Database Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "LM03 Copy",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name,'.LM03')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "LM03",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "LM03",
												"Snowflake_Schema": "@item().Snowflake_Name"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Database Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LOOKUP_TRUX_MIDWEST",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 16
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 32
					}
				},
				"folder": {
					"name": "Production/TRUX_OLD"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_MIDWEST_FULL_LOAD_FACT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Database Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Database Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DM01P",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name,'.DM01P')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM01P_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM01P_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_BATCH",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_BATCH",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GLNU",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_GLNU",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINKID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GROUP",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_GROUP",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM01P",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01P",
												"Snowflake_Schema": "@item().Snowflake_Name"
											}
										}
									]
								},
								{
									"name": "DM05A Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM01P",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name,'.DM05A')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05A_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05A",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05A",
												"Snowflake_Schema": "@item().Snowflake_Name"
											}
										}
									]
								},
								{
									"name": "DM05B Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05A Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name,'.DM05B')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05B_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ARATEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ARATEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05B",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05B",
												"Snowflake_Schema": "@item().Snowflake_Name"
											}
										}
									]
								},
								{
									"name": "DM05Z Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05B Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Name,'.DM05Z')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05Z_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05Z",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05Z",
												"Snowflake_Schema": "@item().Snowflake_Name"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Database Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LOOKUP_TRUX_MIDWEST",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					}
				},
				"folder": {
					"name": "Production/TRUX_OLD"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_MIDWEST_FULL_LOAD_FACT_NEW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop over databases",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Database Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Database Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DM01P",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.DM01P')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM01P_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM01P_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_BATCH",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_BATCH",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GLNU",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_GLNU",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINKID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GROUP",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_GROUP",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM01P",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01P",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05A Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM01P",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.DM05A')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05A_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05A",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05A",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05B Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05A Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.DM05B')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05B_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ARATEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ARATEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05B",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05B",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05Z Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05B Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.DM05Z')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05Z_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05Z",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05Z",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "RM07 Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05Z Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.RM07')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "RM07_RDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM07_RDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM07_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_REASON",
														"type": "String"
													},
													"sink": {
														"name": "RM07_REASON",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM07_TIME",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_TIME",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_TRUK",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_TRUK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_ODOM",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_ODOM",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_STIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM07_STIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM07_ETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM07_ETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM07_DRIV",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_DRIV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "RM07",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM07",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05L Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "RM07 Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.DM05L')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05L_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05L_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05L_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05L_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05L_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05L_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05L_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05L_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05L_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05L_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05L_DSTE",
														"type": "String"
													},
													"sink": {
														"name": "DM05L_DSTE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05L_TICK",
														"type": "String"
													},
													"sink": {
														"name": "DM05L_TICK",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05L_DTID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05L_DTID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05L_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05L_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05L_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05L_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05L_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05L_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05L_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05L_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05L_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05L_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05L_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05L_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05L_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05L_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05l",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05L",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "CCLOG Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05L Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": {
												"value": "@{concat('truncate table',' ',item().Snowflake_Schema_New,'.CCLOG')}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "CONTINUE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobLinkedService",
													"type": "LinkedServiceReference"
												}
											}
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "CCLOG_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "CCLOG_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CCLOG_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "CCLOG_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CCLOG_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "CCLOG_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CCLOG_TDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "CCLOG_TDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CCLOG_PDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "CCLOG_PDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CCLOG_USER",
														"type": "String"
													},
													"sink": {
														"name": "CCLOG_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CCLOG_INVC",
														"type": "String"
													},
													"sink": {
														"name": "CCLOG_INVC",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CCLOG_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "CCLOG_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "CCLOG_APPV",
														"type": "Boolean"
													},
													"sink": {
														"name": "CCLOG_APPV",
														"type": "Boolean"
													}
												},
												{
													"source": {
														"name": "CCLOG_TRANID",
														"type": "String"
													},
													"sink": {
														"name": "CCLOG_TRANID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CCLOG_ACODE",
														"type": "String"
													},
													"sink": {
														"name": "CCLOG_ACODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CCLOG_RCODE",
														"type": "String"
													},
													"sink": {
														"name": "CCLOG_RCODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CCLOG_RTEXT",
														"type": "String"
													},
													"sink": {
														"name": "CCLOG_RTEXT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CCLOG_RTRANID",
														"type": "String"
													},
													"sink": {
														"name": "CCLOG_RTRANID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CCLOG_CC02ID",
														"type": "Int32"
													},
													"sink": {
														"name": "CCLOG_CC02ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "CCLOG",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "CCLOG",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Database Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TRUX_MIDWEST_WATERMARK_PVT",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					}
				},
				"folder": {
					"name": "Production/TRUX"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_MIDWEST_INCREMENTAL_LOAD_FACT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Trux Midwest ID Watermark Lookup",
						"description": "look up schema, database and table names from sqlsever and snowflake",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TRUX_MIDWEST_WATERMARK_PVT",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Incremental Loop Over ID Watermark Tables",
						"description": "Activity to loop over tables that have primary keys with incremental IDs. This loops looks at our Watermark table in Snowflake and appends any IDs found in SQL server that are greater than the latest watermark in Snowflake.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Trux Midwest ID Watermark Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Trux Midwest ID Watermark Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DM01 Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM01\nwhere DM01_ID > @{item().DM01}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM01_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_INVC",
														"type": "String"
													},
													"sink": {
														"name": "DM01_INVC",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01_SSIT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_SSIT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_PBLE",
														"type": "String"
													},
													"sink": {
														"name": "DM01_PBLE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01_BILLINDV",
														"type": "String"
													},
													"sink": {
														"name": "DM01_BILLINDV",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01_CONTRACT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_CONTRACT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_AMOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM01_AMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_ORIGINVID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01_ORIGINVID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01_FCTY",
														"type": "String"
													},
													"sink": {
														"name": "DM01_FCTY",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM01",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM01p Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM01 Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM01P\nwhere DM01P_ID > @{item().DM01P}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM01P_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM01P_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_BATCH",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_BATCH",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GLNU",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_GLNU",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINKID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GROUP",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_GROUP",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM01P",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01P",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05A Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM01p Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05A\nwhere DM05A_ID > @{item().DM05A}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05A_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05A",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05A",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05B Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05A Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05B\nwhere DM05B_ID > @{item().DM05B}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05B_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ARATEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ARATEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05B",
												"database": {
													"value": "@item().sql_db_Name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05B",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05FT Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05B Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05FT\nwhere DM05FT_ID > @{item().DM05FT}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05FT_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05FT_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05FT_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05FT_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05FT_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_SSIT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_SSIT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_SERV",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_SERV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05FT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05FT_DESC",
														"type": "String"
													},
													"sink": {
														"name": "DM05FT_DESC",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05FT_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05FT_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05FT_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05FT_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05FT_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05FT_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05FT_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05FT_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05FT_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05FT_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05FT_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05FT",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05FT",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05Z Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05FT Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05Z\nwhere DM05Z_ID > @{item().DM05Z}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05Z_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05Z",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05Z",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "LM02 Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05Z Incremental Delta Load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from LM02\nwhere LM02_ID > @{item().LM02}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "LM02_DSTE",
														"type": "String"
													},
													"sink": {
														"name": "LM02_DSTE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_NUMB",
														"type": "String"
													},
													"sink": {
														"name": "LM02_NUMB",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_INOT",
														"type": "Boolean"
													},
													"sink": {
														"name": "LM02_INOT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_DQTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_DQTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_DUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_DUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_DAMT",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_DAMT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_SERV",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_SERV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_BQTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_BQTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_BUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_BUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_BAMT",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_BAMT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_MATL",
														"type": "String"
													},
													"sink": {
														"name": "LM02_MATL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_BLAD",
														"type": "String"
													},
													"sink": {
														"name": "LM02_BLAD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_PORD",
														"type": "String"
													},
													"sink": {
														"name": "LM02_PORD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_CARR",
														"type": "String"
													},
													"sink": {
														"name": "LM02_CARR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_NOT1",
														"type": "String"
													},
													"sink": {
														"name": "LM02_NOT1",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_NOT2",
														"type": "String"
													},
													"sink": {
														"name": "LM02_NOT2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_IDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_IDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_UCHG",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_UCHG",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_MIN",
														"type": "String"
													},
													"sink": {
														"name": "LM02_MIN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_SEQ1",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_SEQ1",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_SEQ2",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_SEQ2",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_FQTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_FQTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_FUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_FUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_DRATE",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_DRATE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_OWN",
														"type": "String"
													},
													"sink": {
														"name": "LM02_OWN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_LF05ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_LF05ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_UCHGUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_UCHGUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_DRATEUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_DRATEUOM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_FINV",
														"type": "String"
													},
													"sink": {
														"name": "LM02_FINV",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_FDAT",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_FDAT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_FUSE",
														"type": "String"
													},
													"sink": {
														"name": "LM02_FUSE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_FRDT",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_FRDT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_CDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_CDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_TIN",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_TIN",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_TOUT",
														"type": "DateTime"
													},
													"sink": {
														"name": "LM02_TOUT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LM02_CM09ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_CM09ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_LM05ID",
														"type": "Int32"
													},
													"sink": {
														"name": "LM02_LM05ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_LEED",
														"type": "Boolean"
													},
													"sink": {
														"name": "LM02_LEED",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LM02_LEEDWEIGHT",
														"type": "Decimal"
													},
													"sink": {
														"name": "LM02_LEEDWEIGHT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LM02_LEEDWEIGHTUOM",
														"type": "String"
													},
													"sink": {
														"name": "LM02_LEEDWEIGHTUOM",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "LM02",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "LM02",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "RM03U Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LM02 Incremental Delta Load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from RM03U\nwhere RM03U_ID > @{item().RM03U}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "RM03U_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM03U_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM03U_CUST",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_CUST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_SITE",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_SITE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_SERV",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_SERV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "RM03U_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_ACTV",
														"type": "String"
													},
													"sink": {
														"name": "RM03U_ACTV",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM03U_REFN",
														"type": "String"
													},
													"sink": {
														"name": "RM03U_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM03U_TIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM03U_TIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM03U_WONU",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_WONU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_DATA",
														"type": "String"
													},
													"sink": {
														"name": "RM03U_DATA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM03U_TTKN",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM03U_TTKN",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM03U_UTKN",
														"type": "String"
													},
													"sink": {
														"name": "RM03U_UTKN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM03U_LOGID",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_LOGID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_CHG",
														"type": "Decimal"
													},
													"sink": {
														"name": "RM03U_CHG",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_TIM2",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM03U_TIM2",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM03U_CALLID",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_CALLID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_STORIG",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_STORIG",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_STPREV",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_STPREV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM03U_STNEXT",
														"type": "Int32"
													},
													"sink": {
														"name": "RM03U_STNEXT",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "RM03U",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM03U",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Incremental Loop Over Date Watermark Tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Trux Midwest ID Watermark Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Trux Midwest ID Watermark Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "RM05 Incremental Delta Load to Staging",
									"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging table for RM05",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from RM05 where RM05_DATE >DATEADD(day,-', \n    pipeline().parameters.Incremental_Range,\n    ', GETDATE())'\n    )\n}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "RM05",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM05_STAGING",
												"Snowflake_Schema": "@item().snowflake_schema"
											}
										}
									]
								},
								{
									"name": "RM05 Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "RM05 Incremental Delta Load to Staging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into ', item().Snowflake_schema,'.','RM05 t \nusing ', \n    item().Snowflake_schema,'.','RM05_STAGING s \non concat(t.rm05_rout, t.rm05_seq1,t.rm05_seq2,t.rm05_date) = concat(s.rm05_rout, s.rm05_seq1,s.rm05_seq2,s.rm05_date) \nwhen matched then update set \n    t.rm05_date = s.rm05_date,\n\tt.rm05_rout = s.rm05_rout,\n\tt.rm05_seq1 = s.rm05_seq1, \n\tt.rm05_seq2 = s.rm05_seq2, \n\tt.rm05_truk = s.rm05_truk,\n\tt.rm05_driv = s.rm05_driv,\n\tt.rm05_help = s.rm05_help,\n\tt.rm05_fuel = s.rm05_fuel,\n\tt.rm05_fuom = s.rm05_fuom,\n\tt.rm05_tim1 = s.rm05_tim1,\n\tt.rm05_tim2 = s.rm05_tim2,\n\tt.rm05_odm1 = s.rm05_odm1,\n\tt.rm05_odm2 = s.rm05_odm2,\n\tt.rm05_ouom = s.rm05_ouom,\n\tt.rm05_note = s.rm05_note,\n\tt.rm05_starthour = s.rm05_starthour,\n\tt.rm05_endhour = s.rm05_endhour,\n\tt.rm05_oil = s.rm05_oil,\n\tt.rm05_oil_uom = s.rm05_oil_uom,\n\tt.rm05_deptime = s.rm05_deptime,\n\tt.rm05_rettime = s.rm05_rettime,\n\tt.rm05_starttime= s.rm05_starttime \nwhen not matched then insert \n\t(\n\tt.rm05_date,\n\tt.rm05_rout,\n\tt.rm05_seq1,\n\tt.rm05_seq2,\n\tt.rm05_truk,\n\tt.rm05_driv,\n\tt.rm05_help,\n\tt.rm05_fuel,\n\tt.rm05_fuom,\n\tt.rm05_tim1,\n\tt.rm05_tim2,\n\tt.rm05_odm1,\n\tt.rm05_odm2,\n\tt.rm05_ouom,\n\tt.rm05_note,\n\tt.rm05_starthour,\n\tt.rm05_endhour,\n\tt.rm05_oil,\n\tt.rm05_oil_uom,\n\tt.rm05_deptime,\n\tt.rm05_rettime,\n\tt.rm05_starttime \n\t)\nvalues \n\t(\n\ts.rm05_date,\n\ts.rm05_rout,\n\ts.rm05_seq1, \n\ts.rm05_seq2, \n\ts.rm05_truk,\n\ts.rm05_driv,\n\ts.rm05_help,\n\ts.rm05_fuel,\n\ts.rm05_fuom,\n\ts.rm05_tim1,\n\ts.rm05_tim2,\n\ts.rm05_odm1,\n\ts.rm05_odm2,\n\ts.rm05_ouom,\n\ts.rm05_note,\n\ts.rm05_starthour,\n\ts.rm05_endhour,\n\ts.rm05_oil,\n\ts.rm05_oil_uom,\n\ts.rm05_deptime,\n\ts.rm05_rettime,\n\ts.rm05_starttime)'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "SM01 Snowflake Merge Operation_copy1",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "SM01 Incremental Delta Load to Staging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into ', item().snowflake_schema,'.','SM01 t \nusing ', \n    item().snowflake_schema,'.','sm01_staging s \non concat(t.sm01_rout, t.sm01_sequ, t.sm01_date) = concat(s.sm01_rout, s.sm01_sequ, s.sm01_date) \nwhen matched then update set \n\tt.sm01_date= s.sm01_date ,\n\tt.sm01_rout= s.sm01_rout ,\n\tt.sm01_sequ= s.sm01_sequ ,\n\tt.sm01_cust= s.sm01_cust ,\n\tt.sm01_site= s.sm01_site ,\n\tt.sm01_serv= s.sm01_serv ,\n\tt.sm01_qty= s.sm01_qty ,\n\tt.sm01_actv= s.sm01_actv ,\n\tt.sm01_amnt= s.sm01_amnt ,\n\tt.sm01_idte= s.sm01_idte ,\n\tt.sm01_refn= s.sm01_refn ,\n\tt.sm01_time= s.sm01_time ,\n\tt.sm01_wonu = s.sm01_wonu,\n\tt.sm01_data= s.sm01_data ,\n\tt.sm01_logid = s.sm01_logid,\n\tt.sm01_arateid = s.sm01_arateid,\n\tt.sm01_callid = s.sm01_callid,\n\tt.sm01_user= s.sm01_user ,\n\tt.sm01_cdte= s.sm01_cdte ,\n\tt.sm01_tim2= s.sm01_tim2 ,\n\tt.sm01_callnumber= s.sm01_callnumber ,\n\tt.sm01_storig = s.sm01_storig,\n\tt.sm01_stprev =s.sm01_stprev,\n\tt.sm01_stnext = s.sm01_stnext ,\n\tt.sm01_pchg= s.sm01_pchg ,\n\tt.sm01_orig_sequ = s.sm01_orig_sequ \n\nwhen not matched then insert \n\t(\n\tt.sm01_date ,\n\tt.sm01_rout ,\n\tt.sm01_sequ ,\n\tt.sm01_cust ,\n\tt.sm01_site ,\n\tt.sm01_serv ,\n\tt.sm01_qty ,\n\tt.sm01_actv ,\n\tt.sm01_amnt ,\n\tt.sm01_idte ,\n\tt.sm01_refn ,\n\tt.sm01_time ,\n\tt.sm01_wonu,\n\tt.sm01_data ,\n\tt.sm01_logid ,\n\tt.sm01_arateid ,\n\tt.sm01_callid ,\n\tt.sm01_user ,\n\tt.sm01_cdte ,\n\tt.sm01_tim2 ,\n\tt.sm01_callnumber ,\n\tt.sm01_storig, \n\tt.sm01_stprev ,\n\tt.sm01_stnext ,\n\tt.sm01_pchg ,\n\tt.sm01_orig_sequ \n\t)\nvalues \n\t(\n\ts.sm01_date ,\n\ts.sm01_rout ,\n\ts.sm01_sequ ,\n\ts.sm01_cust ,\n\ts.sm01_site ,\n\ts.sm01_serv ,\n\ts.sm01_qty ,\n\ts.sm01_actv ,\n\ts.sm01_amnt ,\n\ts.sm01_idte ,\n\ts.sm01_refn ,\n\ts.sm01_time ,\n\ts.sm01_wonu, \n\ts.sm01_data ,\n\ts.sm01_logid ,\n\ts.sm01_arateid ,\n\ts.sm01_callid ,\n\ts.sm01_user ,\n\ts.sm01_cdte ,\n\ts.sm01_tim2 ,\n\ts.sm01_callnumber ,\n\ts.sm01_storig ,\n\ts.sm01_stprev, \n\ts.sm01_stnext ,\n\ts.sm01_pchg ,\n\ts.sm01_orig_sequ)'\n\t)}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "MT02 Snowflake Merge Operation_copy1_copy1",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "MT02 Incremental Delta Load to Staging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into ', item().snowflake_schema,'.','mt02 t \nusing ', \n    item().snowflake_schema,'.','mt02_staging s \non concat(t.mt02_refr, t.mt02_lmdate) = concat(s.mt02_refr, s.mt02_lmdate) \nwhen matched then update set \n\tt.mt02_refr= s.mt02_refr ,\n\tt.mt02_cust= s.mt02_cust ,\n\tt.mt02_site= s.mt02_site ,\n\tt.mt02_serv= s.mt02_serv ,\n\tt.mt02_date =s.mt02_date ,\n\tt.mt02_code= s.mt02_code ,\n\tt.mt02_amnt= s.mt02_amnt ,\n\tt.mt02_desc= s.mt02_desc ,\n\tt.mt02_qty= s.mt02_qty ,\n\tt.mt02_idte= s.mt02_idte ,\n\tt.mt02_rout= s.mt02_rout ,\n\tt.mt02_sequ= s.mt02_sequ ,\n\tt.mt02_rate= s.mt02_rate ,\n\tt.mt02_lmuser= s.mt02_lmuser ,\n\tt.mt02_lmdate= s.mt02_lmdate ,\n\tt.mt02_desc0= s.mt02_desc0 ,\n\tt.mt02_desc1= s.mt02_desc1 ,\n\tt.mt02_desc2= s.mt02_desc2 ,\n\tt.mt02_desc3= s.mt02_desc3 ,\n\tt.mt02_lf05id= s.mt02_lf05id ,\n\tt.mt02_own= s.mt02_own ,\n\tt.mt02_schid= s.mt02_schid,\n\tt.mt02_schidw= s.mt02_schidw ,\n\tt.mt02_fcty= s.mt02_fcty \n\nwhen not matched then insert \n\t(\n\tt.mt02_refr ,\n\tt.mt02_cust ,\n\tt.mt02_site ,\n\tt.mt02_serv ,\n\tt.mt02_date ,\n\tt.mt02_code ,\n\tt.mt02_amnt ,\n\tt.mt02_desc ,\n\tt.mt02_qty ,\n\tt.mt02_idte ,\n\tt.mt02_rout ,\n\tt.mt02_sequ ,\n\tt.mt02_rate ,\n\tt.mt02_lmuser ,\n\tt.mt02_lmdate ,\n\tt.mt02_desc0 ,\n\tt.mt02_desc1 ,\n\tt.mt02_desc2 ,\n\tt.mt02_desc3 ,\n\tt.mt02_lf05id ,\n\tt.mt02_own ,\n\tt.mt02_schid ,\n\tt.mt02_schidw ,\n\tt.mt02_fcty \n\t)\nvalues \n\t(\ns.mt02_refr ,\n\ts.mt02_cust ,\n\ts.mt02_site ,\n\ts.mt02_serv ,\n\ts.mt02_date ,\n\ts.mt02_code ,\n\ts.mt02_amnt ,\n\ts.mt02_desc ,\n\ts.mt02_qty ,\n\ts.mt02_idte ,\n\ts.mt02_rout ,\n\ts.mt02_sequ ,\n\ts.mt02_rate ,\n\ts.mt02_lmuser ,\n\ts.mt02_lmdate ,\n\ts.mt02_desc0 ,\n\ts.mt02_desc1 ,\n\ts.mt02_desc2 ,\n\ts.mt02_desc3 ,\n\ts.mt02_lf05id ,\n\ts.mt02_own ,\n\ts.mt02_schid ,\n\ts.mt02_schidw ,\n\ts.mt02_fcty )'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "SM01 Incremental Delta Load to Staging",
									"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging table for SM01",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from SM01 where SM01_DATE >DATEADD(day,-', \n    pipeline().parameters.Incremental_Range,\n    ', GETDATE())'\n    )\n}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "SM01",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "SM01_STAGING",
												"Snowflake_Schema": {
													"value": "@item().snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "MT02 Incremental Delta Load to Staging",
									"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Create staging table for MT02",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat(\n    'select * from MT02 where MT02_DATE >DATEADD(day,-', \n    pipeline().parameters.Incremental_Range,\n    ', GETDATE())'\n    )\n}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "MT02",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "MT02_STAGING",
												"Snowflake_Schema": {
													"value": "@item().snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Create staging table for RM05",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table ', \n    item().Snowflake_schema,\n    '.RM05_STAGING',\n    ' as select * from ', \n    item().Snowflake_schema,\n    '.RM05 where 1=0'\n    )\n    }",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Create staging table for SM01",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table ', \n    item().Snowflake_schema,\n    '.SM01_STAGING',\n    ' as select * from ', \n    item().Snowflake_schema,\n    '.SM01 where 1=0'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Create staging table for MT02",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Create or replace table ', \n    item().Snowflake_schema,\n    '.MT02_STAGING',\n    ' as select * from ', \n    item().Snowflake_schema,\n    '.MT02 where 1=0'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for RM05",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "RM05 Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table ', \n    item().Snowflake_schema,\n    '.RM05_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for SM01",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "SM01 Snowflake Merge Operation_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table ', \n    item().Snowflake_schema,\n    '.SM01_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Drop staging table for MT02",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "MT02 Snowflake Merge Operation_copy1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat(\n    'Drop table ', \n    item().Snowflake_schema,\n    '.MT02_STAGING'\n    )\n}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"Incremental_Range": {
						"type": "string",
						"defaultValue": "14"
					}
				},
				"variables": {
					"tempArray": {
						"type": "Array"
					},
					"TempResult": {
						"type": "Array"
					},
					"ResultsArray": {
						"type": "Array"
					},
					"OutputArray": {
						"type": "Array"
					},
					"append": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Production/TRUX_OLD"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-27T21:04:51Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_MIDWEST_INCREMENTAL_LOAD_FACT_BKUP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Trux Legacy Watermark Lookup",
						"description": "look up schema, database and table names from sqlsever and snowflake",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"query": "//RM05\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.rm05\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.rm05\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.rm05\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.rm05\r\n-------------------------------------------------------------------------------------------\r\n\r\n  union all\r\n\r\n//sm01\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.sm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.sm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.sm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.sm01\r\nsm01\r\n------------------------------------------------------------\r\n//DM01\r\nunion all\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.dm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.dm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.dm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.dm01\r\n\r\n------------------------------------------------------------------\r\nunion all\r\n\r\n//DM01P\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.dm01p\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.dm01p\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.dm01p\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.dm01p\r\n\r\n---------------------------------------\r\nunion all\r\n//DM05A\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.dm05a\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.dm05a\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.dm05a\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.dm05a\r\n--------------------------------------------------\r\nunion all\r\n\r\n//DM05B\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.DM05b\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.DM05b\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.DM05b\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.DM05b\r\n---------------------------------------------------------------------\r\nunion all\r\n//DM05FT\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.DM05ft\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.DM05ft\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.DM05ft\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.DM05ft\r\n---------------------------------------------------------\r\nunion all\r\n//DM05Z\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.Dm05z\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.Dm05z\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.Dm05z\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.Dm05z\r\n\r\n--------------------------------------------------------\r\nunion all\r\n//LM02\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.Lm02\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.Lm02\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.Lm02\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.Lm02\r\n  \r\n------------------------------------------------------------\r\nunion all\r\n\r\n//MT02\r\n\r\nselect \r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar)as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar)  as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.MT02\r\nunion all\r\n\r\nselect \r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.MT02\r\n\r\n\r\n-----------------------------------------------------------------------------\r\nunion all\r\n\r\n//RM03U\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.Rm03u\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.Rm03u\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.Rm03u\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.Rm03u\r\n\r\n---------------------------------------------------------",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "DATABASE_LKPWATERMARK_TRUX_LEGACY",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Loop Over Tables",
						"description": "activity to loop over our array of results which are the tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Trux Legacy Watermark Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Trux Legacy Watermark Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "RM05 Incremental Delta Load to Staging",
									"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Snowflake Create Staging Tables",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from RM05\nwhere RM05_DATE > DATEADD(day, -7, GETDATE())",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "@concat(item().table_name,'_STAGING')",
												"Snowflake_Schema": {
													"value": "@item().snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Snowflake Create Staging Tables",
									"description": "create staging table used to store the delta incremental load. In this staging table, we perform a merge to the main raw table.",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('Create or replace table ', item().Snowflake_schema,'.',item().table_name,'_staging\n    as \n    select * from ', item().Snowflake_schema,'.',item().table_name,\n    ' where 1=0')}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "RM05 Snowflake Merge Operation",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "RM05 Incremental Delta Load to Staging",
											"dependencyConditions": [
												"Succeeded",
												"Skipped"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into ', item().Snowflake_schema,'.','RM05 t \nusing ', \n    item().Snowflake_schema,'.','RM05_STAGING s \non concat(t.rm05_rout, t.rm05_seq1,t.rm05_seq2,t.rm05_date) = concat(s.rm05_rout, s.rm05_seq1,s.rm05_seq2,s.rm05_date) \nwhen matched then update set \n    t.rm05_date = s.rm05_date,\n\tt.rm05_rout = s.rm05_rout,\n\tt.rm05_seq1 = s.rm05_seq1, \n\tt.rm05_seq2 = s.rm05_seq2, \n\tt.rm05_truk = s.rm05_truk,\n\tt.rm05_driv = s.rm05_driv,\n\tt.rm05_help = s.rm05_help,\n\tt.rm05_fuel = s.rm05_fuel,\n\tt.rm05_fuom = s.rm05_fuom,\n\tt.rm05_tim1 = s.rm05_tim1,\n\tt.rm05_tim2 = s.rm05_tim2,\n\tt.rm05_odm1 = s.rm05_odm1,\n\tt.rm05_odm2 = s.rm05_odm2,\n\tt.rm05_ouom = s.rm05_ouom,\n\tt.rm05_note = s.rm05_note,\n\tt.rm05_starthour = s.rm05_starthour,\n\tt.rm05_endhour = s.rm05_endhour,\n\tt.rm05_oil = s.rm05_oil,\n\tt.rm05_oil_uom = s.rm05_oil_uom,\n\tt.rm05_deptime = s.rm05_deptime,\n\tt.rm05_rettime = s.rm05_rettime,\n\tt.rm05_starttime= s.rm05_starttime \nwhen not matched then insert \n\t(\n\tt.rm05_date,\n\tt.rm05_rout,\n\tt.rm05_seq1,\n\tt.rm05_seq2,\n\tt.rm05_truk,\n\tt.rm05_driv,\n\tt.rm05_help,\n\tt.rm05_fuel,\n\tt.rm05_fuom,\n\tt.rm05_tim1,\n\tt.rm05_tim2,\n\tt.rm05_odm1,\n\tt.rm05_odm2,\n\tt.rm05_ouom,\n\tt.rm05_note,\n\tt.rm05_starthour,\n\tt.rm05_endhour,\n\tt.rm05_oil,\n\tt.rm05_oil_uom,\n\tt.rm05_deptime,\n\tt.rm05_rettime,\n\tt.rm05_starttime \n\t)\nvalues \n\t(\n\ts.rm05_date,\n\ts.rm05_rout,\n\ts.rm05_seq1, \n\ts.rm05_seq2, \n\ts.rm05_truk,\n\ts.rm05_driv,\n\ts.rm05_help,\n\ts.rm05_fuel,\n\ts.rm05_fuom,\n\ts.rm05_tim1,\n\ts.rm05_tim2,\n\ts.rm05_odm1,\n\ts.rm05_odm2,\n\ts.rm05_ouom,\n\ts.rm05_note,\n\ts.rm05_starthour,\n\ts.rm05_endhour,\n\ts.rm05_oil,\n\ts.rm05_oil_uom,\n\ts.rm05_deptime,\n\ts.rm05_rettime,\n\ts.rm05_starttime)'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Snowflake Drop Staging Tables",
									"description": "after all activities are completed, we perform the drop operation to clean up the snowflake environment",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "RM05 Snowflake Merge Operation",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "SM01 Snowflake Merge Operation_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "MT02 Snowflake Merge Operation_copy1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('drop table if exists ', item().Snowflake_schema,'.',item().table_name,'_STAGING')}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "DM01p Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM01P\nwhere DM01P_ID > cast('@{item().LATEST_WATERMARK}' as int)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											}
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM01P_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM01P_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_BATCH",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_BATCH",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GLNU",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_GLNU",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINKID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GROUP",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_GROUP",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM01P",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01P",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05A Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM01p Incremental Delta Load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05A\nwhere DM05A_ID > cast('@{item().LATEST_WATERMARK}' as int)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											}
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05A_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05A",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05A",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05B Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05A Incremental Delta Load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05B\nwhere DM05B_ID > cast('@{item().LATEST_WATERMARK}' as int)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											}
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05B_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ARATEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ARATEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05B",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05B",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DM05Z Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05B Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from DM05Z\nwhere DM05Z_ID > cast('@{item().LATEST_WATERMARK}' as int)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											}
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05Z_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_NOTEID",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05Z",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05Z",
												"Snowflake_Schema": {
													"value": "@item().Snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SM01 Snowflake Merge Operation_copy1",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "SM01 Incremental Delta Load to Staging",
											"dependencyConditions": [
												"Succeeded",
												"Skipped"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into ', item().snowflake_schema,'.','SM01 t \nusing ', \n    item().snowflake_schema,'.','sm01_staging s \non concat(t.sm01_rout, t.sm01_sequ, t.sm01_date) = concat(s.sm01_rout, s.sm01_sequ, s.sm01_date) \nwhen matched then update set \n\tt.sm01_date= s.sm01_date ,\n\tt.sm01_rout= s.sm01_rout ,\n\tt.sm01_sequ= s.sm01_sequ ,\n\tt.sm01_cust= s.sm01_cust ,\n\tt.sm01_site= s.sm01_site ,\n\tt.sm01_serv= s.sm01_serv ,\n\tt.sm01_qty= s.sm01_qty ,\n\tt.sm01_actv= s.sm01_actv ,\n\tt.sm01_amnt= s.sm01_amnt ,\n\tt.sm01_idte= s.sm01_idte ,\n\tt.sm01_refn= s.sm01_refn ,\n\tt.sm01_time= s.sm01_time ,\n\tt.sm01_wonu = s.sm01_wonu,\n\tt.sm01_data= s.sm01_data ,\n\tt.sm01_logid = s.sm01_logid,\n\tt.sm01_arateid = s.sm01_arateid,\n\tt.sm01_callid = s.sm01_callid,\n\tt.sm01_user= s.sm01_user ,\n\tt.sm01_cdte= s.sm01_cdte ,\n\tt.sm01_tim2= s.sm01_tim2 ,\n\tt.sm01_callnumber= s.sm01_callnumber ,\n\tt.sm01_storig = s.sm01_storig,\n\tt.sm01_stprev =s.sm01_stprev,\n\tt.sm01_stnext = s.sm01_stnext ,\n\tt.sm01_pchg= s.sm01_pchg ,\n\tt.sm01_orig_sequ = s.sm01_orig_sequ \n\nwhen not matched then insert \n\t(\n\tt.sm01_date ,\n\tt.sm01_rout ,\n\tt.sm01_sequ ,\n\tt.sm01_cust ,\n\tt.sm01_site ,\n\tt.sm01_serv ,\n\tt.sm01_qty ,\n\tt.sm01_actv ,\n\tt.sm01_amnt ,\n\tt.sm01_idte ,\n\tt.sm01_refn ,\n\tt.sm01_time ,\n\tt.sm01_wonu,\n\tt.sm01_data ,\n\tt.sm01_logid ,\n\tt.sm01_arateid ,\n\tt.sm01_callid ,\n\tt.sm01_user ,\n\tt.sm01_cdte ,\n\tt.sm01_tim2 ,\n\tt.sm01_callnumber ,\n\tt.sm01_storig, \n\tt.sm01_stprev ,\n\tt.sm01_stnext ,\n\tt.sm01_pchg ,\n\tt.sm01_orig_sequ \n\t)\nvalues \n\t(\n\ts.sm01_date ,\n\ts.sm01_rout ,\n\ts.sm01_sequ ,\n\ts.sm01_cust ,\n\ts.sm01_site ,\n\ts.sm01_serv ,\n\ts.sm01_qty ,\n\ts.sm01_actv ,\n\ts.sm01_amnt ,\n\ts.sm01_idte ,\n\ts.sm01_refn ,\n\ts.sm01_time ,\n\ts.sm01_wonu, \n\ts.sm01_data ,\n\ts.sm01_logid ,\n\ts.sm01_arateid ,\n\ts.sm01_callid ,\n\ts.sm01_user ,\n\ts.sm01_cdte ,\n\ts.sm01_tim2 ,\n\ts.sm01_callnumber ,\n\ts.sm01_storig ,\n\ts.sm01_stprev, \n\ts.sm01_stnext ,\n\ts.sm01_pchg ,\n\ts.sm01_orig_sequ)'\n\t)}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "MT02 Snowflake Merge Operation_copy1_copy1",
									"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "MT02 Incremental Delta Load to Staging",
											"dependencyConditions": [
												"Succeeded",
												"Skipped"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LRS_Snowflake_V2",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@{concat('merge into ', item().snowflake_schema,'.','mt02 t \nusing ', \n    item().snowflake_schema,'.','mt02_staging s \non concat(t.mt02_refr, t.mt02_lmdate) = concat(s.mt02_refr, s.mt02_lmdate) \nwhen matched then update set \n\tt.mt02_refr= s.mt02_refr ,\n\tt.mt02_cust= s.mt02_cust ,\n\tt.mt02_site= s.mt02_site ,\n\tt.mt02_serv= s.mt02_serv ,\n\tt.mt02_date =s.mt02_date ,\n\tt.mt02_code= s.mt02_code ,\n\tt.mt02_amnt= s.mt02_amnt ,\n\tt.mt02_desc= s.mt02_desc ,\n\tt.mt02_qty= s.mt02_qty ,\n\tt.mt02_idte= s.mt02_idte ,\n\tt.mt02_rout= s.mt02_rout ,\n\tt.mt02_sequ= s.mt02_sequ ,\n\tt.mt02_rate= s.mt02_rate ,\n\tt.mt02_lmuser= s.mt02_lmuser ,\n\tt.mt02_lmdate= s.mt02_lmdate ,\n\tt.mt02_desc0= s.mt02_desc0 ,\n\tt.mt02_desc1= s.mt02_desc1 ,\n\tt.mt02_desc2= s.mt02_desc2 ,\n\tt.mt02_desc3= s.mt02_desc3 ,\n\tt.mt02_lf05id= s.mt02_lf05id ,\n\tt.mt02_own= s.mt02_own ,\n\tt.mt02_schid= s.mt02_schid,\n\tt.mt02_schidw= s.mt02_schidw ,\n\tt.mt02_fcty= s.mt02_fcty \n\nwhen not matched then insert \n\t(\n\tt.mt02_refr ,\n\tt.mt02_cust ,\n\tt.mt02_site ,\n\tt.mt02_serv ,\n\tt.mt02_date ,\n\tt.mt02_code ,\n\tt.mt02_amnt ,\n\tt.mt02_desc ,\n\tt.mt02_qty ,\n\tt.mt02_idte ,\n\tt.mt02_rout ,\n\tt.mt02_sequ ,\n\tt.mt02_rate ,\n\tt.mt02_lmuser ,\n\tt.mt02_lmdate ,\n\tt.mt02_desc0 ,\n\tt.mt02_desc1 ,\n\tt.mt02_desc2 ,\n\tt.mt02_desc3 ,\n\tt.mt02_lf05id ,\n\tt.mt02_own ,\n\tt.mt02_schid ,\n\tt.mt02_schidw ,\n\tt.mt02_fcty \n\t)\nvalues \n\t(\ns.mt02_refr ,\n\ts.mt02_cust ,\n\ts.mt02_site ,\n\ts.mt02_serv ,\n\ts.mt02_date ,\n\ts.mt02_code ,\n\ts.mt02_amnt ,\n\ts.mt02_desc ,\n\ts.mt02_qty ,\n\ts.mt02_idte ,\n\ts.mt02_rout ,\n\ts.mt02_sequ ,\n\ts.mt02_rate ,\n\ts.mt02_lmuser ,\n\ts.mt02_lmdate ,\n\ts.mt02_desc0 ,\n\ts.mt02_desc1 ,\n\ts.mt02_desc2 ,\n\ts.mt02_desc3 ,\n\ts.mt02_lf05id ,\n\ts.mt02_own ,\n\ts.mt02_schid ,\n\ts.mt02_schidw ,\n\ts.mt02_fcty )'\n\t)}\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "SM01 Incremental Delta Load to Staging",
									"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Snowflake Create Staging Tables",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from SM01\nwhere SM01_DATE > DATEADD(day, -7, GETDATE())",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "@concat(item().table_name,'_STAGING')",
												"Snowflake_Schema": {
													"value": "@item().snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "MT02 Incremental Delta Load to Staging",
									"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Snowflake Create Staging Tables",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from MT02\nwhere MT02_DATE > DATEADD(day, -7, GETDATE())",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging"
										}
									},
									"inputs": [
										{
											"referenceName": "TRUX_LEGACY01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "@concat(item().table_name,'_STAGING')",
												"Snowflake_Schema": {
													"value": "@item().snowflake_schema",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 8
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"LastProcessedId": {
						"type": "string"
					},
					"CurrentDate": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"variables": {
					"tempArray": {
						"type": "Array"
					},
					"TempResult": {
						"type": "Array"
					},
					"ResultsArray": {
						"type": "Array"
					},
					"OutputArray": {
						"type": "Array"
					},
					"append": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRUX_MIDWEST_INCREMENTAL_LOAD_FACT_NEW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Trux Midwest ID Watermark Lookup",
						"description": "look up schema, database and table names from sqlsever and snowflake",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "LRS_Snowflake_Raw_V2",
								"type": "DatasetReference",
								"parameters": {
									"Snowflake_Sink_Table": "VW_TRUX_MIDWEST_WATERMARK_PVT",
									"Snowflake_Schema": "MASTER_DATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Incremental Loop Over ID Watermark Tables",
						"description": "Activity to loop over tables that have primary keys with incremental IDs. This loops looks at our Watermark table in Snowflake and appends any IDs found in SQL server that are greater than the latest watermark in Snowflake.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Trux Midwest ID Watermark Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Trux Midwest ID Watermark Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DM01p Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select * from DM01P\nwhere DM01P_ID > @{item().DM01P}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM01P_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM01P_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM01P_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM01P_BATCH",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_BATCH",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GLNU",
														"type": "String"
													},
													"sink": {
														"name": "DM01P_GLNU",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM01P_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_LINKID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_LINKID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM01P_GROUP",
														"type": "Int32"
													},
													"sink": {
														"name": "DM01P_GROUP",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM01P",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM01P",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05A Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM01p Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select * from DM05A\nwhere DM05A_ID > @{item().DM05A}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05A_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_SEQU",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05A_SEQU",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05A_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05A_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05A_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05A_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05A_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05A_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05A",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05A",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05B Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05A Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select * from DM05B\nwhere DM05B_ID > @{item().DM05B}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05B_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05B_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLF",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_BILLT",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ARATEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_ARATEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05B_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05B_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05B_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05B_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05B_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05B_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05B",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05B",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "DM05Z Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05B Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select * from DM05Z\nwhere DM05Z_ID > @{item().DM05Z}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DM05Z_ID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_ID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_LINK",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_LINK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_TDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_AMNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_AMNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_QTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "DM05Z_QTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_REFN",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_REFN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_PERIODCLOSEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DM05Z_USER",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_USER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_RTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DM05Z_RDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DM05Z_ADJR",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_ADJR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_CODE",
														"type": "String"
													},
													"sink": {
														"name": "DM05Z_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DM05Z_NOTEID",
														"type": "Int32"
													},
													"sink": {
														"name": "DM05Z_NOTEID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "DM05Z",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "DM05Z",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								},
								{
									"name": "RM07 Incremental Delta Load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DM05Z Incremental Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "ADF_TIMESTAMP",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select * from RM07\nwhere format(RM07_RDTE,'yyyyMMdd') > @{item().RM07}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand",
												"additionalCopyOptions": {
													"ON_ERROR": "SKIP_FILE"
												}
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "msaz01_dm01_Azure_Blob",
												"type": "LinkedServiceReference"
											},
											"path": "staging",
											"enableCompression": true
										},
										"parallelCopies": {
											"value": "@pipeline().parameters.Degree_Copy_Parallelism",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": true,
										"dataIntegrationUnits": {
											"value": "@pipeline().parameters.Maximum_DIU",
											"type": "Expression"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "RM07_RDTE",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM07_RDTE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM07_ROUT",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_ROUT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_REASON",
														"type": "String"
													},
													"sink": {
														"name": "RM07_REASON",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RM07_TIME",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_TIME",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_TRUK",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_TRUK",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_ODOM",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_ODOM",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RM07_STIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM07_STIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM07_ETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "RM07_ETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RM07_DRIV",
														"type": "Int32"
													},
													"sink": {
														"name": "RM07_DRIV",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ADF_TIMESTAMP",
														"type": "String"
													},
													"sink": {
														"name": "ADF_TIMESTAMP",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MSAZ01",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "RM07",
												"database": {
													"value": "@item().sql_db_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LRS_Snowflake_Raw_V2",
											"type": "DatasetReference",
											"parameters": {
												"Snowflake_Sink_Table": "RM07",
												"Snowflake_Schema": "@item().Snowflake_Schema_New"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Maximum_DIU": {
						"type": "int",
						"defaultValue": 2
					},
					"Degree_Copy_Parallelism": {
						"type": "int",
						"defaultValue": 8
					},
					"Incremental_Range": {
						"type": "string",
						"defaultValue": "14"
					}
				},
				"variables": {
					"tempArray": {
						"type": "Array"
					},
					"TempResult": {
						"type": "Array"
					},
					"ResultsArray": {
						"type": "Array"
					},
					"OutputArray": {
						"type": "Array"
					},
					"append": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Production/TRUX"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-30T17:58:00Z"
			},
			"dependsOn": []
		}
	]
}