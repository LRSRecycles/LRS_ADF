{
	"name": "VENA_DAILY_LOAD_TEST",
	"properties": {
		"activities": [
			{
				"name": "Get All Files",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "VENA_Raw_All_Files",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Find The Latest File",
				"description": "Loop through files sequentially and set FileName and LastModified variables to the values of the latest file dropped in a folder.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get All Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get All Files').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Get File Attributes",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "VENA_Raw_Each_Files",
									"type": "DatasetReference",
									"parameters": {
										"pFileName": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"itemName",
									"lastModified"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "If Condition",
							"description": "if condition to find the newest file for copy",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Get File Attributes",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(activity('Get File Attributes').output.lastModified,variables('vLastModified'))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Set vLastModified",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Set vFileName",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "vLastModified",
											"value": {
												"value": "@activity('Get File Attributes').output.lastModified",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Set vFileName",
										"type": "SetVariable",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "vFileName",
											"value": {
												"value": "@activity('Get File Attributes').output.itemName",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Load Latest File To Snowflake",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Find The Latest File",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"additionalColumns": [
							{
								"name": "FileName",
								"value": {
									"value": "@variables('vFileName')",
									"type": "Expression"
								}
							},
							{
								"name": "LastModified",
								"value": {
									"value": "@variables('vLastModified')",
									"type": "Expression"
								}
							}
						],
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "SnowflakeV2Sink",
						"preCopyScript": "TRUNCATE TABLE LRS_SANDBOX.VENA_RAW.VENA_FINANCE_MODEL;",
						"importSettings": {
							"type": "SnowflakeImportCopyCommand"
						}
					},
					"enableStaging": true,
					"stagingSettings": {
						"linkedServiceName": {
							"referenceName": "msaz01_dm01_Azure_Blob",
							"type": "LinkedServiceReference"
						}
					}
				},
				"inputs": [
					{
						"referenceName": "VENA_Raw_Each_Files",
						"type": "DatasetReference",
						"parameters": {
							"pFileName": {
								"value": "@variables('vFileName')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "LRS_Snowflake_Sandbox_V2",
						"type": "DatasetReference",
						"parameters": {
							"Snowflake_Sink_Table": "VENA_FINANCE_MODEL",
							"Snowflake_Schema": "VENA_RAW"
						}
					}
				]
			},
			{
				"name": "Flag Old Files For Deletion",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Delete1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "VENA_Raw_All_Files",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"modifiedDatetimeEnd": {
							"value": "@adddays(utcnow(),-365)",
							"type": "Expression"
						},
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Delete Old Files",
				"description": "For Loop to loop through files older than 365 days for deletion",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Flag Old Files For Deletion",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Flag Old Files For Deletion').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Delete Each File",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "VENA_Raw_Each_Files",
									"type": "DatasetReference",
									"parameters": {
										"pFileName": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						}
					]
				}
			},
			{
				"name": "Archive the File in Processed Folder",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Load Latest File To Snowflake",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFileName": "*",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "VENA_Raw_All_Files",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "VENA_Raw_Archive_All_Files",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Delete1",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Archive the File in Processed Folder",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "VENA_Raw_All_Files",
						"type": "DatasetReference"
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": false,
						"wildcardFileName": "*",
						"enablePartitionDiscovery": false
					}
				}
			}
		],
		"variables": {
			"vFileName": {
				"type": "String",
				"defaultValue": "finance_model_2023-08-28T21:29:51.1420557Z"
			},
			"vLastModified": {
				"type": "String",
				"defaultValue": "1900-01-01 00:00;00"
			}
		},
		"folder": {
			"name": "Sandbox/Vena"
		},
		"annotations": [],
		"lastPublishTime": "2024-08-30T17:57:59Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}