{
	"name": "TRUX_MIDWEST_INCREMENTAL_LOAD_FACT_BKUP",
	"properties": {
		"activities": [
			{
				"name": "Trux Legacy Watermark Lookup",
				"description": "look up schema, database and table names from sqlsever and snowflake",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeV2Source",
						"query": "//RM05\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.rm05\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.rm05\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.rm05\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.rm05\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'RM05' as table_name,\r\ncast(max(rm05_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.rm05\r\n-------------------------------------------------------------------------------------------\r\n\r\n  union all\r\n\r\n//sm01\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.sm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.sm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.sm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.sm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'SM01' as table_name,\r\ncast(max(sm01_date)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.sm01\r\nsm01\r\n------------------------------------------------------------\r\n//DM01\r\nunion all\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.dm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.dm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.dm01\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.dm01\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM01' as table_name,\r\ncast(max(dm01_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.dm01\r\n\r\n------------------------------------------------------------------\r\nunion all\r\n\r\n//DM01P\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.dm01p\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.dm01p\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.dm01p\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.dm01p\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM01P' as table_name,\r\ncast(max(dm01p_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.dm01p\r\n\r\n---------------------------------------\r\nunion all\r\n//DM05A\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.dm05a\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.dm05a\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.dm05a\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.dm05a\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM05A' as table_name,\r\ncast(max(DM05A_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.dm05a\r\n--------------------------------------------------\r\nunion all\r\n\r\n//DM05B\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.DM05b\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.DM05b\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.DM05b\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.DM05b\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM05B' as table_name,\r\ncast(max(DM05B_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.DM05b\r\n---------------------------------------------------------------------\r\nunion all\r\n//DM05FT\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.DM05ft\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.DM05ft\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.DM05ft\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.DM05ft\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM05FT' as table_name,\r\ncast(max(DM05FT_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.DM05ft\r\n---------------------------------------------------------\r\nunion all\r\n//DM05Z\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.Dm05z\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.Dm05z\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.Dm05z\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.Dm05z\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'DM05Z' as table_name,\r\ncast(max(DM05Z_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.Dm05z\r\n\r\n--------------------------------------------------------\r\nunion all\r\n//LM02\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.Lm02\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.Lm02\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.Lm02\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.Lm02\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'LM02' as table_name,\r\ncast(max(lm02_id)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.Lm02\r\n  \r\n------------------------------------------------------------\r\nunion all\r\n\r\n//MT02\r\n\r\nselect \r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar)as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\ncast(Max(mt02_lmdate) as varchar)  as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.MT02\r\nunion all\r\n\r\nselect \r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.MT02\r\n\r\nunion all\r\n\r\nselect \r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'MT02' as table_name,\r\nCast(Max(mt02_lmdate) as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.MT02\r\n\r\n\r\n-----------------------------------------------------------------------------\r\nunion all\r\n\r\n//RM03U\r\n\r\nselect\r\n'TRUX_CD_COMP' as Sql_db_name,\r\n'TRUX_CD_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_CD_COMP_RAW.Rm03u\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_DC_COMP' as Sql_db_name,\r\n'TRUX_DC_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_DC_COMP_RAW.Rm03u\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_ES_COMP' as Sql_db_name,\r\n'TRUX_ES_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_ES_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_HR_COMP' as Sql_db_name,\r\n'TRUX_HR_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_HR_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_LR_COMP' as Sql_db_name,\r\n'TRUX_LR_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_LR_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MC_COMP' as Sql_db_name,\r\n'TRUX_MC_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MC_COMP_RAW.Rm03u\r\n\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MH_COMP' as Sql_db_name,\r\n'TRUX_MH_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MH_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MO_COMP' as Sql_db_name,\r\n'TRUX_MO_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MO_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MP_COMP' as Sql_db_name,\r\n'TRUX_MP_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MP_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_MW_COMP' as Sql_db_name,\r\n'TRUX_MW_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_MW_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_NI_COMP' as Sql_db_name,\r\n'TRUX_NI_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_NI_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_PS_COMP' as Sql_db_name,\r\n'TRUX_PS_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_PS_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RS_COMP' as Sql_db_name,\r\n'TRUX_RS_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RS_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RT_COMP' as Sql_db_name,\r\n'TRUX_RT_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RT_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_RZ_COMP' as Sql_db_name,\r\n'TRUX_RZ_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_RZ_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SH_COMP' as Sql_db_name,\r\n'TRUX_SH_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SH_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_SW_COMP' as Sql_db_name,\r\n'TRUX_SW_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_SW_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_TP_COMP' as Sql_db_name,\r\n'TRUX_TP_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_TP_COMP_RAW.Rm03u\r\n\r\nunion all\r\n\r\nselect\r\n'TRUX_WA_COMP' as Sql_db_name,\r\n'TRUX_WA_COMP_RAW' as Snowflake_schema,\r\n'RM03U' as table_name,\r\ncast(max(RM03U_ID)as varchar) as latest_watermark\r\nfrom\r\n  lrs_raw.TRUX_WA_COMP_RAW.Rm03u\r\n\r\n---------------------------------------------------------",
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "LRS_Snowflake_Raw_V2",
						"type": "DatasetReference",
						"parameters": {
							"Snowflake_Sink_Table": "DATABASE_LKPWATERMARK_TRUX_LEGACY",
							"Snowflake_Schema": "MASTER_DATA"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Loop Over Tables",
				"description": "activity to loop over our array of results which are the tables",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Trux Legacy Watermark Lookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Trux Legacy Watermark Lookup').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "RM05 Incremental Delta Load to Staging",
							"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Snowflake Create Staging Tables",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "select * from RM05\nwhere RM05_DATE > DATEADD(day, -7, GETDATE())",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "SnowflakeV2Sink",
									"importSettings": {
										"type": "SnowflakeImportCopyCommand"
									}
								},
								"enableStaging": true,
								"stagingSettings": {
									"linkedServiceName": {
										"referenceName": "msaz01_dm01_Azure_Blob",
										"type": "LinkedServiceReference"
									},
									"path": "staging"
								}
							},
							"inputs": [
								{
									"referenceName": "TRUX_LEGACY01",
									"type": "DatasetReference",
									"parameters": {
										"schema": "dbo",
										"table": {
											"value": "@item().table_name",
											"type": "Expression"
										},
										"database": {
											"value": "@item().sql_db_name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "LRS_Snowflake_Raw_V2",
									"type": "DatasetReference",
									"parameters": {
										"Snowflake_Sink_Table": "@concat(item().table_name,'_STAGING')",
										"Snowflake_Schema": {
											"value": "@item().snowflake_schema",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Snowflake Create Staging Tables",
							"description": "create staging table used to store the delta incremental load. In this staging table, we perform a merge to the main raw table.",
							"type": "Script",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "LRS_Snowflake_V2",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@{concat('Create or replace table ', item().Snowflake_schema,'.',item().table_name,'_staging\n    as \n    select * from ', item().Snowflake_schema,'.',item().table_name,\n    ' where 1=0')}\n",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "RM05 Snowflake Merge Operation",
							"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "RM05 Incremental Delta Load to Staging",
									"dependencyConditions": [
										"Succeeded",
										"Skipped"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "LRS_Snowflake_V2",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@{concat('merge into ', item().Snowflake_schema,'.','RM05 t \nusing ', \n    item().Snowflake_schema,'.','RM05_STAGING s \non concat(t.rm05_rout, t.rm05_seq1,t.rm05_seq2,t.rm05_date) = concat(s.rm05_rout, s.rm05_seq1,s.rm05_seq2,s.rm05_date) \nwhen matched then update set \n    t.rm05_date = s.rm05_date,\n\tt.rm05_rout = s.rm05_rout,\n\tt.rm05_seq1 = s.rm05_seq1, \n\tt.rm05_seq2 = s.rm05_seq2, \n\tt.rm05_truk = s.rm05_truk,\n\tt.rm05_driv = s.rm05_driv,\n\tt.rm05_help = s.rm05_help,\n\tt.rm05_fuel = s.rm05_fuel,\n\tt.rm05_fuom = s.rm05_fuom,\n\tt.rm05_tim1 = s.rm05_tim1,\n\tt.rm05_tim2 = s.rm05_tim2,\n\tt.rm05_odm1 = s.rm05_odm1,\n\tt.rm05_odm2 = s.rm05_odm2,\n\tt.rm05_ouom = s.rm05_ouom,\n\tt.rm05_note = s.rm05_note,\n\tt.rm05_starthour = s.rm05_starthour,\n\tt.rm05_endhour = s.rm05_endhour,\n\tt.rm05_oil = s.rm05_oil,\n\tt.rm05_oil_uom = s.rm05_oil_uom,\n\tt.rm05_deptime = s.rm05_deptime,\n\tt.rm05_rettime = s.rm05_rettime,\n\tt.rm05_starttime= s.rm05_starttime \nwhen not matched then insert \n\t(\n\tt.rm05_date,\n\tt.rm05_rout,\n\tt.rm05_seq1,\n\tt.rm05_seq2,\n\tt.rm05_truk,\n\tt.rm05_driv,\n\tt.rm05_help,\n\tt.rm05_fuel,\n\tt.rm05_fuom,\n\tt.rm05_tim1,\n\tt.rm05_tim2,\n\tt.rm05_odm1,\n\tt.rm05_odm2,\n\tt.rm05_ouom,\n\tt.rm05_note,\n\tt.rm05_starthour,\n\tt.rm05_endhour,\n\tt.rm05_oil,\n\tt.rm05_oil_uom,\n\tt.rm05_deptime,\n\tt.rm05_rettime,\n\tt.rm05_starttime \n\t)\nvalues \n\t(\n\ts.rm05_date,\n\ts.rm05_rout,\n\ts.rm05_seq1, \n\ts.rm05_seq2, \n\ts.rm05_truk,\n\ts.rm05_driv,\n\ts.rm05_help,\n\ts.rm05_fuel,\n\ts.rm05_fuom,\n\ts.rm05_tim1,\n\ts.rm05_tim2,\n\ts.rm05_odm1,\n\ts.rm05_odm2,\n\ts.rm05_ouom,\n\ts.rm05_note,\n\ts.rm05_starthour,\n\ts.rm05_endhour,\n\ts.rm05_oil,\n\ts.rm05_oil_uom,\n\ts.rm05_deptime,\n\ts.rm05_rettime,\n\ts.rm05_starttime)'\n\t)}\n",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "Snowflake Drop Staging Tables",
							"description": "after all activities are completed, we perform the drop operation to clean up the snowflake environment",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "RM05 Snowflake Merge Operation",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "SM01 Snowflake Merge Operation_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "MT02 Snowflake Merge Operation_copy1_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "LRS_Snowflake_V2",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@{concat('drop table if exists ', item().Snowflake_schema,'.',item().table_name,'_STAGING')}\n",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "DM01p Incremental Delta Load",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "select * from DM01P\nwhere DM01P_ID > cast('@{item().LATEST_WATERMARK}' as int)",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "SnowflakeV2Sink",
									"importSettings": {
										"type": "SnowflakeImportCopyCommand",
										"additionalCopyOptions": {
											"ON_ERROR": "SKIP_FILE"
										}
									}
								},
								"enableStaging": true,
								"stagingSettings": {
									"linkedServiceName": {
										"referenceName": "msaz01_dm01_Azure_Blob",
										"type": "LinkedServiceReference"
									}
								},
								"parallelCopies": {
									"value": "@pipeline().parameters.Degree_Copy_Parallelism",
									"type": "Expression"
								},
								"dataIntegrationUnits": {
									"value": "@pipeline().parameters.Maximum_DIU",
									"type": "Expression"
								},
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"name": "DM01P_ID",
												"type": "Int32"
											},
											"sink": {
												"name": "DM01P_ID",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM01P_LINK",
												"type": "Int32"
											},
											"sink": {
												"name": "DM01P_LINK",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM01P_TYPE",
												"type": "String"
											},
											"sink": {
												"name": "DM01P_TYPE",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "DM01P_DATE",
												"type": "DateTime"
											},
											"sink": {
												"name": "DM01P_DATE",
												"type": "DateTime"
											}
										},
										{
											"source": {
												"name": "DM01P_REFN",
												"type": "String"
											},
											"sink": {
												"name": "DM01P_REFN",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "DM01P_AMNT",
												"type": "Decimal"
											},
											"sink": {
												"name": "DM01P_AMNT",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM01P_ADJR",
												"type": "String"
											},
											"sink": {
												"name": "DM01P_ADJR",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "DM01P_PERIODCLOSEID",
												"type": "Int32"
											},
											"sink": {
												"name": "DM01P_PERIODCLOSEID",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM01P_USER",
												"type": "String"
											},
											"sink": {
												"name": "DM01P_USER",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "DM01P_RDATE",
												"type": "DateTime"
											},
											"sink": {
												"name": "DM01P_RDATE",
												"type": "DateTime"
											}
										},
										{
											"source": {
												"name": "DM01P_BATCH",
												"type": "Int32"
											},
											"sink": {
												"name": "DM01P_BATCH",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM01P_GLNU",
												"type": "String"
											},
											"sink": {
												"name": "DM01P_GLNU",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "DM01P_NOTEID",
												"type": "Int32"
											},
											"sink": {
												"name": "DM01P_NOTEID",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM01P_LINKID",
												"type": "Int32"
											},
											"sink": {
												"name": "DM01P_LINKID",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM01P_GROUP",
												"type": "Int32"
											},
											"sink": {
												"name": "DM01P_GROUP",
												"type": "Int64"
											}
										}
									]
								}
							},
							"inputs": [
								{
									"referenceName": "TRUX_LEGACY01",
									"type": "DatasetReference",
									"parameters": {
										"schema": "dbo",
										"table": "DM01P",
										"database": {
											"value": "@item().sql_db_name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "LRS_Snowflake_Raw_V2",
									"type": "DatasetReference",
									"parameters": {
										"Snowflake_Sink_Table": "DM01P",
										"Snowflake_Schema": {
											"value": "@item().Snowflake_schema",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "DM05A Incremental Delta Load",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "DM01p Incremental Delta Load",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "select * from DM05A\nwhere DM05A_ID > cast('@{item().LATEST_WATERMARK}' as int)",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "SnowflakeV2Sink",
									"importSettings": {
										"type": "SnowflakeImportCopyCommand",
										"additionalCopyOptions": {
											"ON_ERROR": "SKIP_FILE"
										}
									}
								},
								"enableStaging": true,
								"stagingSettings": {
									"linkedServiceName": {
										"referenceName": "msaz01_dm01_Azure_Blob",
										"type": "LinkedServiceReference"
									}
								},
								"parallelCopies": {
									"value": "@pipeline().parameters.Degree_Copy_Parallelism",
									"type": "Expression"
								},
								"dataIntegrationUnits": {
									"value": "@pipeline().parameters.Maximum_DIU",
									"type": "Expression"
								},
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"name": "DM05A_ID",
												"type": "Int32"
											},
											"sink": {
												"name": "DM05A_ID",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM05A_LINK",
												"type": "Int32"
											},
											"sink": {
												"name": "DM05A_LINK",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM05A_TDTE",
												"type": "DateTime"
											},
											"sink": {
												"name": "DM05A_TDTE",
												"type": "DateTime"
											}
										},
										{
											"source": {
												"name": "DM05A_AMNT",
												"type": "Decimal"
											},
											"sink": {
												"name": "DM05A_AMNT",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM05A_QTY",
												"type": "Decimal"
											},
											"sink": {
												"name": "DM05A_QTY",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM05A_ROUT",
												"type": "Int32"
											},
											"sink": {
												"name": "DM05A_ROUT",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM05A_SEQU",
												"type": "Decimal"
											},
											"sink": {
												"name": "DM05A_SEQU",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM05A_PERIODCLOSEID",
												"type": "Int32"
											},
											"sink": {
												"name": "DM05A_PERIODCLOSEID",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM05A_USER",
												"type": "String"
											},
											"sink": {
												"name": "DM05A_USER",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "DM05A_RTYPE",
												"type": "String"
											},
											"sink": {
												"name": "DM05A_RTYPE",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "DM05A_RDATE",
												"type": "DateTime"
											},
											"sink": {
												"name": "DM05A_RDATE",
												"type": "DateTime"
											}
										},
										{
											"source": {
												"name": "DM05A_ADJR",
												"type": "String"
											},
											"sink": {
												"name": "DM05A_ADJR",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "DM05A_CODE",
												"type": "String"
											},
											"sink": {
												"name": "DM05A_CODE",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "DM05A_NOTEID",
												"type": "Int32"
											},
											"sink": {
												"name": "DM05A_NOTEID",
												"type": "Int64"
											}
										}
									]
								}
							},
							"inputs": [
								{
									"referenceName": "TRUX_LEGACY01",
									"type": "DatasetReference",
									"parameters": {
										"schema": "dbo",
										"table": "DM05A",
										"database": {
											"value": "@item().sql_db_name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "LRS_Snowflake_Raw_V2",
									"type": "DatasetReference",
									"parameters": {
										"Snowflake_Sink_Table": "DM05A",
										"Snowflake_Schema": {
											"value": "@item().Snowflake_schema",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "DM05B Incremental Delta Load",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "DM05A Incremental Delta Load",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "select * from DM05B\nwhere DM05B_ID > cast('@{item().LATEST_WATERMARK}' as int)",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "SnowflakeV2Sink",
									"importSettings": {
										"type": "SnowflakeImportCopyCommand",
										"additionalCopyOptions": {
											"ON_ERROR": "SKIP_FILE"
										}
									}
								},
								"enableStaging": true,
								"stagingSettings": {
									"linkedServiceName": {
										"referenceName": "msaz01_dm01_Azure_Blob",
										"type": "LinkedServiceReference"
									}
								},
								"parallelCopies": {
									"value": "@pipeline().parameters.Degree_Copy_Parallelism",
									"type": "Expression"
								},
								"dataIntegrationUnits": {
									"value": "@pipeline().parameters.Maximum_DIU",
									"type": "Expression"
								},
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"name": "DM05B_ID",
												"type": "Int32"
											},
											"sink": {
												"name": "DM05B_ID",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM05B_LINK",
												"type": "Int32"
											},
											"sink": {
												"name": "DM05B_LINK",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM05B_TDTE",
												"type": "DateTime"
											},
											"sink": {
												"name": "DM05B_TDTE",
												"type": "DateTime"
											}
										},
										{
											"source": {
												"name": "DM05B_AMNT",
												"type": "Decimal"
											},
											"sink": {
												"name": "DM05B_AMNT",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM05B_QTY",
												"type": "Decimal"
											},
											"sink": {
												"name": "DM05B_QTY",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM05B_BILLF",
												"type": "DateTime"
											},
											"sink": {
												"name": "DM05B_BILLF",
												"type": "DateTime"
											}
										},
										{
											"source": {
												"name": "DM05B_BILLT",
												"type": "DateTime"
											},
											"sink": {
												"name": "DM05B_BILLT",
												"type": "DateTime"
											}
										},
										{
											"source": {
												"name": "DM05B_ARATEID",
												"type": "Int32"
											},
											"sink": {
												"name": "DM05B_ARATEID",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM05B_PERIODCLOSEID",
												"type": "Int32"
											},
											"sink": {
												"name": "DM05B_PERIODCLOSEID",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM05B_USER",
												"type": "String"
											},
											"sink": {
												"name": "DM05B_USER",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "DM05B_RTYPE",
												"type": "String"
											},
											"sink": {
												"name": "DM05B_RTYPE",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "DM05B_RDATE",
												"type": "DateTime"
											},
											"sink": {
												"name": "DM05B_RDATE",
												"type": "DateTime"
											}
										},
										{
											"source": {
												"name": "DM05B_ADJR",
												"type": "String"
											},
											"sink": {
												"name": "DM05B_ADJR",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "DM05B_CODE",
												"type": "String"
											},
											"sink": {
												"name": "DM05B_CODE",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "DM05B_NOTEID",
												"type": "Int32"
											},
											"sink": {
												"name": "DM05B_NOTEID",
												"type": "Int64"
											}
										}
									]
								}
							},
							"inputs": [
								{
									"referenceName": "TRUX_LEGACY01",
									"type": "DatasetReference",
									"parameters": {
										"schema": "dbo",
										"table": "DM05B",
										"database": {
											"value": "@item().sql_db_name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "LRS_Snowflake_Raw_V2",
									"type": "DatasetReference",
									"parameters": {
										"Snowflake_Sink_Table": "DM05B",
										"Snowflake_Schema": {
											"value": "@item().Snowflake_schema",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "DM05Z Incremental Delta Load",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "DM05B Incremental Delta Load",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "select * from DM05Z\nwhere DM05Z_ID > cast('@{item().LATEST_WATERMARK}' as int)",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "SnowflakeV2Sink",
									"importSettings": {
										"type": "SnowflakeImportCopyCommand",
										"additionalCopyOptions": {
											"ON_ERROR": "SKIP_FILE"
										}
									}
								},
								"enableStaging": true,
								"stagingSettings": {
									"linkedServiceName": {
										"referenceName": "msaz01_dm01_Azure_Blob",
										"type": "LinkedServiceReference"
									}
								},
								"parallelCopies": {
									"value": "@pipeline().parameters.Degree_Copy_Parallelism",
									"type": "Expression"
								},
								"dataIntegrationUnits": {
									"value": "@pipeline().parameters.Maximum_DIU",
									"type": "Expression"
								},
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"name": "DM05Z_ID",
												"type": "Int32"
											},
											"sink": {
												"name": "DM05Z_ID",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM05Z_LINK",
												"type": "Int32"
											},
											"sink": {
												"name": "DM05Z_LINK",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM05Z_TDTE",
												"type": "DateTime"
											},
											"sink": {
												"name": "DM05Z_TDTE",
												"type": "DateTime"
											}
										},
										{
											"source": {
												"name": "DM05Z_AMNT",
												"type": "Decimal"
											},
											"sink": {
												"name": "DM05Z_AMNT",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM05Z_QTY",
												"type": "Decimal"
											},
											"sink": {
												"name": "DM05Z_QTY",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM05Z_REFN",
												"type": "String"
											},
											"sink": {
												"name": "DM05Z_REFN",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "DM05Z_PERIODCLOSEID",
												"type": "Int32"
											},
											"sink": {
												"name": "DM05Z_PERIODCLOSEID",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DM05Z_USER",
												"type": "String"
											},
											"sink": {
												"name": "DM05Z_USER",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "DM05Z_RTYPE",
												"type": "String"
											},
											"sink": {
												"name": "DM05Z_RTYPE",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "DM05Z_RDATE",
												"type": "DateTime"
											},
											"sink": {
												"name": "DM05Z_RDATE",
												"type": "DateTime"
											}
										},
										{
											"source": {
												"name": "DM05Z_ADJR",
												"type": "String"
											},
											"sink": {
												"name": "DM05Z_ADJR",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "DM05Z_CODE",
												"type": "String"
											},
											"sink": {
												"name": "DM05Z_CODE",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "DM05Z_NOTEID",
												"type": "Int32"
											},
											"sink": {
												"name": "DM05Z_NOTEID",
												"type": "Int64"
											}
										}
									]
								}
							},
							"inputs": [
								{
									"referenceName": "TRUX_LEGACY01",
									"type": "DatasetReference",
									"parameters": {
										"schema": "dbo",
										"table": "DM05Z",
										"database": {
											"value": "@item().sql_db_name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "LRS_Snowflake_Raw_V2",
									"type": "DatasetReference",
									"parameters": {
										"Snowflake_Sink_Table": "DM05Z",
										"Snowflake_Schema": {
											"value": "@item().Snowflake_schema",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "SM01 Snowflake Merge Operation_copy1",
							"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "SM01 Incremental Delta Load to Staging",
									"dependencyConditions": [
										"Succeeded",
										"Skipped"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "LRS_Snowflake_V2",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@{concat('merge into ', item().snowflake_schema,'.','SM01 t \nusing ', \n    item().snowflake_schema,'.','sm01_staging s \non concat(t.sm01_rout, t.sm01_sequ, t.sm01_date) = concat(s.sm01_rout, s.sm01_sequ, s.sm01_date) \nwhen matched then update set \n\tt.sm01_date= s.sm01_date ,\n\tt.sm01_rout= s.sm01_rout ,\n\tt.sm01_sequ= s.sm01_sequ ,\n\tt.sm01_cust= s.sm01_cust ,\n\tt.sm01_site= s.sm01_site ,\n\tt.sm01_serv= s.sm01_serv ,\n\tt.sm01_qty= s.sm01_qty ,\n\tt.sm01_actv= s.sm01_actv ,\n\tt.sm01_amnt= s.sm01_amnt ,\n\tt.sm01_idte= s.sm01_idte ,\n\tt.sm01_refn= s.sm01_refn ,\n\tt.sm01_time= s.sm01_time ,\n\tt.sm01_wonu = s.sm01_wonu,\n\tt.sm01_data= s.sm01_data ,\n\tt.sm01_logid = s.sm01_logid,\n\tt.sm01_arateid = s.sm01_arateid,\n\tt.sm01_callid = s.sm01_callid,\n\tt.sm01_user= s.sm01_user ,\n\tt.sm01_cdte= s.sm01_cdte ,\n\tt.sm01_tim2= s.sm01_tim2 ,\n\tt.sm01_callnumber= s.sm01_callnumber ,\n\tt.sm01_storig = s.sm01_storig,\n\tt.sm01_stprev =s.sm01_stprev,\n\tt.sm01_stnext = s.sm01_stnext ,\n\tt.sm01_pchg= s.sm01_pchg ,\n\tt.sm01_orig_sequ = s.sm01_orig_sequ \n\nwhen not matched then insert \n\t(\n\tt.sm01_date ,\n\tt.sm01_rout ,\n\tt.sm01_sequ ,\n\tt.sm01_cust ,\n\tt.sm01_site ,\n\tt.sm01_serv ,\n\tt.sm01_qty ,\n\tt.sm01_actv ,\n\tt.sm01_amnt ,\n\tt.sm01_idte ,\n\tt.sm01_refn ,\n\tt.sm01_time ,\n\tt.sm01_wonu,\n\tt.sm01_data ,\n\tt.sm01_logid ,\n\tt.sm01_arateid ,\n\tt.sm01_callid ,\n\tt.sm01_user ,\n\tt.sm01_cdte ,\n\tt.sm01_tim2 ,\n\tt.sm01_callnumber ,\n\tt.sm01_storig, \n\tt.sm01_stprev ,\n\tt.sm01_stnext ,\n\tt.sm01_pchg ,\n\tt.sm01_orig_sequ \n\t)\nvalues \n\t(\n\ts.sm01_date ,\n\ts.sm01_rout ,\n\ts.sm01_sequ ,\n\ts.sm01_cust ,\n\ts.sm01_site ,\n\ts.sm01_serv ,\n\ts.sm01_qty ,\n\ts.sm01_actv ,\n\ts.sm01_amnt ,\n\ts.sm01_idte ,\n\ts.sm01_refn ,\n\ts.sm01_time ,\n\ts.sm01_wonu, \n\ts.sm01_data ,\n\ts.sm01_logid ,\n\ts.sm01_arateid ,\n\ts.sm01_callid ,\n\ts.sm01_user ,\n\ts.sm01_cdte ,\n\ts.sm01_tim2 ,\n\ts.sm01_callnumber ,\n\ts.sm01_storig ,\n\ts.sm01_stprev, \n\ts.sm01_stnext ,\n\ts.sm01_pchg ,\n\ts.sm01_orig_sequ)'\n\t)}",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "MT02 Snowflake Merge Operation_copy1_copy1",
							"description": "merge statement to the raw tables. this helps avoids any duplication and upsert the rows needed.",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "MT02 Incremental Delta Load to Staging",
									"dependencyConditions": [
										"Succeeded",
										"Skipped"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "LRS_Snowflake_V2",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@{concat('merge into ', item().snowflake_schema,'.','mt02 t \nusing ', \n    item().snowflake_schema,'.','mt02_staging s \non concat(t.mt02_refr, t.mt02_lmdate) = concat(s.mt02_refr, s.mt02_lmdate) \nwhen matched then update set \n\tt.mt02_refr= s.mt02_refr ,\n\tt.mt02_cust= s.mt02_cust ,\n\tt.mt02_site= s.mt02_site ,\n\tt.mt02_serv= s.mt02_serv ,\n\tt.mt02_date =s.mt02_date ,\n\tt.mt02_code= s.mt02_code ,\n\tt.mt02_amnt= s.mt02_amnt ,\n\tt.mt02_desc= s.mt02_desc ,\n\tt.mt02_qty= s.mt02_qty ,\n\tt.mt02_idte= s.mt02_idte ,\n\tt.mt02_rout= s.mt02_rout ,\n\tt.mt02_sequ= s.mt02_sequ ,\n\tt.mt02_rate= s.mt02_rate ,\n\tt.mt02_lmuser= s.mt02_lmuser ,\n\tt.mt02_lmdate= s.mt02_lmdate ,\n\tt.mt02_desc0= s.mt02_desc0 ,\n\tt.mt02_desc1= s.mt02_desc1 ,\n\tt.mt02_desc2= s.mt02_desc2 ,\n\tt.mt02_desc3= s.mt02_desc3 ,\n\tt.mt02_lf05id= s.mt02_lf05id ,\n\tt.mt02_own= s.mt02_own ,\n\tt.mt02_schid= s.mt02_schid,\n\tt.mt02_schidw= s.mt02_schidw ,\n\tt.mt02_fcty= s.mt02_fcty \n\nwhen not matched then insert \n\t(\n\tt.mt02_refr ,\n\tt.mt02_cust ,\n\tt.mt02_site ,\n\tt.mt02_serv ,\n\tt.mt02_date ,\n\tt.mt02_code ,\n\tt.mt02_amnt ,\n\tt.mt02_desc ,\n\tt.mt02_qty ,\n\tt.mt02_idte ,\n\tt.mt02_rout ,\n\tt.mt02_sequ ,\n\tt.mt02_rate ,\n\tt.mt02_lmuser ,\n\tt.mt02_lmdate ,\n\tt.mt02_desc0 ,\n\tt.mt02_desc1 ,\n\tt.mt02_desc2 ,\n\tt.mt02_desc3 ,\n\tt.mt02_lf05id ,\n\tt.mt02_own ,\n\tt.mt02_schid ,\n\tt.mt02_schidw ,\n\tt.mt02_fcty \n\t)\nvalues \n\t(\ns.mt02_refr ,\n\ts.mt02_cust ,\n\ts.mt02_site ,\n\ts.mt02_serv ,\n\ts.mt02_date ,\n\ts.mt02_code ,\n\ts.mt02_amnt ,\n\ts.mt02_desc ,\n\ts.mt02_qty ,\n\ts.mt02_idte ,\n\ts.mt02_rout ,\n\ts.mt02_sequ ,\n\ts.mt02_rate ,\n\ts.mt02_lmuser ,\n\ts.mt02_lmdate ,\n\ts.mt02_desc0 ,\n\ts.mt02_desc1 ,\n\ts.mt02_desc2 ,\n\ts.mt02_desc3 ,\n\ts.mt02_lf05id ,\n\ts.mt02_own ,\n\ts.mt02_schid ,\n\ts.mt02_schidw ,\n\ts.mt02_fcty )'\n\t)}\n",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "SM01 Incremental Delta Load to Staging",
							"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Snowflake Create Staging Tables",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "select * from SM01\nwhere SM01_DATE > DATEADD(day, -7, GETDATE())",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "SnowflakeV2Sink",
									"importSettings": {
										"type": "SnowflakeImportCopyCommand"
									}
								},
								"enableStaging": true,
								"stagingSettings": {
									"linkedServiceName": {
										"referenceName": "msaz01_dm01_Azure_Blob",
										"type": "LinkedServiceReference"
									},
									"path": "staging"
								}
							},
							"inputs": [
								{
									"referenceName": "TRUX_LEGACY01",
									"type": "DatasetReference",
									"parameters": {
										"schema": "dbo",
										"table": {
											"value": "@item().table_name",
											"type": "Expression"
										},
										"database": {
											"value": "@item().sql_db_name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "LRS_Snowflake_Raw_V2",
									"type": "DatasetReference",
									"parameters": {
										"Snowflake_Sink_Table": "@concat(item().table_name,'_STAGING')",
										"Snowflake_Schema": {
											"value": "@item().snowflake_schema",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "MT02 Incremental Delta Load to Staging",
							"description": "Copying delta rows from sql server to the staging tables created for each instance in snowflake (these tables will be dropped after all activities are completed)",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Snowflake Create Staging Tables",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "select * from MT02\nwhere MT02_DATE > DATEADD(day, -7, GETDATE())",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "SnowflakeV2Sink",
									"importSettings": {
										"type": "SnowflakeImportCopyCommand"
									}
								},
								"enableStaging": true,
								"stagingSettings": {
									"linkedServiceName": {
										"referenceName": "msaz01_dm01_Azure_Blob",
										"type": "LinkedServiceReference"
									},
									"path": "staging"
								}
							},
							"inputs": [
								{
									"referenceName": "TRUX_LEGACY01",
									"type": "DatasetReference",
									"parameters": {
										"schema": "dbo",
										"table": {
											"value": "@item().table_name",
											"type": "Expression"
										},
										"database": {
											"value": "@item().sql_db_name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "LRS_Snowflake_Raw_V2",
									"type": "DatasetReference",
									"parameters": {
										"Snowflake_Sink_Table": "@concat(item().table_name,'_STAGING')",
										"Snowflake_Schema": {
											"value": "@item().snowflake_schema",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"Maximum_DIU": {
				"type": "int",
				"defaultValue": 8
			},
			"Degree_Copy_Parallelism": {
				"type": "int",
				"defaultValue": 8
			},
			"LastProcessedId": {
				"type": "string"
			},
			"CurrentDate": {
				"type": "string"
			},
			"SchemaName": {
				"type": "string"
			},
			"TableName": {
				"type": "string"
			}
		},
		"variables": {
			"tempArray": {
				"type": "Array"
			},
			"TempResult": {
				"type": "Array"
			},
			"ResultsArray": {
				"type": "Array"
			},
			"OutputArray": {
				"type": "Array"
			},
			"append": {
				"type": "Array"
			}
		},
		"folder": {
			"name": "Test"
		},
		"annotations": [],
		"lastPublishTime": "2024-08-30T17:58:00Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}